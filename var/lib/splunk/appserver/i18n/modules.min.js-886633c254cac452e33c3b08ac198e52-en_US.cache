
try{i18n_register({"catalog":{"+-getParam: Splunk cannot get param; null key name passed":"getParam: Splunk cannot get param; null key name passed"},"plural":function(n){return n==1?0:1;}});
Splunk.Module=$.klass({
CURRENT_VIEWSTATE_KEY:'_current',
HIDDEN_MODULE_KEY:'hidden module',
_childModulesHaveFreshContexts:true,
_state:Splunk.util.moduleLoadStates["WAITING_FOR_INITIALIZATION"],
initialize:function(container){
this.logger=Splunk.Logger.getLogger("AbstractModule.js");
if(this.parent||this.container||this._children){
this.logger.error(this.moduleType,".initialize - Assertion Failed. Modules may not be reinitialized.");}
this.container=$(container);
this.resultsContainer=$('<div/>').appendTo(this.container);
this.parent=null;
this._children=[];
this.childEnforcement=0;
this.parentEnforcement=0;
this.baseContext=null;
this._paramsToUseAsSettings=[];
this._lastSuccessfulDispatchedContext=null;
this._previousResultParams=null;
this.moduleId=this.container.attr('id');
this._invisibilityModes={};
this.importParams();
this.getResultsRetryCounter=0;
this.getResultsRetryPolicy=3;
this.getResultsXHRObject=null;
this.pushContextWhenReady=false;
$(document).bind('viewDataChange',this.onViewDataChange.bind(this));
$(document).bind('moduleLoadStatusChange',function(event,module,statusInt){
if(module.moduleId==this.moduleId){
this.onLoadStatusChange(statusInt);}}.bind(this));},
getLoadState:function(){
return this._state;},
setLoadState:function(statusInt,suppressEvent){
var oldState=this._state;
if(oldState!=statusInt){
this._state=statusInt;
if(!suppressEvent){
$(document).trigger('moduleLoadStatusChange',[this,statusInt]);}}},
markPageLoadComplete:function(){
this._pageLoadComplete=true;},
isPageLoadComplete:function(){
return this._pageLoadComplete||false;},
requiresAsynchronousLoading:function(){return false;},
onLoadStatusChange:function(statusInt){
if(!this._hierarchyValidated&&(statusInt>=Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT)){
this.validateHierarchy();}},
mergeLoadParamsIntoContext:function(namespace,paramNames){
for(var i=0;i<paramNames.length;i++){
var pair={namespace:namespace,param:paramNames[i]};
this._paramsToUseAsSettings.push(pair);}},
requiresDispatch:function(search){return false;},
onContextChange:function(){},
_fireDispatch:function(search){
if(!search){
this.logger.error("Assertion failed.  required arg 'search' not passed to ",this.moduleType,"._fireDispatch");
return;}
if(this.dispatchAlreadyInProgress){
return false;}else{
this.dispatchAlreadyInProgress=true;
var USE_AUTOMATIC_STRING_REPLACEMENT=false;
if(USE_AUTOMATIC_STRING_REPLACEMENT){
var context=this.getContext();
var baseSearch=search.toString();
var tokens=Splunk.util.discoverReplacementTokens(baseSearch);
for(var i=0;i<tokens.length;i++){
var replacer=new RegExp("\\$"+tokens[i]+"\\$");
baseSearch=Splunk.util.replaceTokens(baseSearch,replacer,context.get(tokens[i]));
search.setBaseSearch(baseSearch);}}
search.dispatchJob(this._fireDispatchSuccessHandler.bind(this),this._fireDispatchFailHandler.bind(this),this.getGroupName());}},
_removeLastSearch:function(){
var lastSearch=this._lastSuccessfulDispatchedSearch;
if(lastSearch&&lastSearch.isJobDispatched()&&!lastSearch.job.canBeAutoCancelled()){
Splunk.Globals['Jobber'].removeJob(lastSearch.job.getSearchId());}else if(lastSearch&&lastSearch.isJobDispatched()&&lastSearch.job.canBeAutoCancelled()){
lastSearch.job.cancel();}},
_fireDispatchSuccessHandler:function(dispatchedSearch){
this.logger.debug("success - context dispatched for search=",dispatchedSearch.toString());
var context=this.getModifiedContext();
context.set("search",dispatchedSearch);
this.withEachDescendant(function(module){
module.reset();});
this.pushContextToChildren(context);
this._removeLastSearch();
this._lastSuccessfulDispatchedSearch=dispatchedSearch;
this.dispatchAlreadyInProgress=false;},
_fireDispatchFailHandler:function(failedSearch){
this.dispatchAlreadyInProgress=false;
this.logger.error(this.moduleType," Context failed to dispatch job for search=",failedSearch.toString());
this._removeLastSearch();
var descendants=this.getDescendants();
for(var i=0,len=descendants.length;i<len;i++){
descendants[i].reset();}},
someChildrenRequireDispatch:function(search){
var requireDispatch=false;
this.withEachChild(function(child){
if(child.requiresDispatch(search)){
requireDispatch=true;
return false;}});
return requireDispatch;},
onBeforeJobDispatched:function(search){},
ensureFreshContexts:function(){
if(this.getContext().get('search').isJobDispatched()){
return;}
var stale=null;
this.withEachAncestor(function(module){
if(module.getContext().get('search').isJobDispatched()){
return false;}
if(!module._childModulesHaveFreshContexts){
stale=module;}},true);
if(stale){
stale.withEachDescendant(function(child){
child.baseContext=null;});
stale.setChildContextFreshness(true);}},
setChildContextFreshness:function(bool){
this._childModulesHaveFreshContexts=(!!bool);},
getContext:function(){
var context=null;
if(this.baseContext){
context=this.baseContext.clone();}else{
if(this.parent){
var baseContext=this.parent.getModifiedContext();
if(baseContext!=null){
if(this.getLoadState()<Splunk.util.moduleLoadStates.HAS_CONTEXT){
this.logger.debug(this.moduleType+" - Although we're still loading the page we have to let modules cache contexts.");
this.parent.setChildContextFreshness(false);}
this.baseContext=baseContext;
context=baseContext.clone();}else{
var exception_msg=sprintf("getContext was called by %(moduleId)s with no baseContext. %(moduleId)s's parent returned a null context. This should not happen.",this);
throw(exception_msg);}}else{
context=new Splunk.Context();
var search=new Splunk.Search();
context.set("search",search);}}
for(var i=0,len=this._paramsToUseAsSettings.length;i<len;i++){
var pair=this._paramsToUseAsSettings[i];
var namespacedKey=pair.namespace+"."+pair.param;
if(this.getParam(pair.param)!=null&&!context.has(namespacedKey)){
context.set(namespacedKey,this.getParam(pair.param));}}
return context;},
pushContextToChildren:function(explicitContext){
var readiness=this.isReadyForContextPush()
if(readiness==Splunk.Module.CANCEL){
if(!this.isPageLoadComplete()){
var propagateLoadCompleteFlag=function(module){
module.markPageLoadComplete();
module.withEachChild(function(child){
propagateLoadCompleteFlag(child);});};
propagateLoadCompleteFlag(this);}
return;}else if(readiness==Splunk.Module.DEFER){
this.pushContextWhenReady=true;
return;}else if(readiness==Splunk.Module.CONTINUE){
if(this.pushContextWhenReady){
this.pushContextWhenReady=false;}}else{
this.logger.error(this.moduleType+" returned illegal value from isReadyForContextPush");}
this.ensureFreshContexts();
var childContext=explicitContext||this.getModifiedContext();
if(childContext==null||!childContext.has("search")){
this.logger.warn(this.moduleType,'TODO  - hit old behaviour of returning NULL - getModifiedContext returns a context with a "null" search, stopping the pushContextToChildren call.');
return;}else if(this.getLoadState()<Splunk.util.moduleLoadStates.HAS_CONTEXT){
return;}
this.withEachDescendant(function(module){
module.setLoadState(Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT);});
var search=childContext.get("search");
if(this.someChildrenRequireDispatch(search)){
search.abandonJob();
this.withEachDescendant(function(module){
module.onBeforeJobDispatched(search);});
this._fireDispatch(search);
return;}
this.withEachChild(function(child){
child.baseContext=childContext;
child.setLoadState(Splunk.util.moduleLoadStates.HAS_CONTEXT);
child.onContextChange();
child.pushContextToChildren();
if(!child.isPageLoadComplete()){
child.markPageLoadComplete();}});
this.setChildContextFreshness(true);},
isReadyForContextPush:function(){
if(this.getLoadState()<Splunk.util.moduleLoadStates.HAS_CONTEXT)return false;
return true},
resetContext:function(){
if(this.baseContext&&this.baseContext.has("search")){
var search=this.baseContext.get("search");
if(search.isJobDispatched()){
Splunk.Globals['Jobber'].removeJob(search.job.getSearchId());}}
this.baseContext=null;
this._lastSuccessfulDispatchedSearch=null;},
getModifiedContext:function(){
if(!this.baseContext){
this.logger.debug(this.moduleType,"does not override getModifiedContext, has no local cache and thus is backfilling");}
return this.getContext();},
applyContext:function(context){
if(!this.isPageLoadComplete()){
this.logger.warn(this.moduleType," does not implement applyContext");}},
passContextToParent:function(context){
if(this.parent){
if(!this.isPageLoadComplete()){
this.parent.applyContext(context)
this.parent.passContextToParent(context);}
else if(!this.parent.applyContext(context)){
return this.parent.passContextToParent(context);}}else if(!this.isPageLoadComplete()){
var newBaseContext=context.clone();
var topSearch=newBaseContext.get("search");
newBaseContext.set("search",topSearch);
this.baseContext=newBaseContext;
return;}
this.logger.warn("an upstream interaction made it to the top of the tree (to ",this.moduleType,") because none of its downstream modules were able to take any action.")
return false;},
addChild:function(child){
if(child.parent){
this.logger.error(this.moduleType,".addChild - Assertion failed. this",child.moduleType," instance already has a parentModule. There Can Be Only One.");}
this._children.push(child);
child.parent=this;},
removeChild:function(childModule){
var newChildrenList=[];
for(var i=0;i<this._children.length;i++){
if(childModule==this._children[i]){
this._children[i].parent=null;}else{
newChildrenList.push(this._children[i]);}}
this._children=newChildrenList;},
validateHierarchy:function(){
this._hierarchyValidated=true;
var msg=false;
if(this.childEnforcement==Splunk.Module.ALWAYS_REQUIRE&&this._children.length==0){
msg="This view has a %s module but it is configured with no child modules to push its changes to. This represents a configuration error.";}else if(this.childEnforcement==Splunk.Module.NEVER_ALLOW&&this._children.length>0){
msg="This view has a %s module configured to push changes to downstream modules. This module never has any changes to push so this represents a configuration error."}
if(this.parentEnforcement==Splunk.Module.ALWAYS_REQUIRE&&!this.parent){
msg="This view has a %s module but that module has no parent modules to receive changes from. This module will not work in this configuration so this represents a configuration error.";}else if(this.parentEnforcement==Splunk.Module.NEVER_ALLOW&&this.parent){
msg="This view has a %s module but that module receives changes from other modules upstream. Since this module will ignore all such changes, this represents a configuration error.";}
if(msg){
if($("div.Message").length>0){
var messenger=Splunk.Messenger.System.getInstance();
messenger.send('error','splunk',_(sprintf(msg,this.moduleType)));}else{
this.displayInlineErrorMessage(_(sprintf(msg,this.moduleType)));}}},
withEachAncestor:function(fn,reverse){
var ancestors=this.getAncestors();
if(reverse)ancestors.reverse();
for(var i=0,j=ancestors.length;i<j;i++){
var resp=fn(ancestors[i]);
if(resp===false)return false;}
return true;},
withEachChild:function(fn){
var children=this._children;
for(var i=0,j=children.length;i<j;i++){
var resp=fn(children[i]);
if(resp===false)return false;}
return true;},
withEachDescendant:function(fn){
this.withEachChild(function(child){
if(fn(child)===false)return false;
child.withEachDescendant(fn);});
return true;},
getRootAncestor:function(){
var pointer=this,resp=null;
while(pointer){
resp=pointer;
pointer=pointer.parent;}
return resp;},
getAncestors:function(){
var pointer=this.parent,resp=[];
while(pointer){
resp.unshift(pointer);
pointer=pointer.parent;}
return resp;},
getGroupName:function(){
if(this._params.hasOwnProperty("group")){
return this._params["group"]}
return(this.parent)?this.parent.getGroupName():false;},
getDescendants:function(){
var resp=this._children.slice();
for(var i=0;i<resp.length;i++){
resp=resp.concat(resp[i]._children);}
return resp;},
getModulesInTree:function(){
var root=this.getRootAncestor();
return[root].concat(root.getDescendants());},
show:function(invisibilityMode){
invisibilityMode=invisibilityMode||"global";
if(this._invisibilityModes.hasOwnProperty(invisibilityMode)){
delete this._invisibilityModes[invisibilityMode];}
this._changeVisibility();},
hide:function(invisibilityMode){
invisibilityMode=invisibilityMode||"global";
this._invisibilityModes[invisibilityMode]=1;
this._changeVisibility();},
showDescendants:function(invisibilityMode){
if(!this.isSwitcherLeaf){
for(var i=0;i<this._children.length;i++){
this._children[i].show(invisibilityMode);
this._children[i].showDescendants(invisibilityMode);}}},
hideDescendants:function(invisibilityMode){
if(!this.isSwitcherLeaf){
for(var i=0,len=this._children.length;i<len;i++){
this._children[i].hide(invisibilityMode);
this._children[i].hideDescendants(invisibilityMode);}}},
_changeVisibility:function(){
var visible=true;
for(var mode in this._invisibilityModes){
if(this._invisibilityModes.hasOwnProperty(mode)){
visible=false;}}
if(visible)this.container.show();
else this.container.hide();},
onViewDataChange:function(event,data){},
pushViewDataChange:function(){
Splunk.Globals.ModuleLoader.refreshViewData();},
importParams:function(){
this._params={};
this._stickyParamList=[];
this._persistableParamList=[];
if(!Splunk.Module.loadParams){
this.logger.info('importParams - view does not have any parameters defined');
return;}
if(Splunk.Module.loadParams.hasOwnProperty(this.moduleId)){
this._params=$.extend(true,{},Splunk.Module.loadParams[this.moduleId]);}
if(!Splunk.Module.paramConfig){
this.logger.info('importParams - view does not have parameter config defined');
return;}
if(Splunk.Module.paramConfig.sticky.hasOwnProperty(this.moduleId)){
this._stickyParamList=Splunk.Module.paramConfig.sticky[this.moduleId];}
if(Splunk.Module.paramConfig.persistable.hasOwnProperty(this.moduleId)){
this._persistableParamList=Splunk.Module.paramConfig.persistable[this.moduleId];}},
getParam:function(key,fallbackValue){
if(!key){
throw Error(_('getParam: Splunk cannot get param; null key name passed'));}
if(this._params.hasOwnProperty(key)){
return this._params[key];}else if(fallbackValue!=null){
return fallbackValue;}else{
return null;}},
setParam:function(key,value,isSessionOnly){
this._params[key]=value;
if(this.getContext().get("viewStateId")){
this.logger.debug('setParam - skipping param write; inside viewstate');
return;}
if($.inArray(key,this._stickyParamList)==-1&&!this._matchesWildcardParam(key)){
this.logger.info('setParam - skipping param write: "'+key+'" is not sticky');
return;}
if(!isSessionOnly){
if(!(typeof(value)=='string')&&!(typeof(value)=='boolean')&&isNaN(value)){
this.logger.debug('setParam - Cannot persist non-primitive value: key='
+key+' type='+typeof(value));
return;}
$.ajax({
type:'POST',
url:this._buildParamUri(),
data:this._buildParamName(key)+'='+encodeURIComponent(value),
dataType:'json',
success:this._setParamCallback.bind(this),
error:this._setParamErrorback.bind(this)});}},
snapshotParamset:function(){
var output={};
var value=null;
var wildcardPrefixes=this._getWildcardPrefixes();
for(var key in this._params){
if((this._params.hasOwnProperty(key)&&$.inArray(key,this._persistableParamList)>-1)||this._matchesWildcardParam(key))
{
value=this._params[key];
if(!(typeof(value)=='string')&&!(typeof(value)=='boolean')&&isNaN(value)){
this.logger.warn('snapshotParamset - Cannot persist non-primitive value: key='
+key+' type='+typeof(value));
continue;}
output[key]=this._params[key];}}
return output;},
_getWildcardPrefixes:function(){
var wildcardPrefixes={};
for(var i=0,L=this._persistableParamList.length;i<L;i++){
var paramName=this._persistableParamList[i];
if(paramName.substring(paramName.length-1)=="*"){
wildcardPrefixes[paramName.substring(0,paramName.length-1)]=1;}}
return wildcardPrefixes;},
_matchesWildcardParam:function(key,forceRefresh){
if(!this.hasOwnProperty('_wildcardPrefixes')){
this._wildcardPrefixes=this._getWildcardPrefixes();}
for(var prefix in this._wildcardPrefixes){
if(key.substring(0,prefix.length)==prefix&&this._wildcardPrefixes.hasOwnProperty(prefix)){
return prefix+'*';}}
return false;},
_setParamCallback:function(data,textStatus){
this.logger.debug('_setParamCallback - response: '+data);},
_setParamErrorback:function(xhr,status,error){
this.logger.error('_setParamCallback - error: '+xhr.responseText);},
_buildParamUri:function(viewstate_id){
viewstate_id=viewstate_id||'_current';
return Splunk.util.make_url('app',
Splunk.util.getCurrentApp(),
Splunk.util.getCurrentView(),
viewstate_id);},
_buildParamName:function(key){
if(key==null){
throw Error('_buildParamName - Cannot build name; null key');}
return encodeURIComponent(this.moduleId+'.'+key);},
getResultURL:function(params){
var uri=Splunk.util.make_url('module',Splunk.util.getConfigValue('SYSTEM_NAMESPACE'),this.moduleType,'render');
params=params||{};
if(!params.hasOwnProperty('client_app')){
params['client_app']=Splunk.util.getCurrentApp();}
uri+='?'+Splunk.util.propToQueryString(params);
return uri;},
getResultParams:function(){
return{};},
resetXHRStatus:function(){
this.getResultsXHRObject=null;
this.getResultsRetryCounter=0;},
getResultsErrorHandler:function(xhr,textStatus,errorThrown){
this.resetXHRStatus();
if(textStatus=='abort'){
this.logger.debug(this.moduleType,'.getResults() aborted');}else{
this.logger.warn(this.moduleType,'.getResults() error; textStatus='+textStatus+' errorThrown='+errorThrown);}},
getResultsCompleteHandler:function(xhr,textStatus){
this.resetXHRStatus();},
getResults:function(){
if(this.getResultsXHRObject){
if(this.getResultsXHRObject.readyState<4){
var job=this.getContext().get("search").job;
if(job&&!job.isDone()&&this.getResultsRetryCounter<this.getResultsRetryPolicy){
this.getResultsRetryCounter++;
this.logger.info('XHR already in-flight for module',this.moduleId,'attempt',this.getResultsRetryCounter,'of',this.getResultsRetryPolicy,'exit out');
return;}else{
this.abortGetResults();
this.resetXHRStatus();
this.logger.info('XHR in-flight destroyed for module',this.moduleId,'for job',job.getSearchId(),'and replaced with new one');}}else{
this.resetXHRStatus();}}
this.logger.info('XHR clear for takeoff for module',this.moduleId);
var params=this.getResultParams();
this._previousResultParams=$.extend(true,{},params);
if(Splunk._testHarnessMode){
this.logger.debug(this.moduleType,".getResults -- we are in _testHarnessMode. If you're not running unit tests right now, something is horribly wrong.")
return false;}
var resultUrl=this.getResultURL(params);
if(!resultUrl){
this.logger.warn("getResultsURL() appears to be unimplemented or returning null for this instance.");}
var callingModule=this.moduleType;
this.getResultsXHRObject=$.ajax({
type:"GET",
cache:($.browser.msie?false:true),
url:resultUrl,
beforeSend:function(xhr){
xhr.setRequestHeader('X-Splunk-Module',callingModule);},
success:function(htmlFragment,textStatus,xhr){
if(params["sid"]){
var job=this.getContext().get("search").job;
if(job&&(params["sid"]!=job.getSearchId())){
this.logger.warn(this.moduleType,"while a request to a particular sid was in-flight, it appears the sid changed underneath us. We are dropping the response and NOT calling renderResults. old sid is",params["sid"]," and the new sid is ",job.getSearchId());
return;}}
if(xhr.status==0){
return;}
this.renderResults(htmlFragment);
this.resetXHRStatus();}.bind(this),
complete:this.getResultsCompleteHandler.bind(this),
error:this.getResultsErrorHandler.bind(this)});},
haveResultParamsChanged:function(){
var currentResultParams=this.getResultParams();
return(!Splunk.util.objectSimilarity(this._previousResultParams,currentResultParams));},
abortGetResults:function(){
if(this.getResultsXHRObject&&this.getResultsXHRObject.readyState<4){
this.logger.info('Aborting getResults request for',this.moduleType);
this.getResultsXHRObject.abort();}},
renderResults:function(htmlFragment,turbo){
if(!htmlFragment){
this.resultsContainer.html('No content available.');
return;}
if(turbo){
this.resultsContainer=$(Splunk.util.turboInnerHTML(this.resultsContainer[0],htmlFragment));}else{
this.resultsContainer.html(htmlFragment);}
if(this.onResultsRendered){
this.onResultsRendered();}},
reset:function(){
this.abortGetResults();
this.resetXHRStatus();
this.resetContext();
this.resetUI();},
resetUI:function(){
this.logger.warn(this.moduleType,'has not implemented a resetUI method.');},
resizeWidthToParent:function(){
this.container.width(this.container.parent().width());},
displayInlineErrorMessage:function(message){
this.logger.error(message);
var errorDiv=$('div.error',this.container);
if(errorDiv.length==0){
errorDiv=$("<div>").addClass("error").appendTo(this.container);}
errorDiv.text(message);
this.container.show();},
printHierarchy:function(indentation){
if(!indentation)indentation="";
this.logger.debug(indentation,this.moduleType);
for(var i=0;i<this._children.length;i++){
this._children[i].printHierarchy(indentation+"    ");}}});
Splunk.Module.ALWAYS_REQUIRE=1;
Splunk.Module.NEVER_ALLOW=-1;
Splunk.Module.CANCEL=-1;
Splunk.Module.DEFER=0
Splunk.Module.CONTINUE=1;;}catch(e){var err="The module 'Splunk.Module' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.Module.DispatchingModule=$.klass(Splunk.Module,{
initialize:function($super,container){
this.logger=Splunk.Logger.getLogger("search_modules.js");
$(document).bind('jobProgress',function(event,progressingJob){
if(!this.baseContext||!this.baseContext.has("search"))return false;
var ourJob=this.baseContext.get("search").job;
if(ourJob.getSearchId()==progressingJob.getSearchId()){
this.onJobProgress(event);}}.bind(this));
$(document).bind('jobDone',function(event,doneJob){
if(!this.baseContext||!this.baseContext.has("search"))return false;
var ourJob=this.baseContext.get("search").job;
if(ourJob.getSearchId()==doneJob.getSearchId()){
this.onJobDone(event);}}.bind(this));
$(document).bind('jobStatusChanged',function(event,sid,status){
if(!this.baseContext||!this.baseContext.has("search"))return false;
var search=this.baseContext.get("search");
if((search.job.getSearchId()==sid)){
this.onJobStatusChange(event,status);}}.bind(this));
$super(container);},
baseContext:false,
requiresTransformedResults:function(){return false},
requiresDispatch:function(search){
search=search||new Splunk.Search();
if(this.requiresTransformedResults()){
var range=search.getTimeRange();
if(range.isSubRangeOfJob()){
return true;}}
try{
return!search.isJobDispatched();}catch(e){
this.logger.error("TypeError ",this.moduleType,".requiresDispatch() was given a null search instance.");
return false;}},
pushContextToChildren:function($super,explicitContext){
var context=explicitContext||this.getModifiedContext();
var search=context.get("search");
if(!search.isJobDispatched()&&this.requiresDispatch(search)){
this.logger.error(this.moduleType,".onContextChange - hit the corner case where a DispatchingModule instance requires dispatch for q=",search.toString(),"timeRange=",search.getTimeRange());
this._fireDispatch(search);}else{
$super(context);}},
onJobProgress:function(event){},
onJobDone:function(event){},
onJobStatusChange:function(event,status){
if(status=='cancel'){
this.reset();}}});
Splunk.Module.DispatchingModule.isAbstract=true;;}catch(e){var err="The module 'Splunk.Module.DispatchingModule' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.DispatchingModule",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});Splunk.Module.ServerSideInclude=$.klass(Splunk.Module,{});;}catch(e){var err="The module 'Splunk.Module.ServerSideInclude' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.ServerSideInclude",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});Splunk.Module.ConvertToIntention=$.klass(Splunk.Module,{
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.parentEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this._legacyIntentionReplace=/\$target\$/;
if(this.getParam('settingToConvert')){
this._matches=[];}else{
this._matches=Splunk.util.discoverReplacementTokens(this.getParam('intention'));}
this.hide(this.HIDDEN_MODULE_KEY);},
getModifiedContext:function(){
var context=this.getContext();
var legacyTarget=this.getParam('settingToConvert');
var intention=$.extend(true,{},this.getParam('intention'));
var search=context.get("search");
if(legacyTarget){
var setting=context.get(legacyTarget);
if(!setting)setting="";
intention=Splunk.util.replaceTokens(intention,this._legacyIntentionReplace,setting);}else{
for(var i=0;i<this._matches.length;i++){
var key=this._matches[i]
var replacer=new RegExp("\\$"+key+"\\$");
intention=Splunk.util.replaceTokens(intention,replacer,context.get(key));}}
search.addIntention(intention);
context.set("search",search);
return context;}});;}catch(e){var err="The module 'Splunk.Module.ConvertToIntention' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.ConvertToIntention",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});Splunk.Module.ConvertToDrilldownSearch=$.klass(Splunk.Module,{
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.parentEnforcement=Splunk.Module.ALWAYS_REQUIRE;
if(Splunk.util.normalizeBoolean(this.getParam("enableDebugOutput"))){
this.setUpDebuggingCrap();}
this.clickDirection="down";
this.drilldownPrefix=this.getParam("drilldownPrefix");
this.hide(this.HIDDEN_MODULE_KEY);},
addDrilldownIntention:function(search,click){
var intention={
arg:{
vals:[]},
flags:["keepevents"],
name:"drilldown"}
var vals=intention.arg.vals;
intention.arg.vals[0]=[];
intention.arg.vals[0][0]=click.name;
intention.arg.vals[0][1]=click.value;
intention.arg.vals[1]=[];
intention.arg.vals[1][0]=click.name2;
intention.arg.vals[1][1]=click.value2;
for(var i=0;i<intention.arg.vals.length;i++){
for(var j=0;j<intention.arg.vals[i].length;j++){
if(!intention.arg.vals[i][j]&&(""+intention.arg.vals[i][j]=="undefined")){
intention.arg.vals[i][j]=null;}}}
search.addIntention(intention);
return search;},
setUpDebuggingCrap:function(){
var moduleInstance=this;
$("<input type='checkbox' checked=\"checked\"/>").click(function(){
if($(this).prop('checked')){
moduleInstance.debugContainer.show();
moduleInstance._propagationPulldown.show();}else{
moduleInstance.debugContainer.hide();
moduleInstance._propagationPulldown.hide();}}).appendTo(this.container);
this.container.append("Show debug foo");
this._propagationPulldown=$("<div>").text("drilldown clicks should propagate:").append(
$("<select>").append($("<option value='up'>Up</option").text("Up (experimental)")).append($("<option selected='selected' value='down'></option").text("Down")).change(function(){
moduleInstance.clickDirection=$(this).val();})).appendTo(this.container);
this.debugContainer=$("<div>").appendTo(this.container);},
outputDebugMessages:function(){
if(!this.debugContainer)return;
var context=this.getContext();
var click=context.getAll(this.drilldownPrefix);
var search=context.get("search");
var debugMsg="<h3>Debugging the drilldown intention args</h3>";
debugMsg+="search = "+search.toString()+"<br/>";
for(name in click){
debugMsg+=name+"="+click[name]+"<br/>";}
this.debugContainer.html(debugMsg);},
pushContextToChildren:function($super,explicitContext){
var click=this.getContext().getAll(this.drilldownPrefix);
if(click.name||click.value||click.name2||click.value2){
if(this.clickDirection=="down"){
return $super(explicitContext);}
else{
this.outputDebugMessages();
var upwardContext=new Splunk.Context();
var search=new Splunk.Search();
upwardContext.set("search",search);
this.applyKeysToContext(click,upwardContext);
this.passContextToParent(upwardContext);}}},
applyKeysToContext:function(click,context){
if(click&&(click.name||click.value||click.name2||click.value2)){
var search=context.get("search");
search.abandonJob();
if(click.name=="_time"){
if(click.timeRange){
click.value=click.timeRange.getEarliestTimeTerms()+"-"+click.timeRange.getLatestTimeTerms();
if(click.name2=="_time")click.value2=click.value;}else{
this.logger.error("we appear to have a time click but we are missing the TimeRange instance");}}
this.addDrilldownIntention(search,click);
context.set("search",search);}
return context;},
getModifiedContext:function(){
var context=this.getContext();
this.outputDebugMessages();
var click=context.getAll(this.drilldownPrefix);
this.applyKeysToContext(click,context);
return context;}});;}catch(e){var err="The module 'Splunk.Module.ConvertToDrilldownSearch' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.ConvertToDrilldownSearch",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.HiddenChartFormatter=$.klass(Splunk.Module,{
SETTING_PREFIX:'charting.',
initialize:function($super,container){
$super(container);
this.logger=Splunk.Logger.getLogger("HiddenChartFormatter.js");
this.hide(this.HIDDEN_MODULE_KEY);},
getModifiedContext:function(){
var context=this.getContext();
for(var paramName in this._params){
if(this._params.hasOwnProperty(paramName)){
var name=(paramName.indexOf(this.SETTING_PREFIX)!=0)?this.SETTING_PREFIX+paramName:paramName;
context.set(name,this._params[paramName]);}}
return context;}});;}catch(e){var err="The module 'Splunk.Module.HiddenChartFormatter' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.HiddenChartFormatter",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.ViewRedirector=$.klass(Splunk.Module,{
DEFAULT_WINDOW_FEATURES:"status=1,toolbar=1,location=1,menubar=1,resizable=1,scrollbars=1,directories=1",
URI_PARAM_PREFIX:'uriParam.',
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.NEVER_ALLOW;
this.parentEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.popupWindowFeatures=this.DEFAULT_WINDOW_FEATURES;
try{
this.defaultToPopup=Splunk.util.normalizeBoolean(this._params["popup"],true);}catch(e){
this.defaultToPopup=true;
this.popupWindowFeatures=this._params["popup"];}
this.hide(this.HIDDEN_MODULE_KEY);},
addChild:function($super,child){
this.logger.error(this.moduleType,'module is configured with a child module. There is no reason to do this and so it is probably a mistake.');
return $super(child);},
pushContextToChildren:function($super,explicitContext){
var context=explicitContext||this.getContext();
var openInPopup=context.get("click.modifierKey")||this.defaultToPopup;
var search=context.get("search");
if(!this.isPageLoadComplete()){
this.logger.debug(this.moduleType+" - initial page load detected. Not redirecting");
return false;}
var args={};
var qsDict=Splunk.util.queryStringToProp(document.location.search);
if(Splunk.util.normalizeBoolean(this._params["sendBaseSID"])){
if(qsDict.hasOwnProperty("base_sid")){
args["base_sid"]=qsDict["base_sid"];}
else if(qsDict.hasOwnProperty("sid")){
args["base_sid"]=qsDict["sid"];}
else if(search.isJobDispatched()){
args["base_sid"]=context.job.getSearchId();}else{
this.logger.error(this.moduleType," is configured to send the underlying sid, but its context hasnt been dispatched and there are no sids in the URL");}}
if(search.getViewStateId()){
args["vs"]=search.getViewStateId();}
for(var key in this._params){
if(this._params.hasOwnProperty(key)){
if(key.length>this.URI_PARAM_PREFIX.length&&key.indexOf(this.URI_PARAM_PREFIX)==0){
args[key.substring(this.URI_PARAM_PREFIX.length)]=this._params[key];}}}
this.sendToView(args,openInPopup);},
sendToView:function(additionalArgs,openInPopup){
var context=this.getContext();
var search=context.get("search");
var options={};
options["windowFeatures"]=this.popupWindowFeatures;
search.sendToView(this._params["viewTarget"],additionalArgs,Splunk.util.normalizeBoolean(this._params["dispatchBeforeRedirect"]),openInPopup,options);}});;}catch(e){var err="The module 'Splunk.Module.ViewRedirector' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.ViewRedirector",err);});}try{i18n_register({"catalog":{"+-For the time being 'cancel' will not be able to restore settings until settings are resurrectable.":"For the time being 'cancel' will not be able to restore settings until settings are resurrectable."},"plural":function(n){return n==1?0:1;}});Splunk.Module.SubmitButton=$.klass(Splunk.Module,{
MAX_URI_LENGTH_IE:2048,
MAX_SUID_SUFFIX_LENGTH:38,
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.logger=Splunk.Logger.getLogger("SubmitButton.js")
this._previouslyPushedSearch=false;
if(this._params.hasOwnProperty("label")){
this._submitButton=$("button.splButton-primary",this.container);}else{
this._submitButton=$("input.searchButton",this.container);}
this._submitButton.click(this.onClick.bind(this));
this._queuedRequest=null;
var self=this;
if(Splunk.util.normalizeBoolean(this._params["updatePermalink"])){
this._useHistory=true;
this._justpushed=false;
this._nopush=false;
this._historyQueue=[];
this._args={};
$script(Splunk.util.make_url('/static/js/contrib/jquery.history.js'),function(){
for(var i=0;i<self._historyQueue.length;i++){
var history=self._historyQueue[i];
History.pushState(history,document.title,'?'+Splunk.util.propToQueryString(history));}
self._historyQueue=null;
History.Adapter.bind(window,'statechange',function(){
var State=History.getState();
var data=State.data;
if(!data||!data.q){
$.each(self.getModulesInTree(),function(idx,mod){mod.reset();});
self._args={};
if(Splunk.toBeResurrected){
var search=Splunk.Search.resurrect(Splunk.toBeResurrected);
var context=new Splunk.Context();
context.set("search",search);
context.set("from_history","1");
var parent=self;
while(parent.parent){
parent=parent.parent;
parent.baseContext=context;
parent.onContextChange();}
self.pushContextToChildren(context,true);}
return;}
if(self._justpushed){
self._justpushed=false;
return;}
var range=new Splunk.TimeRange(data.earliest,data.latest);
var search=new Splunk.Search(data.q,range);
var context=new Splunk.Context();
context.set("search",search);
Splunk.Globals.ModuleLoader.chartingSettingsToContext(data,context);
var parent=self;
while(parent.parent){
parent=parent.parent;}
self._args=data;
context.set("from_history","1");
parent.baseContext=context;
parent.onContextChange();
parent.pushContextToChildren(context);});});}else{
this._useHistory=false;}},
updateHistory:function(){
var context=this.getContext();
if(this._useHistory&&this._args.q)
this.pushHistory(context,true);},
pushHistory:function(context,replace){
if(!this._useHistory||!this.isPageLoadComplete())
return;
if(context.has("from_history")&&!replace){
return;}
var search=context.get("search");
var q=Splunk.util.addLeadingSearchCommand(search.toString());
var args={};
args["q"]=q
var range=search.getTimeRange();
if(range){
if(range.getEarliestTimeTerms()){
args["earliest"]=range.getEarliestTimeTerms();}
if(range.getLatestTimeTerms()){
args["latest"]=range.getLatestTimeTerms();}
if(range.isAllTime()){
args["earliest"]=0;}}
var settingNameMap={'charting.chart':'c.chart','charting.chartTitle':'c.title','charting.chart.stackMode':'c.stack','charting.layout.splitSeries':'c.split','charting.chart.nullValueMode':'c.nulls','charting.legend.placement':'c.legend','charting.primaryAxisTitle.text':'c.x.title','charting.secondaryAxisTitle.text':'c.y.title','charting.secondaryAxis.minimumNumber':'c.y.min','charting.secondaryAxis.maximumNumber':'c.y.max','charting.secondaryAxis.scale':'c.y.scale','charting.chart.showMarkers':'c.markers'};
var settings={};
this.withEachDescendant(function(module){
var mc=module.getModifiedContext();
if(module.moduleId.indexOf("JSChart")!=0)
return;
if(!mc.has("charting.chart")||!$(module.container).is(":visible")){
return;}
for(var keyType in{'charting':null}){
var props=mc.getAll(keyType);
for(var key in props){
if(props.hasOwnProperty(key)&&props[key]!=null){
var propName=keyType+"."+key;
settings[settingNameMap[propName]||propName]=props[key];}}}});
$.extend(args,settings);
replace=false;
if(Splunk.util.objectSimilarity(args,this._args)){
return;}else{
if((Splunk.util.objectSimilarity(this._args.q,args.q)&&
Splunk.util.objectSimilarity(this._args.earliest,args.earliest)&&
Splunk.util.objectSimilarity(this._args.latest,args.latest))){
replace=true;}
if(!this._args.q&&Splunk.toBeResurrected&&!Splunk.toBeResurrected.job)
replace=true;
this._args=args;}
if(this._historyQueue instanceof Array){
if(replace){
if(this._historyQueue.length>0){
this._historyQueue[this._historyQueue.length-1]=args;}}else{
this._historyQueue.push(args);}}else{
this._justpushed=true;
var qs=Splunk.util.propToQueryString(args);
if(History.isInternetExplorer()){
var baseUri=document.location.href.split("#")[0],
uriSegments=baseUri.split("/"),
lastSegment=uriSegments[uriSegments.length-1],
preQsLength=(baseUri+"#"+lastSegment+"/?").length;
if((preQsLength+qs.length+this.MAX_SUID_SUFFIX_LENGTH)>this.MAX_URI_LENGTH_IE){
qs="";}}
if(replace){
History.replaceState(args,document.title,'?'+qs);}else{
History.pushState(args,document.title,'?'+qs);}}},
pushContextToChildren:function($super,explicitContext,force){
var context=explicitContext||this.getModifiedContext();
var search=context.get("search");
if(force||!this.isPageLoadComplete()||Splunk.util.normalizeBoolean(this._params["allowSoftSubmit"])){
$super(explicitContext);}},
onContextChange:function(){},
applyContext:function($super,context){
var search=context.get("search");
this._previouslyPushedSearch=search;
return $super(context);},
_fireDispatch:function($super,dispatchedSearch){
if(this.dispatchAlreadyInProgress==true){
this._queuedRequest=dispatchedSearch;}
$super(dispatchedSearch);},
_fireDispatchSuccessHandler:function(dispatchedSearch){
this.logger.debug("success - context dispatched for search=",dispatchedSearch.toString());
var context=this.getContext();
context.set("search",dispatchedSearch);
this.pushContextToChildren(context,true);
this.pushHistory(context);
this._removeLastSearch();
this._lastSuccessfulDispatchedSearch=dispatchedSearch;
this.dispatchAlreadyInProgress=false;
if(this._queuedRequest){
this._fireDispatch(this._queuedRequest);
this._queuedRequest=null;}},
onClick:function(event){
var context=this.getContext();
this.pushContextToChildren(null,true);},
onCancelClick:function(event){
var messenger=Splunk.Messenger.System.getInstance();
messenger.send('info','splunk.search',_("For the time being 'cancel' will not be able to restore settings until settings are resurrectable."));}});;}catch(e){var err="The module 'Splunk.Module.SubmitButton' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.SubmitButton",err);});}try{i18n_register({"catalog":{"+-Configuration error - HiddenSavedSearch is being run as a schedule and is configured to listen to the time picker. Scheduled results will not be shown.":"Configuration error - HiddenSavedSearch is being run as a schedule and is configured to listen to the time picker. Scheduled results will not be shown.","+-This HiddenSavedSearch module is configured with the parameter useHistory set to True. This is not compatible with a free license, try setting useHistory to Auto or False in this view's configuration.":"This HiddenSavedSearch module is configured with the parameter useHistory set to True. This is not compatible with a free license, try setting useHistory to Auto or False in this view's configuration.","+-Configuration error - we were not able to find a saved search called '%s'.":"Configuration error - we were not able to find a saved search called '%s'.","+-No scheduled job was found for saved search \"%(name)s\". The next scheduled run for this search is at %(time)s":"No scheduled job was found for saved search \"%(name)s\". The next scheduled run for this search is at %(time)s","+-No scheduled job was found for saved search \"%(name)s\".":"No scheduled job was found for saved search \"%(name)s\"."},"plural":function(n){return n==1?0:1;}});
Splunk.Module.HiddenSavedSearch=$.klass(Splunk.Module,{
savedSearch:null,
NO_JOB_FOUND_MESSAGE:_('No scheduled job was found for saved search "%(name)s".'),
NO_JOB_FOUND_WITH_NEXT_RUN_MESSAGE:_('No scheduled job was found for saved search "%(name)s". The next scheduled run for this search is at %(time)s'),
USE_HISTORY_TRUE_FREE_MODE_MSG:_('This HiddenSavedSearch module is configured with the parameter useHistory set to True. This is not compatible with a free license, try setting useHistory to Auto or False in this view\'s configuration.'),
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.messenger=Splunk.Messenger.System.getInstance();
if(this._params['jsonSearch']){
var boundingGroup=this.getGroupName();
if(boundingGroup){
this._params['jsonSearch']["group"]=boundingGroup;}
this.savedSearch=Splunk.Search.resurrect(this._params['jsonSearch']);
this.savedSearch.job.setAsAutoCancellable(false);}
else{
this.savedSearch=null;}
var hashParams=Splunk.util.queryStringToProp(Splunk.util.getHash());
var meta=this.container.closest('.dashboardCell').find('.paneledit').attr("data-sequence");
var key='panel_'+meta+'.sid';
if(meta&&hashParams.hasOwnProperty(key)){
this.sid=hashParams[key];
this.logger.info('Soft refresh; reuse job sid',this.sid);
delete hashParams[key];
window.location.hash=Splunk.util.propToQueryString(hashParams);}else{
this.sid=null;}
this.hide(this.HIDDEN_MODULE_KEY);},
getModifiedContext:function(){
if(!this.savedSearch){
this.displayInlineErrorMessage(sprintf(_("Configuration error - we were not able to find a saved search called '%s'."),this._params["savedSearch"]));
this.logger.error(this.moduleType+" null context resurrected");
return new Splunk.Context();}
if(!this.savedSearch.getSavedSearchName()){
this.logger.error(this.moduleType+" context resurrected somehow without saved search name");}
else{
var context=this.getContext();
var inheritedSearch=context.get("search");
if(this.sid){
inheritedSearch.job=Splunk.Globals.Jobber.buildJob(this.sid);
context.set("search",inheritedSearch);
return context;}
var savedSearch=this.savedSearch.clone();
if(!inheritedSearch.getTimeRange().isAllTime()){
if(savedSearch.isJobDispatched()){
if(savedSearch.job.delegate){
this.displayInlineErrorMessage(_("Configuration error - HiddenSavedSearch is being run as a schedule and is configured to listen to the time picker. Scheduled results will not be shown."));}else{
this.logger.warn(this.moduleType," is using a saved search that was dispatched by an upstream module but NOT by the scheduler. Abandoning job.")}
savedSearch.abandonJob();}else{
this.logger.info(this.moduleType," is using a saved search and a module above has altered the timerange to ",inheritedSearch.getTimeRange())}
savedSearch.setTimeRange(inheritedSearch.getTimeRange());}
if(inheritedSearch.hasIntentions()&&savedSearch.isJobDispatched()){
this.displayInlineErrorMessage("Configuration not supported - HiddenSavedSearch does not yet support layering additional intentions on top of a saved search.");}
if(this._params['useHistory'].toLowerCase()=='true'&&!savedSearch.isJobDispatched()){
var args={name:savedSearch.getSavedSearchName()}
var jobNotFoundMessage;
if(window.$C&&window.$C.hasOwnProperty('SPLUNKD_FREE_LICENSE')&&window.$C['SPLUNKD_FREE_LICENSE']){
jobNotFoundMessage=this.USE_HISTORY_TRUE_FREE_MODE_MSG;}else{
jobNotFoundMessage=sprintf(this.NO_JOB_FOUND_MESSAGE,args);
if(savedSearch.next_scheduled_time){
args["time"]=savedSearch.next_scheduled_time;
jobNotFoundMessage=sprintf(this.NO_JOB_FOUND_WITH_NEXT_RUN_MESSAGE,args);}}
this.displayInlineErrorMessage(jobNotFoundMessage);
return null;}
context.set("search",savedSearch);
return context;}
return null;}});;}catch(e){var err="The module 'Splunk.Module.HiddenSavedSearch' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.HiddenSavedSearch",err);});}try{i18n_register({"catalog":{"+-About Splunk":"About Splunk","+-Done":"Done"},"plural":function(n){return n==1?0:1;}});
Splunk.Module.AppBar=$.klass(Splunk.Module,{
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.NEVER_ALLOW;
this.parentEnforcement=Splunk.Module.NEVER_ALLOW;
this.logger=Splunk.Logger.getLogger("Splunk.Module.AppBar");
var menuData=[];
var unitTestListing=[];
try{
menuData=this.parseNavConfig(this._params.menuData);}catch(e){
this.logger.error("Unable to parse JSON navConfig for appbar menu",e);}
unitTestListing=this._params.unitTestListing;
this.unitTestMenu=null;
this.mainMenus=[];
this.generateMainMenus(menuData);
this.generateUnitTestMenu(unitTestListing);
this.bindEventListeners();},
onViewDataChange:function(event,data){
if(data.navConfig){
try{
var menuData=this.parseNavConfig(data.navConfig);}catch(e){
this.logger.error("Unable to parse JSON navConfig for appbar menu",e);
return;}
this.removeMainMenus();
this.generateMainMenus(menuData);
this.logger.info("onViewDataChange fired, successfully reloaded main menu data in AppBar");}},
removeMainMenus:function(){
for(var i=0;i<this.mainMenus.length;i++){
try{
this.mainMenus[i].removeMenu();}catch(e){
this.logger.error("Could not remove mainMenus item with an index of",i);}}
this.mainMenus=[];},
transposeMenuData:function(menu,viewLabel,options){
var output=[];
options=options||{};
isTop=(options.hasOwnProperty("isTop"))?options.isTop:false;
isActive=(options.hasOwnProperty("isActive"))?options.isActive:false;
for(var i=0;i<menu.length;i++){
var menuEntry=menu[i];
var replacement={};
if(menuEntry.hasOwnProperty("submenu")){
var transpose=this.transposeMenuData(menuEntry.submenu,viewLabel,{isActive:isActive});
var subnode=transpose.output;
var isActive=transpose.isActive;
replacement["items"]=subnode;
replacement["label"]=(menuEntry.hasOwnProperty("label"))?menuEntry.label:"";}else{
if(viewLabel==menuEntry.label){
isActive=true;}
replacement=menuEntry;
if(menuEntry['sharing']=='user'){
replacement['style']='splUserCreated';}}
if(isTop&&isActive){
replacement["isActive"]=true;}
output.push(replacement);}
return{output:output,isActive:isActive};},
parseNavConfig:function(navConfig){
var transpose=this.transposeMenuData(navConfig,Splunk.util.getCurrentViewConfig().app.label,{isTop:true});
var menuData={};
for(var i=0;i<transpose.output.length;i++){
if(transpose.output[i].hasOwnProperty("items")){
menuData["navmenu_"+i]=transpose.output[i].items;}else{
continue;}}
return menuData;},
generateMainMenus:function(menuData){
for(var key in menuData){
if(menuData.hasOwnProperty(key)){
this.mainMenus.push(
new Splunk.MenuBuilder({
containerDiv:this.container,
menuDict:menuData[key],
activator:$('#'+key),
menuClasses:'splMenu-primary '+key}));}}},
generateUnitTestMenu:function(menuData){
this.unitTestMenu=new Splunk.MenuBuilder({
containerDiv:this.container,
menuDict:menuData,
activator:$('#appBarUnitTests'),
menuClasses:'splMenu-primary'});},
bindEventListeners:function(){
$('a.aboutLink').unbind('click');
$('a.aboutLink').click(function(event){
Splunk.Popup.AboutPopup($('.aboutPopupContainer'));});}});;}catch(e){var err="The module 'Splunk.Module.AppBar' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.AppBar",err);});}try{i18n_register({"catalog":{"+-(No apps available)":"(No apps available)","+-Manage apps...":"Manage apps..."},"plural":function(n){return n==1?0:1;}});
Splunk.Module.AccountBar=$.klass(Splunk.Module,{
MAX_URI_LENGTH_IE:2048,
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.NEVER_ALLOW;
this.parentEnforcement=Splunk.Module.NEVER_ALLOW;
var appList=this.getParam('appList')||[{'label':_('(No apps available)'),'uri':'','id':''}];
var launcherApp=this.getParam('launcherApp');
var canInstallApps=this.getParam('canInstallApps');
if(appList.length==0){
this.logger.error('Unable to construct app list; no apps found');}
appList.push({'divider':'splDivider'});
if(launcherApp){
appList.push(launcherApp);}
appList.push({'label':_('Manage apps...'),'uri':Splunk.util.make_url('manager',Splunk.util.getCurrentApp(),'apps','local')});
if(canInstallApps){
appList.push({'label':_('Find more apps...'),'uri':Splunk.util.make_url('manager',Splunk.util.getCurrentApp(),'apps','remote')});}
if($('#applicationsMenuActivator',this.container).length){
var appsMenu=new Splunk.MenuBuilder({
containerDiv:this.container,
menuDict:appList,
activator:$('#applicationsMenuActivator',this.container),
menuClasses:'splMenu-secondary'});}
$('.alerts_opener',container).click(function(){
Splunk.window.openAerts(this.href);
return false;});
$('.job_manager_opener',container).click(function(){
Splunk.window.openJobManager();
return false;});
var self=this;
$('.user_options_opener',container).click(function(){
var path=window.location.href.replace(/https?:\/\/[^\/]+\/[^\/]+/,"");
if(/authentication\/changepassword/.exec(path))
return false;
var redirectUrl=this.href+'&redirect_override='+encodeURIComponent(path);
if($.browser.msie&&redirectUrl.length>self.MAX_URI_LENGTH_IE){
redirectUrl=this.href+'&redirect_override='+encodeURIComponent(path.split("#")[0]);}
window.location=redirectUrl;
return false;});
$('.wall_opener',container).click(function(){
Splunk.Popup.Wall();
return false;});
$('.splIcon-close',container).click(function(){
window.close();
return false;});
var cancelJobsOnLogoClick=Splunk.util.normalizeBoolean(this._params.cancelJobsOnLogoClick);
if(cancelJobsOnLogoClick){
$('.appLogo',container).click(function(event){
var target_uri=$(this).attr("href");
var jobs=Splunk.Globals.Jobber.listJobs(function(job){
return(job.canBeAutoCancelled());});
if(jobs.length>0){
jobs.cancel(function(){
if(target_uri){
document.location=target_uri;
return true;}});
if(target_uri){
event.preventDefault();
return false;}}});}}});;}catch(e){var err="The module 'Splunk.Module.AccountBar' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.AccountBar",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.GenericHeader=$.klass(Splunk.Module,{});;}catch(e){var err="The module 'Splunk.Module.GenericHeader' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.GenericHeader",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.Module.Message=$.klass(Splunk.Module,{
EXCLUDE_LEVELS:[],
EXTERNAL_LINK_REX:/\[(\!?)(\w+\:\/\/[^\s]+)\s+([^\]]+)\]/g,
INTERNAL_LINK_REX:/\[\[(\!?)([^\|]+)\|([^\]]+)\]\]/g,
TARGET_BLANK_TOKEN_REX:/#~#!#~#/g,
TARGET_SAME_TOKEN_REX:/\s*#~##~#/g,
SERVER_DELETE_RESOURCE:Splunk.util.make_url("/api/messages/delete"),
initialize:function($super,container){
$super(container);
this.logger=Splunk.Logger.getLogger("message.js");
this.displayedMessages=[];
this.allMessages=[];
if(this._params['filter']=="*"){
this.maxQueueSize=20;
this.defaultDisplaySize=3;}else{
this.maxSize=parseInt(this._params['maxSize'],10);
this.defaultDisplaySize=this.maxSize;
this.maxQueueSize=this.maxSize;}
this.selectedDisplaySize=this.defaultDisplaySize;
this.clearOnJobDispatch=Splunk.util.normalizeBoolean(this._params['clearOnJobDispatch']);
this.defaults=this._params['default']||[];
this.filter=this._params['filter'];
this.levels={};
switch((""+this._params['level']).toLowerCase()){
case'*':
this.levels=null;
break;
default:
case'debug':
this.levels['debug']=1;
case'info':
this.levels['info']=1;
case'warn':
this.levels['warn']=1;
case'error':
this.levels['error']=1;
case'fatal':
this.levels['fatal']=1;}
this.list=$(".MessageList",this.container);
var self=this;
$("a.remove",this.container).live('click',function(){
var message_id=$(this).attr("data-id");
if($(this).hasClass("splunkd")){
$.ajax({
type:"POST",
url:self.SERVER_DELETE_RESOURCE,
dataType:"text",
data:"message_id="+message_id,
error:function(){self.onMessageDeleted(message_id);},
success:function(){self.onMessageDeleted(message_id);}});}else{
self.onMessageDeleted(message_id);}
return false;});
$("a.showall",this.container).live('click',function(){
self.onShowAll();});
$("a.hide",this.container).live('click',function(){
self.onHide();});
this.messenger=Splunk.Messenger.System.getInstance();
this.messenger.receive(this.filter,this.unshift.bind(this),undefined,true);
this.sendDefaults();
if(this.clearOnJobDispatch){
$(document).bind('jobDispatched',this.onJobDispatched.bind(this));}},
onServerMessagesError:function(data){
alert("Could not delete message: ");},
clear:function(){
var levels=arguments[0]||[];
var allMessages=[];
this.logger.warn("Clearing messages with the exclusion of levels",levels);
for(var i=0;i<this.allMessages.length;i++){
var message=this.allMessages[i];
if($.inArray(message.level,levels)!=-1){
allMessages.push(message);}}
this.allMessages=allMessages;
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageClear",this.container);},
handleControlMessage:function(message){
switch(message.content){
case'CLEAR':
this.clear();
break;
default:
break;}},
onJobDispatched:function(event,context){
this.clear(this.EXCLUDE_LEVELS);},
getHTMLTransform:function(){
var html=[];
for(var i=0;i<this.displayedMessages.length;i++){
var message=this.displayedMessages[i];
html.push('<li class="message '+message.level+'">');
html.push('<div style="float:left">');
html.push(this.getWikiTranform(message.content));
html.push('</div>');
var myClass='';
if(isNaN(message.id)){
myClass='splunkd';
html.push('<div style="float:right"><a href="#" data-id="'+Splunk.util.escapeHtml(message.id)+'" class="remove '+myClass+'">x</a></div>');}
var dataId=Splunk.util.escapeHtml(message.id||"");
html.push('<div style="clear:both"/>');
html.push('</li>');}
var numhiddenmessages=this.allMessages.length-this.selectedDisplaySize;
if(numhiddenmessages>0){
var content=""+numhiddenmessages+" messages not shown.";
html.push('<li class="info">');
html.push(this.getWikiTranform(content));
html.push('<a href="#" class="showall"> Show all </a>');
html.push('</li>');}
if(this.selectedDisplaySize==this.maxQueueSize&&this.allMessages.length>this.defaultDisplaySize){
html.push('<li class="info"> <a href="#" class="hide">Hide messages</a> </li>');}
return html.join('');},
getWikiTranform:function(str){
var text=Splunk.util.escapeHtml(str);
text=text.replace(this.EXTERNAL_LINK_REX,'<a href="$2" #~#$1#~#>$3</a>');
text=text.replace(this.INTERNAL_LINK_REX,this._generateInternalLink);
text=text.replace(this.TARGET_BLANK_TOKEN_REX,'target="_blank"');
text=text.replace(this.TARGET_SAME_TOKEN_REX,'');
return text;},
_generateInternalLink:function(str,blank_token,url,text){
url=Splunk.util.make_url(url);
return'<a href="'+url+'"#~#'+blank_token+'#~#>'+text+'</a>';},
sendDefaults:function(){
for(var i=0;i<this.defaults.length;i++){
var level=this.defaults[i].level||null;
var content=this.defaults[i].content||null;
var className=this.defaults[i].className||null;
if(level&&content&&className){
this.messenger.send(level,className,content);}else{
this.logger.error("Invalid default settings for entry with level:",level,"content:",content,"className:",className);}}},
onMessageDeleted:function(message_id){
for(var j=0;j<this.allMessages.length;j++){
var id=this.allMessages[j].id;
if(message_id==id){
this.allMessages.splice(j,1);
j--;}}
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);},
onShowAll:function(){
this.selectedDisplaySize=this.maxQueueSize;
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);},
onHide:function(){
this.selectedDisplaySize=this.defaultDisplaySize;
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);},
unshift:function(){
var previousMessages=[].concat(this.allMessages);
for(var i=arguments.length-1;i>-1;i--){
var message=arguments[i];
if(message.control){
this.handleControlMessage(message);
continue;}
if(this.levels&&!(message.level.toLowerCase()in this.levels)){
continue;}
for(var j=0;j<this.allMessages.length;j++){
var content=this.allMessages[j].content;
var level=this.allMessages[j].level;
if(message.content==content&&message.level==level){
this.allMessages.splice(j,1);
j--;}}
this.allMessages=[{level:message.level,content:message.content,id:message.id}].concat(this.allMessages);}
this.allMessages.splice(this.maxQueueSize,this.allMessages.length-this.maxQueueSize);
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
if(!Splunk.util.objectSimilarity(previousMessages,this.displayedMessages)){
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);}
return $("li",this.list).length;}});;}catch(e){var err="The module 'Splunk.Module.Message' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.Message",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.SingleValue=$.klass(Splunk.Module.DispatchingModule,{
initialize:function($super,container){
$super(container);
this._before_label=this._params['beforeLabel'];
this._after_label=this._params['afterLabel'];
this._link_search=this._params['linkSearch'];
this._target_view=this._params['linkView'];
this._link_fields=this._params['linkFields']&&this._params['linkFields'].split(/\s*,\s*/);
this._result_element=$('.singleResult',container);
this.entity_name='results';
if(this._params['additionalClass']){
$('.SingleValueHolder',container).addClass(this._params['additionalClass']);}
this._classField=this._params['classField'];
this._originalClass=$('.SingleValueHolder',container).attr('class');
this.logger=Splunk.Logger.getLogger("SingleValue.js");
if(this._link_search){
for(var i=0;i<this._link_fields.length;i++){
switch(this._link_fields[i].toLowerCase()){
case'result':
this._linkElement(this._result_element);
break;
case'beforelabel':
this._linkElement($('.singleLabelBefore',this.container));
break;
case'afterlabel':
this._linkElement($('.singleLabelAfter',this.container));
break;
default:
break;}}}},
onContextChange:function(evt){
this.getResults();},
onJobProgress:function(evt){
this.getResults();},
onJobDone:function(evt){
this.logger.debug('SINGLEVALUE - onjobdone');
this.getResults();},
getResultParams:function($super){
var params=$super();
var context=this.getContext();
var search=context.get("search");
var sid=search.job.getSearchId();
if(!sid){
this.logger.error(this.moduleType,"Assertion Failed. getResultParams was called, but searchId is missing from my job.")}
params.sid=sid;
params.field=this._params['field'];
params.entity_name=this.entity_name;
params.classField=this._classField;
if(this.getParam('format')){
params.format=this.getParam('format');}
var postprocess=search.getPostProcess();
if(postprocess)
params.postprocess=postprocess;
return params;},
renderResults:function($super,result){
if(this._classField){
var parts=result.split("//!-!//");
result=parts[0];
fieldClass=parts[1];
$('.SingleValueHolder',this.container).attr('class',this._originalClass);
$('.SingleValueHolder',this.container).addClass(fieldClass);}
$(this._result_element).text(result);
if(this._before_label){
$('.singleLabelBefore',this.container).html(this._before_label);}else{
$('.singleLabelBefore',this.container).remove();}
if(this._after_label){
$('.singleLabelAfter',this.container).html(this._after_label);}else{
$('.singleLabelAfter',this.container).remove();}},
_linkElement:function(el){
link_target=$('<a href="#"></a>')
$(el).wrap(link_target).parent().click(this._handleClick.bind(this));},
_handleClick:function(e){
var context=this.getContext();
var search=context.get("search");
search.abandonJob();
search.setBaseSearch(this._link_search);
search.sendToView(this._target_view);
e.preventDefault();
return false;}});;}catch(e){var err="The module 'Splunk.Module.SingleValue' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.SingleValue",err);});}try{i18n_register({"catalog":{"+-Splunk requires a newer version of Flash.":"Splunk requires a newer version of Flash."},"plural":function(n){return n==1?0:1;}});Splunk.namespace("Module");
Splunk.Module.FlashWrapper=$.klass(Splunk.Module.DispatchingModule,{
CUSTOM_DATE_FORMATS:{"EEE MMM d":{"day_before_month":"EEE d MMM","ja_JP":"EEE MMM d\u65e5","ko_KR":"EEE MMM d\uc77c","zh_CN":"EEE MMM d\u65e5","zh_TW":"EEE MMM d\u65e5"},"MMMM":{},"yyyy":{"ja_JP":"yyyy\u5e74","ko_KR":"yyyy\ub144","zh_CN":"yyyy\u5e74","zh_TW":"yyyy\u5e74"}},
_isBridgeConnected:false,
initialize:function($super,container){
$super(container);
this.logger=Splunk.Logger.getLogger("flash_wrapper.js");
this.updateId=-1;
this.swfObjectId="swfObject_"+this.container.attr('id');
this.bridge=new Splunk.JABridge(this.swfObjectId);
this.minVersion=Splunk.util.getConfigValue("FLASH_MAJOR_VERSION")+"."+Splunk.util.getConfigValue("FLASH_MINOR_VERSION")+"."+Splunk.util.getConfigValue("FLASH_REVISION_VERSION");
this.renderMonitor=false;
this.swfLoadMonitor=Splunk.Globals['PageStatus'].register(this.moduleType+' - loading swf file - '+this.container.attr('id'));
this.initializeBridge();
if(swfobject.hasFlashPlayerVersion(this.minVersion)){
this.addObjectStructure();}else{
this.showFlashError();}
$(document).bind("PrintStart",this.onPrintStart.bind(this));
$(document).bind("PrintEnd",this.onPrintEnd.bind(this));},
onPrintStart:function(){
if($.browser.msie){
return;}
var snapshot=null;
try{
snapshot=this.bridge.callMethod("getSnapshot");}catch(e){
this.logger.warn("JABridge instance is either unavailable, not-connected or does not support callMethod getSnapshot");}
if(snapshot){
var img=document.createElement("img");
img.setAttribute("width",snapshot.width);
img.setAttribute("height",snapshot.height);
this.hideContent("onPrintStart");
$('.FlashWrapperContainer',this.container)[0].appendChild(img).src=snapshot.data;}},
onPrintEnd:function(){
if($.browser.msie){
return;}
$('.FlashWrapperContainer img',this.container).remove();
this.showContent("onPrintStart");},
enableResizable:function(){
if(!($.browser.safari&&$.browser.version<"526")){
$("div.FlashWrapperContainer",this.container).resizable({autoHide:true,handles:"s",stop:this.onResizeStop.bind(this)});
$("div.FlashWrapperContainer").mouseup(
function(event){
$(this).width('100%');});}},
connectBridge:function(isReconnect){
if(!isReconnect)isReconnect=false;
this.bridge.connect(function(){this.onConnect(isReconnect);}.bind(this),this.onClose.bind(this));},
initializeBridge:function(){
this.bridge.addMethod("formatSimpleString",this.formatSimpleString.bind(this),["str"],"String");
this.bridge.addMethod("formatNumericString",this.formatNumericString.bind(this),["strSingular","strPlural","num"],"String");
this.bridge.addMethod("formatNumber",this.formatNumber.bind(this),["num"],"String");
this.bridge.addMethod("formatDate",this.formatDate.bind(this),["time","timeZoneOffset","dateFormat"],"String");
this.bridge.addMethod("formatTime",this.formatTime.bind(this),["time","timeZoneOffset","timeFormat"],"String");
this.bridge.addMethod("formatDateTime",this.formatDateTime.bind(this),["time","timeZoneOffset","dateFormat","timeFormat"],"String");},
getCSSColor:function(specificity,cssProperty){
var color;
for(var i=0;i<specificity.length;i++){
var computedColor=specificity[i].css(cssProperty);
color=Splunk.util.normalizeColor(computedColor);
if(color){
return color;}}
return null;},
onSWFReady:function(event){
if(event.success){
if(this.isContentVisible())
this.connectBridge(false);
else
$(this.bridge.getFlashElement(this.swfObjectId)).css("display","none");
if(Splunk.util.normalizeBoolean(this.getParam("enableResize"))){
this.enableResizable();}}else{
this.logger.error("The embedding of the SWF was unsuccessful.");}},
addObjectStructure:function(){
var targetId="FlashWrapperContainer"+this.container.attr('id');
var swlUrl='';
if(this.getParam('swfFile').substring(0,1)=='/'){
swfUrl=Splunk.util.make_url(this.getParam('swfFile'));}else{
swfUrl=Splunk.util.make_url("/static/flash/"+this.getParam("swfFile"));}
var expressInstallUrl=false;
var staticPath=Splunk.util.make_url("/static");
if(staticPath.charAt(staticPath.length-1)=="/")
staticPath=staticPath.substring(0,staticPath.length-1);
var flashVars={'staticPath':staticPath,'hostPath':Splunk.util.make_url('/splunkd'),'basePath':""};
var params={
wmode:"opaque",
allowFullScreen:"true"};
var bgcolor=this.getCSSColor([this.container],"background-color");
if(bgcolor){
params["bgcolor"]=bgcolor;}
var attributes={
id:this.swfObjectId,
name:this.swfObjectId};
$(".FlashWrapperContainer",this.container).append("<div id="+targetId+"></div>");
swfobject.embedSWF(swfUrl,targetId,"100%","100%",this.minVersion,expressInstallUrl,flashVars,params,attributes,this.onSWFReady.bind(this));},
showFlashError:function(){
var msg=_("Splunk requires a newer version of Flash.")
this.logger.warn(msg);
var target=$("div.FlashWrapperContainer",this.container)[0];
target.innerHTML=sprintf('<p class="error">%s (Minimum version: %s.%s.%s) <a href="http://get.adobe.com/flashplayer/" target="_blank" class="spl-icon-external-link-xsm">Download Flash Player</a></p>',
msg,
Splunk.util.getConfigValue('FLASH_MAJOR_VERSION'),
Splunk.util.getConfigValue('FLASH_MINOR_VERSION'),
Splunk.util.getConfigValue('FLASH_REVISION_VERSION'));},
update:function(){
this.updateId=this.callBridgeMethod("update");},
onClose:function(){
this.logger.warn("The JABridge connection was closed with an id of",this.bridge.id());
this._isBridgeConnected=false;},
onConnect:function(isReconnect){
this._isBridgeConnected=true;
this.setPresentation();
this.onContextChange();
this.bridge.addEventListener('updated',this.onDataUpdated.bind(this));
this.bridge.addEventListener("openAsImage",this.onOpenAsImage.bind(this));
this.setBridgeProperty("enableOpenAsImage",!jQuery.browser.msie);
this.setBridgeProperty("timeZone",Splunk.util.getConfigValue('SERVER_ZONEINFO'));
this.update();
this.swfLoadMonitor.loadComplete();},
onJobProgress:function(){
var context=this.getContext();
var search=context.get("search");
if(search.job.isDone()){
if(!this.renderMonitor){
this.renderMonitor=Splunk.Globals['PageStatus'].register(this.moduleType+' - rendering final data - '+this.container.attr('id'));}}},
onResizeStop:function(event,ui){
$(event.target).width('100%');
this.setParam('height',ui.size.height+"px");},
onDataUpdated:function(event){
var context=this.getContext();
var search=context.get("search");
if(search.isJobDispatched()&&search.job.isDone()){
if(this.renderMonitor&&(event.updateCount>=this.updateId)){
this.renderMonitor.loadComplete();
this.renderMonitor=false;}}},
onOpenAsImage:function(event){
var snapshot=event.snapshot;
Splunk.window.open(snapshot.data,this.swfObjectId,{height:snapshot.height+16,width:snapshot.width+16});},
setPresentation:function(){
var styleMap=[
{css:"border-left-color",flash:"foregroundColor"},
{css:"color",flash:"fontColor"},
{css:"background-color",flash:"backgroundColor"}];
for(var i=0;i<styleMap.length;i++){
var styleMapAttributes=styleMap[i];
var value=this.getCSSColor([this.container],styleMapAttributes.css);
if(value){
try{
this.bridge.callMethod("setValue",styleMapAttributes.flash,value.replace("#","0x"));
this.logger.info("Set",styleMapAttributes.flash,value);}catch(e){
this.logger.error("Could not setValue",styleMapAttributes.flash);}}}},
hideContent:function(key){
key=(key!=null)?String(key):"";
if(this._hideKeys)
{
this._hideKeys[key]=true;
return false;}
this._hideKeys={};
this._hideKeys[key]=true;
this.logger.warn("closing down JABridge connection");
this.bridge.close();
$(this.bridge.getFlashElement(this.swfObjectId)).css("display","none");
return true;},
showContent:function(key){
if(!this._hideKeys)
return false;
key=(key!=null)?String(key):"";
delete this._hideKeys[key];
for(key in this._hideKeys)
{
if(this._hideKeys.hasOwnProperty(key))
return false;}
this._hideKeys=null;
$(this.bridge.getFlashElement(this.swfObjectId)).css("display","");
this.logger.warn("bringing back JABridge connection");
this.connectBridge(true);
return true;},
isContentVisible:function(){
return!this._hideKeys;},
getBridgeProperty:function(name){
try{
return this.bridge.getProperty(name);}catch(e){
this.logger.error("externalInterface/jabridge exception on getProperty('",name,"')",e);
return false;}},
setBridgeProperty:function(name,value){
if(!this._isBridgeConnected)return;
try{
this.bridge.setProperty(name,value);}catch(e){
this.logger.error("externalInterface/jabridge exception on setProperty('",name,"', '",value,"')",e);}},
callBridgeMethod:function(){
if(!this._isBridgeConnected)return;
try{
return this.bridge.callMethod.apply(this,arguments);}catch(e){
this.logger.error("externalInterface/jabridge exception on callMethod()",e);}},
formatSimpleString:function(str){
return _(str);},
formatNumericString:function(strSingular,strPlural,num){
return sprintf(ungettext(strSingular,strPlural,num),this.formatNumber(num));},
formatNumber:function(num){
var pos=Math.abs(num);
if((pos>0)&&((pos<1e-3)||(pos>=1e9)))
return format_scientific(num,"##0E0");
return format_decimal(num);},
formatDate:function(time,timeZoneOffset,dateFormat){
if(dateFormat)
{
var customFormat=this.CUSTOM_DATE_FORMATS[dateFormat];
if(customFormat)
{
var localeName=locale_name();
if(customFormat[localeName])
dateFormat=customFormat[localeName];
else if(locale_uses_day_before_month()&&customFormat["day_before_month"])
dateFormat=customFormat["day_before_month"];}}
return format_date(this.epochToDateTime(time,timeZoneOffset),dateFormat);},
formatTime:function(time,timeZoneOffset,timeFormat){
if(timeFormat=="full")
return format_time_microseconds(this.epochToDateTime(time,timeZoneOffset),timeFormat);
return format_time(this.epochToDateTime(time,timeZoneOffset),timeFormat);},
formatDateTime:function(time,timeZoneOffset,dateFormat,timeFormat){
if(timeFormat=="full")
return format_datetime_microseconds(this.epochToDateTime(time,timeZoneOffset),dateFormat,timeFormat);
return format_datetime(this.epochToDateTime(time,timeZoneOffset),dateFormat,timeFormat);},
epochToDateTime:function(time,timeZoneOffset){
var date=new Date(Math.floor((time+timeZoneOffset)*1000));
var dateTime=new DateTime({
date:date,
year:date.getUTCFullYear(),
month:date.getUTCMonth()+1,
day:date.getUTCDate(),
hour:date.getUTCHours(),
minute:date.getUTCMinutes(),
second:date.getUTCSeconds(),
microsecond:date.getUTCMilliseconds()*1000});
dateTime.weekday=function(){
var d=this.date.getUTCDay()-1;
if(d<0)
d=6;
return d;};
return dateTime;}});;}catch(e){var err="The module 'Splunk.Module.FlashWrapper' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.FlashWrapper",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});Splunk.Module.HiddenPostProcess=$.klass(Splunk.Module.DispatchingModule,{
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.hide(this.HIDDEN_MODULE_KEY);},
getModifiedContext:function(){
var context=this.getContext();
var search=context.get("search");
search.setPostProcess(this.getParam('search'));
context.set("search",search);
return context;}});;}catch(e){var err="The module 'Splunk.Module.HiddenPostProcess' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.HiddenPostProcess",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.ViewRedirectorLink=$.klass(Splunk.Module.ViewRedirector,{
initialize:function($super,container){
$super(container);
$("a",this.container).click(function(event){
var popup=Splunk.util.normalizeBoolean(this._params["popup"]);
this.sendToView({},popup);
return false;}.bind(this));
if(!Splunk.util.normalizeBoolean(this._params["dispatchBeforeRedirect"])){
$("a",this.container).hide();}
this.show(this.HIDDEN_MODULE_KEY);},
onContextChange:function(){
var context=this.getContext();
var search=context.get("search");
var path=Splunk.util.make_url("/app/",Splunk.util.getCurrentApp(),this._params["viewTarget"]);
var url=path+"?";
if(search.isJobDispatched()){
var sid=search.job.getSearchId();
url+=$.param({"sid":sid});}
$("a",this.container).show().attr("href",url);},
pushContextToChildren:function($super,explicitContext){
return false;}});;}catch(e){var err="The module 'Splunk.Module.ViewRedirectorLink' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.ViewRedirectorLink",err);});}try{i18n_register({"catalog":{"+-Queued...":"Queued...","+-Loading...":"Loading..."},"plural":function(n){return n==1?0:1;}});
Splunk.Module.JobProgressIndicator=$.klass(Splunk.Module.DispatchingModule,{
initialize:function($super,container){
$super(container);
this.logger=Splunk.Logger.getLogger("JobProgressIndicator.js");
this.statusText=$('.graphLoading',this.container);},
onBeforeJobDispatched:function(){
this.statusText.text(_("Queued..."));
this.displayProgress(0);},
onJobProgress:function(){
var context=this.getContext();
var search=context.get("search");
if(search.job.isRealTimeSearch()){
this.hide();
return;}
this.statusText.text(_("Loading..."));
this.show();
this.displayProgress(search.job.getDoneProgress());},
onJobDone:function(){
this.hide();},
displayProgress:function(progressFloat){
var jobProgress=progressFloat*100;
jobProgress=Math.round(jobProgress*100)/100;
jobProgress+="%";
$(".splBarGraphValue",this.container).text(jobProgress);
$(".splBarGraphBar",this.container).css('width',jobProgress)}});;}catch(e){var err="The module 'Splunk.Module.JobProgressIndicator' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.JobProgressIndicator",err);});}try{i18n_register({"catalog":{"+-Schedule for PDF delivery...":"Schedule for PDF delivery...","+-<p>Your user account does not have permission to schedule search jobs. Contact your Splunk administrator or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> for assistance.</p>":"<p>Your user account does not have permission to schedule search jobs. Contact your Splunk administrator or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> for assistance.</p>","+-Save Search":"Save Search","+-Create alert...":"Create alert...","+-Please run a search first.":"Please run a search first.","+-Failed to save search results.  The search job may have expired.":"Failed to save search results.  The search job may have expired.","+-OK":"OK","+-Get link to results...":"Get link to results...","+-Save results":"Save results","+-Save as event type...":"Save as event type...","+-<p>The PDF Report Server app is not currently installed and enabled on this server.</p><p>See <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation if you wish to use a remote PDF server, or install the PDF Report Server app on this machine by browsing for it from the Launcher.</p>":"<p>The PDF Report Server app is not currently installed and enabled on this server.</p><p>See <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation if you wish to use a remote PDF server, or install the PDF Report Server app on this machine by browsing for it from the Launcher.</p>","+-Edit dashboard...":"Edit dashboard...","+-Add to dashboard...":"Add to dashboard...","+-Save search...":"Save search...","+-Schedule for PDF Delivery":"Schedule for PDF Delivery","+-Get Link to Results":"Get Link to Results","+-Server Configuration":"Server Configuration","+-Save As Event Type":"Save As Event Type","+-Export results...":"Export results...","+-Print...":"Print...","+-Received an unexpected response '%s' while fetching the status of the PDF report server":"Received an unexpected response '%s' while fetching the status of the PDF report server","+-Build report...":"Build report...","+-<p>The PDF Report Server is installed on this server, but not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation for further details.</p>":"<p>The PDF Report Server is installed on this server, but not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation for further details.</p>","+-<p>The PDF Report Server is not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation for further details.</p>":"<p>The PDF Report Server is not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation for further details.</p>","+-Permission Denied":"Permission Denied","+-Inspect search job...":"Inspect search job...","+-These search results have been saved. You can retrieve them later via the jobs manager.":"These search results have been saved. You can retrieve them later via the jobs manager."},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.TitleBar=$.klass(Splunk.Module.DispatchingModule,{
SAVED_SEARCH_FORM_CONTAINER_CLASS:'.savedSearchForm',
SAVED_SEARCH_FORM_TITLE:_('Save Search'),
SHARE_LINK_FORM_CONTAINER_CLASS:'.shareLinkForm',
SHARE_LINK_FORM_TITLE:_('Get Link to Results'),
EVENTTYPE_FORM_CONTAINER_CLASS:'.eventtypeForm',
EVENTTYPE_FORM_TITLE:_('Save As Event Type'),
REPORTBUILDER_LINK_CLASS:"resultsLink",
DISABLED_CLASS:"disabled",
PDF_STATUS_ENDPOINT:"report/is_enabled",
requiresDispatch:function(search){return false},
initialize:function($super,container){
$super(container);
this.logger=Splunk.Logger.getLogger("Splunk.Module.TitleBar");
this.messenger=Splunk.Messenger.System.getInstance();
this.canScheduleSearch=Splunk.ViewConfig.app.can_alert;
this.lastEnabled=null;
$('.editPanel button.move',this.container).bind('click',function(){
Splunk.Globals.Viewmaster.openPanelFormHelper(Splunk.util.getCurrentView(),'move');});
$('.editPanel button.add',this.container).bind('click',function(){
Splunk.Globals.Viewmaster.openPanelFormHelper(Splunk.util.getCurrentView(),'add');});
this.actionsMenuItemsDict=[];
this.actionsMenuItemsDict.push({"label":_("Save search..."),
callback:function(){
var search=this.getContext().get("search");
Splunk.Popup.SaveSearchWizard(search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
if(Splunk.util.getCurrentView()!="charting"){
this.actionsMenuItemsDict.push({"label":_("Build report..."),"enabledWhen":"progress",
callback:function(event){
this.buildReportLink();}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});}
this.actionsMenuItemsDict.push({"label":_("Add to dashboard..."),
callback:function(){
var search=this.getContext().get("search");
Splunk.Popup.DashboardWizard(search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
if(this.canScheduleSearch){
this.actionsMenuItemsDict.push({"label":_("Create alert..."),
callback:function(){
var search=this.getContext().get("search");
Splunk.Popup.AlertWizard(search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});}
if(this.canScheduleSearch){
this.actionsMenuItemsDict.push({"label":_("Schedule search..."),
callback:function(){
var search=this.getContext().get("search");
Splunk.Popup.ScheduleDigestWizard(search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
this.actionsMenuItemsDict.push({"label":_("Schedule for PDF delivery..."),"callback":this.schedulePDF.bind(this),"showInFilter":['search','dashboard','dashboard-SimpleDashboard'],"enabled":(Splunk.util.getCurrentViewConfig()['view']['hasAutoRun'])?"*":[]});}
this.actionsMenuItemsDict.push({"divider":"actionsMenuDivider","showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"label":_("Save as event type..."),"alwaysEnabled":true,
callback:this.onEventtypeForm.bind(this),"showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"divider":"actionsMenuDivider","showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"label":_("Inspect search job..."),"alwaysEnabled":true,
callback:function(event){
var context=this.getContext();
var search=context.get("search");
Splunk.window.openJobInspector(search.job.getSearchId());
return false;}.bind(this),"showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"divider":"actionsMenuDivider","showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"label":_("Save results"),
callback:function(event){
if(this.baseContext){
var search=this.getContext().get("search");
var self=this;
search.job.save(
function(){
self.messenger.send("info","splunk.search",_("These search results have been saved. You can retrieve them later via the jobs manager."))},
function(){
self.messenger.send("error","splunk.search",_("Failed to save search results.  The search job may have expired."));});}}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
this.actionsMenuItemsDict.push({"label":_("Get link to results..."),
callback:function(event){
var formContainer=$(this.SHARE_LINK_FORM_CONTAINER_CLASS,this.container)[0]
var title=this.SHARE_LINK_FORM_TITLE;
var search=this.getContext().get("search");
Splunk.Popup.createShareLinkForm(formContainer,title,search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
this.actionsMenuItemsDict.push({"label":_("Export results..."),
callback:function(event){
var formContainer=$('.exportPopupContainer',this.container)[0];
var context=this.getContext();
var search=context.get("search");
Splunk.Popup.createExportResultsForm(formContainer,search.job);}.bind(this),"showInFilter":['search'],"enabled":["done"]});
this.actionsMenuItemsDict.push({"label":_("Print..."),
callback:function(event){
$(document).trigger("PrintPage");
return false;}.bind(this),"showInFilter":['search','dashboard','dashboard-SimpleDashboard'],"enabled":"*"});
this.messenger=Splunk.Messenger.System.getInstance();
this._showActionsMenu=Splunk.util.normalizeBoolean(this._params["showActionsMenu"]);
this._filter=Splunk.util.normalizeBoolean(this.getParam("actionsMenuFilter"))||'search';
if(this._filter=='dashboard'){
var viewObjectMode=Splunk.util.getCurrentViewConfig()['view']['objectMode'];
if(viewObjectMode=='SimpleDashboard'){
this._filter='dashboard-SimpleDashboard';}}
if(this._showActionsMenu){
this.PERMALINK_SEARCH_CLASS="permalinkSearch";
this.PERMALINK_SID_CLASS="permalinkSID";
this.REPORTBUILDER_CLASS="reportBuilderLink";
this.actionsMenu=new Splunk.MenuBuilder({
containerDiv:this.container,
menuDict:this.getEnabledActionsMenuData(this.actionsMenuItemsDict,"*"),
activator:$('.actionsMenu',this.container),
menuClasses:'splMenu-primary',
filter:this._filter});
this._initEventListeners();}},
_initEventListeners:function(){
$(document).bind('jobDispatched',this.updatePermalinks.bind(this));},
applyContext:function($super,context){
var retVal=$super(context);
if(!this.isPageLoadComplete()){
this.updatePermalinks();}
return retVal;},
schedulePDF:function(){
if(Splunk.util.getCurrentViewConfig()['view']['hasAutoRun']){
return Splunk.Popup.SchedulePDF($('.pdfPopup'),function(error){
this.messenger.send('error',this.moduleType,error);}.bind(this));}else{
return function(){};}},
renderPDF:function(){
if(window.location.href.indexOf('output=pdf')>-1){
window.location.reload();}else{
if(window.location.href.indexOf('?')>-1){
window.location.href=window.location.href+'&output=pdf';}else{
window.location.href=window.location.href+'?output=pdf';}}},
updateActionsMenu:function(enabled){
if(this.lastEnabled&&this.lastEnabled==enabled||!this._showActionsMenu){
return;}
this.lastEnabled=enabled;
var menuData=this.getEnabledActionsMenuData(this.actionsMenuItemsDict,enabled);
this.actionsMenu.updateMenu(menuData);},
getEnabledActionsMenuData:function(menuData,enabled){
var wildCard="*";
var validEnabledValues=["progress","done",wildCard];
if($.inArray(enabled,validEnabledValues)==-1){
this.logger.warn("Invalid menu enabled value of",enabled,", setting default to wildCard");
enabled=wildCard;}
var newMenu=[];
for(var i=0;i<menuData.length;i++){
var oldMenuEntry=menuData[i];
if(!oldMenuEntry.hasOwnProperty("enabled")||wildCard==oldMenuEntry.enabled||$.inArray(enabled,oldMenuEntry.enabled)!=-1){
newMenu.push(oldMenuEntry);}else{
var newMenuEntry={"label":oldMenuEntry.label,"style":this.DISABLED_CLASS,"showInFilter":oldMenuEntry.showInFilter}
newMenu.push(newMenuEntry);}}
return newMenu;},
buildReportLink:function(){
var context=this.getContext();
var search=context.get("search");
var builderLink=$(".JobStatus a."+this.REPORTBUILDER_LINK_CLASS);
if(builderLink.length<1){
this.logger.error(this.moduleType," user clicked 'build report', but we could not find the 'Build report' link in this view.");
return false;}
if(search.isJobDispatched()){
builderLink.click();
return false;}else{
alert(_("Please run a search first."));}},
updatePermalinks:function(event){
var context=this.getContext();
var search=context.get("search");
var args={};
args["q"]=Splunk.util.addLeadingSearchCommand(search.toString());
var range=search.getTimeRange();
if(range){
if(range.getEarliestTimeTerms()){
args["earliest"]=range.getEarliestTimeTerms();}
if(range.getLatestTimeTerms()){
args["latest"]=range.getLatestTimeTerms();}}
$("li."+this.PERMALINK_SEARCH_CLASS+" a",this.container).attr("href","?"+Splunk.util.propToQueryString(args));
$("li."+this.PERMALINK_SID_CLASS+" a",this.container).attr("href","?sid="+encodeURIComponent(search.job.getSearchId()));},
exportPopupAccept:function(){
this.exportForm=$(this.exportPopupHandle).find(".exForm");
return this.exportForm.submit();},
exportPopupCancel:function(){
return true;},
onJobStatusChange:function(event,status){
switch(status){
case'cancel':
this.updateActionsMenu("*");
break;
default:
break;}},
resetUI:function(){
this.updateActionsMenu("*");},
onJobDone:function(){
this.updateActionsMenu("done");},
onJobProgress:function(){
this.updateActionsMenu("progress");},
onContextChange:function(){
var context=this.getContext();
var search=context.get("search");
var savedSearchName="";
if(search.getSavedSearchName()){
savedSearchName=": "+search.getSavedSearchName();}
$("em",this.container).text(savedSearchName);},
onSavedSearchForm:function(event){
var context=this.getContext();
var search=context.get("search");
var formContainer=$(this.SAVED_SEARCH_FORM_CONTAINER_CLASS,this.container)[0]
var title=this.SAVED_SEARCH_FORM_TITLE;
Splunk.Popup.createSavedSearchForm(formContainer,title,search);},
onEventtypeForm:function(event){
var context=this.getContext();
var search=context.get("search");
var formContainer=$(this.EVENTTYPE_FORM_CONTAINER_CLASS,this.container)[0];
Splunk.Popup.createEventtypeForm(formContainer,this.EVENTTYPE_FORM_TITLE,search);}});;}catch(e){var err="The module 'Splunk.Module.TitleBar' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.TitleBar",err);});}try{i18n_register({"catalog":{"+-Full screen":"Full screen","+-Results Error:":"Results Error:","+-Open as image":"Open as image","+-No result data.":"No result data."},"plural":function(n){return n==1?0:1;}});Splunk.Module.FlashChart=$.klass(Splunk.Module.FlashWrapper,{
SETTING_PREFIX:'charting.',
LEADING_UNDERSCORE_PREFIX:"VALUE_",
USE_FLASH_POLLER:false,
_selection:null,
DRILLDOWN_VISIBILITY_KEY:"FlashChartInteractionValidity",
initialize:function($super,container){
$super(container);
this.logger=Splunk.Logger.getLogger("FlashChart.js");
this.legend_onSetLabels=this.legend_onSetLabels.bind(this);
this.legend_onLabelIndexMapChanged=this.legend_onLabelIndexMapChanged.bind(this);
_("Open as image");
_("Full screen");
_("Results Error:");
_("No result data.");
this.drilldownPrefix=this.getParam("drilldownPrefix");
this.container.bind("mouseenter",this.onStatusMouseenter.bind(this));
this.container.bind("mouseleave",this.onStatusMouseleave.bind(this));},
onLoadStatusChange:function($super,statusInt){
$super(statusInt);
if(statusInt==Splunk.util.moduleLoadStates.WAITING_FOR_HIERARCHY){
this.hideDescendants(this.DRILLDOWN_VISIBILITY_KEY+"_"+this.moduleId)}},
requiresTransformedResults:function(){return true;},
initializeBridge:function($super){
$super();
this.bridge.addProperty("legend.numLabels",this.legend_numLabels.bind(this));
this.bridge.addMethod("legend.setLabels",this.legend_setLabels.bind(this));
this.bridge.addMethod("legend.getLabelIndex",this.legend_getLabelIndex.bind(this));
this.bridge.addEvent("legend.setLabels");
this.bridge.addEvent("legend.labelIndexMapChanged");},
addChild:function($super,child){
this._enableDrilldown=true;
this.setBridgeProperty("enableChartClick",true);
this.setBridgeProperty("enableLegendClick",true);
return $super(child);},
legend_numLabels:function(){
return Splunk.Legend.numLabels();},
legend_setLabels:function(labels){
Splunk.Legend.setLabels(this.bridge.id(),labels);},
legend_getLabelIndex:function(label){
return Splunk.Legend.getLabelIndex(label);},
legend_onSetLabels:function(){
this.bridge.dispatchEvent("legend.setLabels");},
legend_onLabelIndexMapChanged:function(){
this.bridge.dispatchEvent("legend.labelIndexMapChanged");},
onConnect:function($super,isReconnect){
Splunk.Legend.register(this.bridge.id());
Splunk.Legend.addEventListener("setLabels",this.legend_onSetLabels);
Splunk.Legend.addEventListener("labelIndexMapChanged",this.legend_onLabelIndexMapChanged);
this.bridge.addEventListener('chartClicked',this.onChartClicked.bind(this));
this.bridge.addEventListener('legendClicked',this.onLegendClicked.bind(this));
$super(isReconnect);
if(this._enableDrilldown){
this.setBridgeProperty("enableChartClick",true);
this.setBridgeProperty("enableLegendClick",true);}},
onClose:function($super){
Splunk.Legend.removeEventListener("labelIndexMapChanged",this.legend_onLabelIndexMapChanged);
Splunk.Legend.removeEventListener("setLabels",this.legend_onSetLabels);
Splunk.Legend.unregister(this.bridge.id());
$super();},
onContextChange:function(){
$('.resultStatusMessage',this.container).hide().html('');
if(!this._isBridgeConnected){
this.logger.debug("bridge is not connected onContextChange. Exiting. onContextChange will fire onConnect.");
return;}
this.hideDescendants(this.DRILLDOWN_VISIBILITY_KEY+"_"+this.moduleId)
this._selection=null;
var context=this.getContext();
var search=context.get("search");
var sid=search.job.getSearchId();
if(search.job.isDone()){
if(!this.renderMonitor){
this.renderMonitor=Splunk.Globals['PageStatus'].register(this.moduleType+' - rendering final data - '+this.container.attr('id'));}
if(search.job.getResultCount()==0){
this.showStatusMessage('results','nodata',sid);}else{
this.hideStatusMessage();}}
if(sid!=null){
this.setBridgeProperty("jobID",encodeURIComponent(encodeURIComponent(sid)));}else{
this.setBridgeProperty("jobID",sid);}
var pp=search.getPostProcess();
if(pp){
this.callBridgeMethod("setValue","data.search",pp);}else{
this.callBridgeMethod("clearValue","data.search");}
this.update();
var propertyManagerHash=context.getAll("charting");
this.setBridgeProperty("enableLegendClick",(propertyManagerHash["chart"]!="pie"));
if(propertyManagerHash["chart"]=="scatter"){
this.callBridgeMethod("setValue","axisX","numeric");
this.callBridgeMethod("setValue","axisX.fitZero","false");
this.callBridgeMethod("setValue","axisY.fitZero","false");}else{
this.callBridgeMethod("clearValue","axisX");
this.callBridgeMethod("clearValue","axisX.fitZero");
this.callBridgeMethod("clearValue","axisY.fitZero");}
var plotIntention=search.getIntentionReference("plot");
var isTopOrRare=(plotIntention&&plotIntention["arg"]["mode"]in{"top":1,"rare":1})
if(this._params["maxRowsForTop"]&&isTopOrRare&&(propertyManagerHash["chart"]!="pie")){
this.setBridgeProperty("resultsCount",this._params["maxRowsForTop"]);}else{
this.setBridgeProperty("resultsCount",this.getParam('maxResultCount'));}
try{
if(isTopOrRare){
this.setBridgeProperty("fieldHideList",["percent"]);}else{
this.setBridgeProperty("fieldHideList",null);}}catch(e){
this.logger.error("error trying to set the fieldHideList");}
if(plotIntention&&plotIntention["arg"]["mode"]=="chart"){
this.determineAxisType(plotIntention["arg"]);}
if(propertyManagerHash&&propertyManagerHash.hasOwnProperty('chartTitle')&&propertyManagerHash['chartTitle']){
$('.chartTitle',this.container).text(propertyManagerHash['chartTitle']).show();}else{
$('.chartTitle',this.container).hide();}
for(var key in propertyManagerHash){
if(propertyManagerHash.hasOwnProperty(key)){
try{
this.logger.info("setValue from propertyManagerHash",key)
this.callBridgeMethod("setValue",
key,
this.resolveStaticURL(key,propertyManagerHash[key]));}catch(e){
this.logger.error("catching a jabridge exception '",e,"'. Basically this is the SPL-17758 problem. catching it so it doesnt derail everything. ");}}}},
resolveStaticURL:function(propertyName,propertyValue){
if(propertyName&&propertyValue&&(propertyValue.substring(0,8)=="/static/"))
{
var lastDotIndex=propertyName.lastIndexOf(".");
if(lastDotIndex>0)
{
propertyName=propertyName.substring(lastDotIndex+1,propertyName.length);
if((propertyName=="source")||(propertyName=="sourcePath"))
{
var hadTrailingSlash=(propertyValue.charAt(propertyValue.length-1)=="/");
propertyValue=Splunk.util.make_url(propertyValue);
var hasTrailingSlash=(propertyValue.charAt(propertyValue.length-1)=="/");
if(hasTrailingSlash!=hadTrailingSlash)
propertyValue=hadTrailingSlash?propertyValue+"/":propertyValue.substring(0,propertyValue.length-1);}}}
return propertyValue;},
determineAxisType:function(intentionArg){
var fieldNames=[];
var splitBy=intentionArg["splitby"]
if(splitBy)fieldNames.push(splitBy);
var args={
field_list:fieldNames,
top_count:0,
min_freq:0};
var search;
var qsDict=Splunk.util.queryStringToProp(document.location.search);
if(qsDict.hasOwnProperty("base_sid")){
search=Splunk.Search.resurrectFromSearchId(qsDict["base_sid"]);}else{
search=this.getContext().get("search");}
$.get(search.getUrl('summary',args),function(resultXML){
var eventCount=parseInt($(resultXML).find("summary").attr("c"),10);
var moduleInstance=this;
$.each($(resultXML).find("field"),function(index){
var fieldElt=$(this);
var isNumeric=(fieldElt.attr("nc")>fieldElt.attr("c")/2);
if(isNumeric){
this.callBridgeMethod("setValue","axisX","numeric");
this.callBridgeMethod("setValue","axisX.fitZero","false");}else{
this.callBridgeMethod("clearValue","axisX");
this.callBridgeMethod("clearValue","axisX.fitZero");}});}.bind(this));},
stripUnderscoreFieldPrefix:function(fieldName){
if(fieldName.indexOf(this.LEADING_UNDERSCORE_PREFIX)!=-1){
return fieldName.replace(this.LEADING_UNDERSCORE_PREFIX,"_");}
return fieldName;},
onJobProgress:function($super){
$super();
if(this.USE_FLASH_POLLER)return false;
var context=this.getContext();
var search=context.get("search");
if(search.job.getResultCount()==0){
if(search.job.isDone()){
this.showStatusMessage('results','nodata',search.job.getSearchId());}else{
this.showStatusMessage('results','waiting',search.job.getSearchId());}}else{
this.hideStatusMessage();}
if(search.job.isPreviewable()){
this.update();}},
onJobDone:function($super){
$super();
if(this.USE_FLASH_POLLER)return false;
this.update();
var context=this.getContext();
var search=context.get("search");
if(search.job.getResultCount()==0){
this.showStatusMessage('results','nodata',search.job.getSearchId());}else{
this.hideStatusMessage();}},
onLegendClicked:function(event){
var seriesStr=event.text;
this._selection={};
this._selection.name2=this.stripUnderscoreFieldPrefix(event.text);
if(event.ctrlKey){
this._selection.modifierKey=event.ctrlKey;}
this.showDescendants(this.DRILLDOWN_VISIBILITY_KEY+"_"+this.moduleId)
this.pushContextToChildren();},
onChartClicked:function(event){
var data=event.data;
var fields=event.fields;
this.showDescendants(this.DRILLDOWN_VISIBILITY_KEY+"_"+this.moduleId)
this._selection=null;
for(var i=0;i<fields.length;i++){
if(!this._selection)this._selection={};
var name=fields[i];
if(data.hasOwnProperty(name)){
if(i==0){
this._selection.name=name;
this._selection.value=data[name];}
else if(i==1){
this._selection.name2=this.stripUnderscoreFieldPrefix(name);
this._selection.value2=data[name];}else{
this.logger.error("we only support 2-d drilldown at the moment.");
this.logger.error(fields);
this.logger.error(data);}}
else{
this.logger.message("Assertion failed - received a click event but there was a field in fields that was not in the data.");}}
if(this._selection.name=="_time"){
if(data["_span"]){
var duration=parseFloat(data["_span"]);
var startTime=parseFloat(Splunk.util.getEpochTimeFromISO(this._selection.value));
var endTime=startTime+duration;
this._selection.timeRange=new Splunk.TimeRange(startTime,endTime);}}
if(this._selection&&event.ctrlKey){
this._selection.modifierKey=event.ctrlKey;}
this.pushContextToChildren();},
getModifiedContext:function(){
var context=this.getContext();
if(this._selection){
for(key in this._selection){
context.set(this.drilldownPrefix+"."+key,this._selection[key]);}
var searchModified=false;
var search=context.get("search");
var searchRange=search.getTimeRange();
if(this._selection.timeRange){
search.setTimeRange(this._selection.timeRange);
searchModified=true;}else if(!searchRange.isAbsolute()&&!searchRange.isAllTime()){
var job=this.getContext().get("search").job;
search.setTimeRange(job.getTimeRange());
searchModified=true;}
if(searchModified)context.set("search",search);}
return context;},
isReadyForContextPush:function($super){
if(!this._selection){
return Splunk.Module.CANCEL;}
return $super();},
showStatusMessage:function(entity_name,msg,sid){
this.statusEnabled=true;
var self=this;
var getArgs={
entity_name:entity_name,
msg:msg,
sid:sid};
$('.messageContainer',this.container).load(
Splunk.util.make_url('/module/search/FlashChart/statusMessage')
+'?'+Splunk.util.propToQueryString(getArgs),
function(){
if(self.statusEnabled){$(this).show();}});},
hideStatusMessage:function(){
this.statusEnabled=false;
$('.messageContainer',this.container).hide().html('');},
onStatusMouseenter:function(evt){
$('.resultStatusMessage .resultStatusHelp',this.container).css('visibility','visible');},
onStatusMouseleave:function(evt){
$('.resultStatusMessage .resultStatusHelp',this.container).css('visibility','hidden');}});;}catch(e){var err="The module 'Splunk.Module.FlashChart' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.FlashChart",err);});}