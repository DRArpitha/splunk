
(function(window,undefined){
var document=window.document,
navigator=window.navigator,
location=window.location;
var jQuery=(function(){
var jQuery=function(selector,context){
return new jQuery.fn.init(selector,context,rootjQuery);},
_jQuery=window.jQuery,
_$=window.$,
rootjQuery,
quickExpr=/^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
rnotwhite=/\S/,
trimLeft=/^\s+/,
trimRight=/\s+$/,
rdigit=/\d/,
rsingleTag=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,
rvalidchars=/^[\],:{}\s]*$/,
rvalidescape=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
rvalidtokens=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
rvalidbraces=/(?:^|:|,)(?:\s*\[)+/g,
rwebkit=/(webkit)[ \/]([\w.]+)/,
ropera=/(opera)(?:.*version)?[ \/]([\w.]+)/,
rmsie=/(msie) ([\w.]+)/,
rmozilla=/(mozilla)(?:.*? rv:([\w.]+))?/,
rdashAlpha=/-([a-z])/ig,
fcamelCase=function(all,letter){
return letter.toUpperCase();},
userAgent=navigator.userAgent,
browserMatch,
readyList,
DOMContentLoaded,
toString=Object.prototype.toString,
hasOwn=Object.prototype.hasOwnProperty,
push=Array.prototype.push,
slice=Array.prototype.slice,
trim=String.prototype.trim,
indexOf=Array.prototype.indexOf,
class2type={};
jQuery.fn=jQuery.prototype={
constructor:jQuery,
init:function(selector,context,rootjQuery){
var match,elem,ret,doc;
if(!selector){
return this;}
if(selector.nodeType){
this.context=this[0]=selector;
this.length=1;
return this;}
if(selector==="body"&&!context&&document.body){
this.context=document;
this[0]=document.body;
this.selector=selector;
this.length=1;
return this;}
if(typeof selector==="string"){
if(selector.charAt(0)==="<"&&selector.charAt(selector.length-1)===">"&&selector.length>=3){
match=[null,selector,null];}else{
match=quickExpr.exec(selector);}
if(match&&(match[1]||!context)){
if(match[1]){
context=context instanceof jQuery?context[0]:context;
doc=(context?context.ownerDocument||context:document);
ret=rsingleTag.exec(selector);
if(ret){
if(jQuery.isPlainObject(context)){
selector=[document.createElement(ret[1])];
jQuery.fn.attr.call(selector,context,true);}else{
selector=[doc.createElement(ret[1])];}}else{
ret=jQuery.buildFragment([match[1]],[doc]);
selector=(ret.cacheable?jQuery.clone(ret.fragment):ret.fragment).childNodes;}
return jQuery.merge(this,selector);}else{
elem=document.getElementById(match[2]);
if(elem&&elem.parentNode){
if(elem.id!==match[2]){
return rootjQuery.find(selector);}
this.length=1;
this[0]=elem;}
this.context=document;
this.selector=selector;
return this;}}else if(!context||context.jquery){
return(context||rootjQuery).find(selector);}else{
return this.constructor(context).find(selector);}}else if(jQuery.isFunction(selector)){
return rootjQuery.ready(selector);}
if(selector.selector!==undefined){
this.selector=selector.selector;
this.context=selector.context;}
return jQuery.makeArray(selector,this);},
selector:"",
jquery:"1.6.2",
length:0,
size:function(){
return this.length;},
toArray:function(){
return slice.call(this,0);},
get:function(num){
return num==null?
this.toArray():
(num<0?this[this.length+num]:this[num]);},
pushStack:function(elems,name,selector){
var ret=this.constructor();
if(jQuery.isArray(elems)){
push.apply(ret,elems);}else{
jQuery.merge(ret,elems);}
ret.prevObject=this;
ret.context=this.context;
if(name==="find"){
ret.selector=this.selector+(this.selector?" ":"")+selector;}else if(name){
ret.selector=this.selector+"."+name+"("+selector+")";}
return ret;},
each:function(callback,args){
return jQuery.each(this,callback,args);},
ready:function(fn){
jQuery.bindReady();
readyList.done(fn);
return this;},
eq:function(i){
return i===-1?
this.slice(i):
this.slice(i,+i+1);},
first:function(){
return this.eq(0);},
last:function(){
return this.eq(-1);},
slice:function(){
return this.pushStack(slice.apply(this,arguments),"slice",slice.call(arguments).join(","));},
map:function(callback){
return this.pushStack(jQuery.map(this,function(elem,i){
return callback.call(elem,i,elem);}));},
end:function(){
return this.prevObject||this.constructor(null);},
push:push,
sort:[].sort,
splice:[].splice};
jQuery.fn.init.prototype=jQuery.fn;
jQuery.extend=jQuery.fn.extend=function(){
var options,name,src,copy,copyIsArray,clone,
target=arguments[0]||{},
i=1,
length=arguments.length,
deep=false;
if(typeof target==="boolean"){
deep=target;
target=arguments[1]||{};
i=2;}
if(typeof target!=="object"&&!jQuery.isFunction(target)){
target={};}
if(length===i){
target=this;
--i;}
for(;i<length;i++){
if((options=arguments[i])!=null){
for(name in options){
src=target[name];
copy=options[name];
if(target===copy){
continue;}
if(deep&&copy&&(jQuery.isPlainObject(copy)||(copyIsArray=jQuery.isArray(copy)))){
if(copyIsArray){
copyIsArray=false;
clone=src&&jQuery.isArray(src)?src:[];}else{
clone=src&&jQuery.isPlainObject(src)?src:{};}
target[name]=jQuery.extend(deep,clone,copy);}else if(copy!==undefined){
target[name]=copy;}}}}
return target;};
jQuery.extend({
noConflict:function(deep){
if(window.$===jQuery){
window.$=_$;}
if(deep&&window.jQuery===jQuery){
window.jQuery=_jQuery;}
return jQuery;},
isReady:false,
readyWait:1,
holdReady:function(hold){
if(hold){
jQuery.readyWait++;}else{
jQuery.ready(true);}},
ready:function(wait){
if((wait===true&&!--jQuery.readyWait)||(wait!==true&&!jQuery.isReady)){
if(!document.body){
return setTimeout(jQuery.ready,1);}
jQuery.isReady=true;
if(wait!==true&&--jQuery.readyWait>0){
return;}
readyList.resolveWith(document,[jQuery]);
if(jQuery.fn.trigger){
jQuery(document).trigger("ready").unbind("ready");}}},
bindReady:function(){
if(readyList){
return;}
readyList=jQuery._Deferred();
if(document.readyState==="complete"){
return setTimeout(jQuery.ready,1);}
if(document.addEventListener){
document.addEventListener("DOMContentLoaded",DOMContentLoaded,false);
window.addEventListener("load",jQuery.ready,false);}else if(document.attachEvent){
document.attachEvent("onreadystatechange",DOMContentLoaded);
window.attachEvent("onload",jQuery.ready);
var toplevel=false;
try{
toplevel=window.frameElement==null;}catch(e){}
if(document.documentElement.doScroll&&toplevel){
doScrollCheck();}}},
isFunction:function(obj){
return jQuery.type(obj)==="function";},
isArray:Array.isArray||function(obj){
return jQuery.type(obj)==="array";},
isWindow:function(obj){
return obj&&typeof obj==="object"&&"setInterval"in obj;},
isNaN:function(obj){
return obj==null||!rdigit.test(obj)||isNaN(obj);},
type:function(obj){
return obj==null?
String(obj):
class2type[toString.call(obj)]||"object";},
isPlainObject:function(obj){
if(!obj||jQuery.type(obj)!=="object"||obj.nodeType||jQuery.isWindow(obj)){
return false;}
if(obj.constructor&&!hasOwn.call(obj,"constructor")&&!hasOwn.call(obj.constructor.prototype,"isPrototypeOf")){
return false;}
var key;
for(key in obj){}
return key===undefined||hasOwn.call(obj,key);},
isEmptyObject:function(obj){
for(var name in obj){
return false;}
return true;},
error:function(msg){
throw msg;},
parseJSON:function(data){
if(typeof data!=="string"||!data){
return null;}
data=jQuery.trim(data);
if(window.JSON&&window.JSON.parse){
return window.JSON.parse(data);}
if(rvalidchars.test(data.replace(rvalidescape,"@").replace(rvalidtokens,"]").replace(rvalidbraces,""))){
return(new Function("return "+data))();}
jQuery.error("Invalid JSON: "+data);},
parseXML:function(data,xml,tmp){
if(window.DOMParser){
tmp=new DOMParser();
xml=tmp.parseFromString(data,"text/xml");}else{
xml=new ActiveXObject("Microsoft.XMLDOM");
xml.async="false";
xml.loadXML(data);}
tmp=xml.documentElement;
if(!tmp||!tmp.nodeName||tmp.nodeName==="parsererror"){
jQuery.error("Invalid XML: "+data);}
return xml;},
noop:function(){},
globalEval:function(data){
if(data&&rnotwhite.test(data)){
(window.execScript||function(data){
window["eval"].call(window,data);})(data);}},
camelCase:function(string){
return string.replace(rdashAlpha,fcamelCase);},
nodeName:function(elem,name){
return elem.nodeName&&elem.nodeName.toUpperCase()===name.toUpperCase();},
each:function(object,callback,args){
var name,i=0,
length=object.length,
isObj=length===undefined||jQuery.isFunction(object);
if(args){
if(isObj){
for(name in object){
if(callback.apply(object[name],args)===false){
break;}}}else{
for(;i<length;){
if(callback.apply(object[i++],args)===false){
break;}}}}else{
if(isObj){
for(name in object){
if(callback.call(object[name],name,object[name])===false){
break;}}}else{
for(;i<length;){
if(callback.call(object[i],i,object[i++])===false){
break;}}}}
return object;},
trim:trim?
function(text){
return text==null?"":
trim.call(text);}:
function(text){
return text==null?"":
text.toString().replace(trimLeft,"").replace(trimRight,"");},
makeArray:function(array,results){
var ret=results||[];
if(array!=null){
var type=jQuery.type(array);
if(array.length==null||type==="string"||type==="function"||type==="regexp"||jQuery.isWindow(array)){
push.call(ret,array);}else{
jQuery.merge(ret,array);}}
return ret;},
inArray:function(elem,array){
if(indexOf){
return indexOf.call(array,elem);}
for(var i=0,length=array.length;i<length;i++){
if(array[i]===elem){
return i;}}
return-1;},
merge:function(first,second){
var i=first.length,
j=0;
if(typeof second.length==="number"){
for(var l=second.length;j<l;j++){
first[i++]=second[j];}}else{
while(second[j]!==undefined){
first[i++]=second[j++];}}
first.length=i;
return first;},
grep:function(elems,callback,inv){
var ret=[],retVal;
inv=!!inv;
for(var i=0,length=elems.length;i<length;i++){
retVal=!!callback(elems[i],i);
if(inv!==retVal){
ret.push(elems[i]);}}
return ret;},
map:function(elems,callback,arg){
var value,key,ret=[],
i=0,
length=elems.length,
isArray=elems instanceof jQuery||length!==undefined&&typeof length==="number"&&((length>0&&elems[0]&&elems[length-1])||length===0||jQuery.isArray(elems));
if(isArray){
for(;i<length;i++){
value=callback(elems[i],i,arg);
if(value!=null){
ret[ret.length]=value;}}}else{
for(key in elems){
value=callback(elems[key],key,arg);
if(value!=null){
ret[ret.length]=value;}}}
return ret.concat.apply([],ret);},
guid:1,
proxy:function(fn,context){
if(typeof context==="string"){
var tmp=fn[context];
context=fn;
fn=tmp;}
if(!jQuery.isFunction(fn)){
return undefined;}
var args=slice.call(arguments,2),
proxy=function(){
return fn.apply(context,args.concat(slice.call(arguments)));};
proxy.guid=fn.guid=fn.guid||proxy.guid||jQuery.guid++;
return proxy;},
access:function(elems,key,value,exec,fn,pass){
var length=elems.length;
if(typeof key==="object"){
for(var k in key){
jQuery.access(elems,k,key[k],exec,fn,value);}
return elems;}
if(value!==undefined){
exec=!pass&&exec&&jQuery.isFunction(value);
for(var i=0;i<length;i++){
fn(elems[i],key,exec?value.call(elems[i],i,fn(elems[i],key)):value,pass);}
return elems;}
return length?fn(elems[0],key):undefined;},
now:function(){
return(new Date()).getTime();},
uaMatch:function(ua){
ua=ua.toLowerCase();
var match=rwebkit.exec(ua)||
ropera.exec(ua)||
rmsie.exec(ua)||
ua.indexOf("compatible")<0&&rmozilla.exec(ua)||
[];
return{browser:match[1]||"",version:match[2]||"0"};},
sub:function(){
function jQuerySub(selector,context){
return new jQuerySub.fn.init(selector,context);}
jQuery.extend(true,jQuerySub,this);
jQuerySub.superclass=this;
jQuerySub.fn=jQuerySub.prototype=this();
jQuerySub.fn.constructor=jQuerySub;
jQuerySub.sub=this.sub;
jQuerySub.fn.init=function init(selector,context){
if(context&&context instanceof jQuery&&!(context instanceof jQuerySub)){
context=jQuerySub(context);}
return jQuery.fn.init.call(this,selector,context,rootjQuerySub);};
jQuerySub.fn.init.prototype=jQuerySub.fn;
var rootjQuerySub=jQuerySub(document);
return jQuerySub;},
browser:{}});
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(i,name){
class2type["[object "+name+"]"]=name.toLowerCase();});
browserMatch=jQuery.uaMatch(userAgent);
if(browserMatch.browser){
jQuery.browser[browserMatch.browser]=true;
jQuery.browser.version=browserMatch.version;}
if(jQuery.browser.webkit){
jQuery.browser.safari=true;}
if(rnotwhite.test("\xA0")){
trimLeft=/^[\s\xA0]+/;
trimRight=/[\s\xA0]+$/;}
rootjQuery=jQuery(document);
if(document.addEventListener){
DOMContentLoaded=function(){
document.removeEventListener("DOMContentLoaded",DOMContentLoaded,false);
jQuery.ready();};}else if(document.attachEvent){
DOMContentLoaded=function(){
if(document.readyState==="complete"){
document.detachEvent("onreadystatechange",DOMContentLoaded);
jQuery.ready();}};}
function doScrollCheck(){
if(jQuery.isReady){
return;}
try{
document.documentElement.doScroll("left");}catch(e){
setTimeout(doScrollCheck,1);
return;}
jQuery.ready();}
return jQuery;})();
var
promiseMethods="done fail isResolved isRejected promise then always pipe".split(" "),
sliceDeferred=[].slice;
jQuery.extend({
_Deferred:function(){
var
callbacks=[],
fired,
firing,
cancelled,
deferred={
done:function(){
if(!cancelled){
var args=arguments,
i,
length,
elem,
type,
_fired;
if(fired){
_fired=fired;
fired=0;}
for(i=0,length=args.length;i<length;i++){
elem=args[i];
type=jQuery.type(elem);
if(type==="array"){
deferred.done.apply(deferred,elem);}else if(type==="function"){
callbacks.push(elem);}}
if(_fired){
deferred.resolveWith(_fired[0],_fired[1]);}}
return this;},
resolveWith:function(context,args){
if(!cancelled&&!fired&&!firing){
args=args||[];
firing=1;
try{
while(callbacks[0]){
callbacks.shift().apply(context,args);}}
finally{
fired=[context,args];
firing=0;}}
return this;},
resolve:function(){
deferred.resolveWith(this,arguments);
return this;},
isResolved:function(){
return!!(firing||fired);},
cancel:function(){
cancelled=1;
callbacks=[];
return this;}};
return deferred;},
Deferred:function(func){
var deferred=jQuery._Deferred(),
failDeferred=jQuery._Deferred(),
promise;
jQuery.extend(deferred,{
then:function(doneCallbacks,failCallbacks){
deferred.done(doneCallbacks).fail(failCallbacks);
return this;},
always:function(){
return deferred.done.apply(deferred,arguments).fail.apply(this,arguments);},
fail:failDeferred.done,
rejectWith:failDeferred.resolveWith,
reject:failDeferred.resolve,
isRejected:failDeferred.isResolved,
pipe:function(fnDone,fnFail){
return jQuery.Deferred(function(newDefer){
jQuery.each({
done:[fnDone,"resolve"],
fail:[fnFail,"reject"]},function(handler,data){
var fn=data[0],
action=data[1],
returned;
if(jQuery.isFunction(fn)){
deferred[handler](function(){
returned=fn.apply(this,arguments);
if(returned&&jQuery.isFunction(returned.promise)){
returned.promise().then(newDefer.resolve,newDefer.reject);}else{
newDefer[action](returned);}});}else{
deferred[handler](newDefer[action]);}});}).promise();},
promise:function(obj){
if(obj==null){
if(promise){
return promise;}
promise=obj={};}
var i=promiseMethods.length;
while(i--){
obj[promiseMethods[i]]=deferred[promiseMethods[i]];}
return obj;}});
deferred.done(failDeferred.cancel).fail(deferred.cancel);
delete deferred.cancel;
if(func){
func.call(deferred,deferred);}
return deferred;},
when:function(firstParam){
var args=arguments,
i=0,
length=args.length,
count=length,
deferred=length<=1&&firstParam&&jQuery.isFunction(firstParam.promise)?
firstParam:
jQuery.Deferred();
function resolveFunc(i){
return function(value){
args[i]=arguments.length>1?sliceDeferred.call(arguments,0):value;
if(!(--count)){
deferred.resolveWith(deferred,sliceDeferred.call(args,0));}};}
if(length>1){
for(;i<length;i++){
if(args[i]&&jQuery.isFunction(args[i].promise)){
args[i].promise().then(resolveFunc(i),deferred.reject);}else{
--count;}}
if(!count){
deferred.resolveWith(deferred,args);}}else if(deferred!==firstParam){
deferred.resolveWith(deferred,length?[firstParam]:[]);}
return deferred.promise();}});
jQuery.support=(function(){
var div=document.createElement("div"),
documentElement=document.documentElement,
all,
a,
select,
opt,
input,
marginDiv,
support,
fragment,
body,
testElementParent,
testElement,
testElementStyle,
tds,
events,
eventName,
i,
isSupported;
div.setAttribute("className","t");
div.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
all=div.getElementsByTagName("*");
a=div.getElementsByTagName("a")[0];
if(!all||!all.length||!a){
return{};}
select=document.createElement("select");
opt=select.appendChild(document.createElement("option"));
input=div.getElementsByTagName("input")[0];
support={
leadingWhitespace:(div.firstChild.nodeType===3),
tbody:!div.getElementsByTagName("tbody").length,
htmlSerialize:!!div.getElementsByTagName("link").length,
style:/top/.test(a.getAttribute("style")),
hrefNormalized:(a.getAttribute("href")==="/a"),
opacity:/^0.55$/.test(a.style.opacity),
cssFloat:!!a.style.cssFloat,
checkOn:(input.value==="on"),
optSelected:opt.selected,
getSetAttribute:div.className!=="t",
submitBubbles:true,
changeBubbles:true,
focusinBubbles:false,
deleteExpando:true,
noCloneEvent:true,
inlineBlockNeedsLayout:false,
shrinkWrapBlocks:false,
reliableMarginRight:true};
input.checked=true;
support.noCloneChecked=input.cloneNode(true).checked;
select.disabled=true;
support.optDisabled=!opt.disabled;
try{
delete div.test;}catch(e){
support.deleteExpando=false;}
if(!div.addEventListener&&div.attachEvent&&div.fireEvent){
div.attachEvent("onclick",function(){
support.noCloneEvent=false;});
div.cloneNode(true).fireEvent("onclick");}
input=document.createElement("input");
input.value="t";
input.setAttribute("type","radio");
support.radioValue=input.value==="t";
input.setAttribute("checked","checked");
div.appendChild(input);
fragment=document.createDocumentFragment();
fragment.appendChild(div.firstChild);
support.checkClone=fragment.cloneNode(true).cloneNode(true).lastChild.checked;
div.innerHTML="";
div.style.width=div.style.paddingLeft="1px";
body=document.getElementsByTagName("body")[0];
testElement=document.createElement(body?"div":"body");
testElementStyle={
visibility:"hidden",
width:0,
height:0,
border:0,
margin:0};
if(body){
jQuery.extend(testElementStyle,{
position:"absolute",
left:-1000,
top:-1000});}
for(i in testElementStyle){
testElement.style[i]=testElementStyle[i];}
testElement.appendChild(div);
testElementParent=body||documentElement;
testElementParent.insertBefore(testElement,testElementParent.firstChild);
support.appendChecked=input.checked;
support.boxModel=div.offsetWidth===2;
if("zoom"in div.style){
div.style.display="inline";
div.style.zoom=1;
support.inlineBlockNeedsLayout=(div.offsetWidth===2);
div.style.display="";
div.innerHTML="<div style='width:4px;'></div>";
support.shrinkWrapBlocks=(div.offsetWidth!==2);}
div.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>";
tds=div.getElementsByTagName("td");
isSupported=(tds[0].offsetHeight===0);
tds[0].style.display="";
tds[1].style.display="none";
support.reliableHiddenOffsets=isSupported&&(tds[0].offsetHeight===0);
div.innerHTML="";
if(document.defaultView&&document.defaultView.getComputedStyle){
marginDiv=document.createElement("div");
marginDiv.style.width="0";
marginDiv.style.marginRight="0";
div.appendChild(marginDiv);
support.reliableMarginRight=
(parseInt((document.defaultView.getComputedStyle(marginDiv,null)||{marginRight:0}).marginRight,10)||0)===0;}
testElement.innerHTML="";
testElementParent.removeChild(testElement);
if(div.attachEvent){
for(i in{
submit:1,
change:1,
focusin:1}){
eventName="on"+i;
isSupported=(eventName in div);
if(!isSupported){
div.setAttribute(eventName,"return;");
isSupported=(typeof div[eventName]==="function");}
support[i+"Bubbles"]=isSupported;}}
testElement=fragment=select=opt=body=marginDiv=div=input=null;
return support;})();
jQuery.boxModel=jQuery.support.boxModel;
var rbrace=/^(?:\{.*\}|\[.*\])$/,
rmultiDash=/([a-z])([A-Z])/g;
jQuery.extend({
cache:{},
uuid:0,
expando:"jQuery"+(jQuery.fn.jquery+Math.random()).replace(/\D/g,""),
noData:{"embed":true,"object":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000","applet":true},
hasData:function(elem){
elem=elem.nodeType?jQuery.cache[elem[jQuery.expando]]:elem[jQuery.expando];
return!!elem&&!isEmptyDataObject(elem);},
data:function(elem,name,data,pvt){
if(!jQuery.acceptData(elem)){
return;}
var internalKey=jQuery.expando,getByName=typeof name==="string",thisCache,
isNode=elem.nodeType,
cache=isNode?jQuery.cache:elem,
id=isNode?elem[jQuery.expando]:elem[jQuery.expando]&&jQuery.expando;
if((!id||(pvt&&id&&!cache[id][internalKey]))&&getByName&&data===undefined){
return;}
if(!id){
if(isNode){
elem[jQuery.expando]=id=++jQuery.uuid;}else{
id=jQuery.expando;}}
if(!cache[id]){
cache[id]={};
if(!isNode){
cache[id].toJSON=jQuery.noop;}}
if(typeof name==="object"||typeof name==="function"){
if(pvt){
cache[id][internalKey]=jQuery.extend(cache[id][internalKey],name);}else{
cache[id]=jQuery.extend(cache[id],name);}}
thisCache=cache[id];
if(pvt){
if(!thisCache[internalKey]){
thisCache[internalKey]={};}
thisCache=thisCache[internalKey];}
if(data!==undefined){
thisCache[jQuery.camelCase(name)]=data;}
if(name==="events"&&!thisCache[name]){
return thisCache[internalKey]&&thisCache[internalKey].events;}
return getByName?
thisCache[jQuery.camelCase(name)]||thisCache[name]:
thisCache;},
removeData:function(elem,name,pvt){
if(!jQuery.acceptData(elem)){
return;}
var internalKey=jQuery.expando,isNode=elem.nodeType,
cache=isNode?jQuery.cache:elem,
id=isNode?elem[jQuery.expando]:jQuery.expando;
if(!cache[id]){
return;}
if(name){
var thisCache=pvt?cache[id][internalKey]:cache[id];
if(thisCache){
delete thisCache[name];
if(!isEmptyDataObject(thisCache)){
return;}}}
if(pvt){
delete cache[id][internalKey];
if(!isEmptyDataObject(cache[id])){
return;}}
var internalCache=cache[id][internalKey];
if(jQuery.support.deleteExpando||cache!=window){
delete cache[id];}else{
cache[id]=null;}
if(internalCache){
cache[id]={};
if(!isNode){
cache[id].toJSON=jQuery.noop;}
cache[id][internalKey]=internalCache;}else if(isNode){
if(jQuery.support.deleteExpando){
delete elem[jQuery.expando];}else if(elem.removeAttribute){
elem.removeAttribute(jQuery.expando);}else{
elem[jQuery.expando]=null;}}},
_data:function(elem,name,data){
return jQuery.data(elem,name,data,true);},
acceptData:function(elem){
if(elem.nodeName){
var match=jQuery.noData[elem.nodeName.toLowerCase()];
if(match){
return!(match===true||elem.getAttribute("classid")!==match);}}
return true;}});
jQuery.fn.extend({
data:function(key,value){
var data=null;
if(typeof key==="undefined"){
if(this.length){
data=jQuery.data(this[0]);
if(this[0].nodeType===1){
var attr=this[0].attributes,name;
for(var i=0,l=attr.length;i<l;i++){
name=attr[i].name;
if(name.indexOf("data-")===0){
name=jQuery.camelCase(name.substring(5));
dataAttr(this[0],name,data[name]);}}}}
return data;}else if(typeof key==="object"){
return this.each(function(){
jQuery.data(this,key);});}
var parts=key.split(".");
parts[1]=parts[1]?"."+parts[1]:"";
if(value===undefined){
data=this.triggerHandler("getData"+parts[1]+"!",[parts[0]]);
if(data===undefined&&this.length){
data=jQuery.data(this[0],key);
data=dataAttr(this[0],key,data);}
return data===undefined&&parts[1]?
this.data(parts[0]):
data;}else{
return this.each(function(){
var $this=jQuery(this),
args=[parts[0],value];
$this.triggerHandler("setData"+parts[1]+"!",args);
jQuery.data(this,key,value);
$this.triggerHandler("changeData"+parts[1]+"!",args);});}},
removeData:function(key){
return this.each(function(){
jQuery.removeData(this,key);});}});
function dataAttr(elem,key,data){
if(data===undefined&&elem.nodeType===1){
var name="data-"+key.replace(rmultiDash,"$1-$2").toLowerCase();
data=elem.getAttribute(name);
if(typeof data==="string"){
try{
data=data==="true"?true:
data==="false"?false:
data==="null"?null:!jQuery.isNaN(data)?parseFloat(data):
rbrace.test(data)?jQuery.parseJSON(data):
data;}catch(e){}
jQuery.data(elem,key,data);}else{
data=undefined;}}
return data;}
function isEmptyDataObject(obj){
for(var name in obj){
if(name!=="toJSON"){
return false;}}
return true;}
function handleQueueMarkDefer(elem,type,src){
var deferDataKey=type+"defer",
queueDataKey=type+"queue",
markDataKey=type+"mark",
defer=jQuery.data(elem,deferDataKey,undefined,true);
if(defer&&
(src==="queue"||!jQuery.data(elem,queueDataKey,undefined,true))&&
(src==="mark"||!jQuery.data(elem,markDataKey,undefined,true))){
setTimeout(function(){
if(!jQuery.data(elem,queueDataKey,undefined,true)&&!jQuery.data(elem,markDataKey,undefined,true)){
jQuery.removeData(elem,deferDataKey,true);
defer.resolve();}},0);}}
jQuery.extend({
_mark:function(elem,type){
if(elem){
type=(type||"fx")+"mark";
jQuery.data(elem,type,(jQuery.data(elem,type,undefined,true)||0)+1,true);}},
_unmark:function(force,elem,type){
if(force!==true){
type=elem;
elem=force;
force=false;}
if(elem){
type=type||"fx";
var key=type+"mark",
count=force?0:((jQuery.data(elem,key,undefined,true)||1)-1);
if(count){
jQuery.data(elem,key,count,true);}else{
jQuery.removeData(elem,key,true);
handleQueueMarkDefer(elem,type,"mark");}}},
queue:function(elem,type,data){
if(elem){
type=(type||"fx")+"queue";
var q=jQuery.data(elem,type,undefined,true);
if(data){
if(!q||jQuery.isArray(data)){
q=jQuery.data(elem,type,jQuery.makeArray(data),true);}else{
q.push(data);}}
return q||[];}},
dequeue:function(elem,type){
type=type||"fx";
var queue=jQuery.queue(elem,type),
fn=queue.shift(),
defer;
if(fn==="inprogress"){
fn=queue.shift();}
if(fn){
if(type==="fx"){
queue.unshift("inprogress");}
fn.call(elem,function(){
jQuery.dequeue(elem,type);});}
if(!queue.length){
jQuery.removeData(elem,type+"queue",true);
handleQueueMarkDefer(elem,type,"queue");}}});
jQuery.fn.extend({
queue:function(type,data){
if(typeof type!=="string"){
data=type;
type="fx";}
if(data===undefined){
return jQuery.queue(this[0],type);}
return this.each(function(){
var queue=jQuery.queue(this,type,data);
if(type==="fx"&&queue[0]!=="inprogress"){
jQuery.dequeue(this,type);}});},
dequeue:function(type){
return this.each(function(){
jQuery.dequeue(this,type);});},
delay:function(time,type){
time=jQuery.fx?jQuery.fx.speeds[time]||time:time;
type=type||"fx";
return this.queue(type,function(){
var elem=this;
setTimeout(function(){
jQuery.dequeue(elem,type);},time);});},
clearQueue:function(type){
return this.queue(type||"fx",[]);},
promise:function(type,object){
if(typeof type!=="string"){
object=type;
type=undefined;}
type=type||"fx";
var defer=jQuery.Deferred(),
elements=this,
i=elements.length,
count=1,
deferDataKey=type+"defer",
queueDataKey=type+"queue",
markDataKey=type+"mark",
tmp;
function resolve(){
if(!(--count)){
defer.resolveWith(elements,[elements]);}}
while(i--){
if((tmp=jQuery.data(elements[i],deferDataKey,undefined,true)||
(jQuery.data(elements[i],queueDataKey,undefined,true)||
jQuery.data(elements[i],markDataKey,undefined,true))&&
jQuery.data(elements[i],deferDataKey,jQuery._Deferred(),true))){
count++;
tmp.done(resolve);}}
resolve();
return defer.promise();}});
var rclass=/[\n\t\r]/g,
rspace=/\s+/,
rreturn=/\r/g,
rtype=/^(?:button|input)$/i,
rfocusable=/^(?:button|input|object|select|textarea)$/i,
rclickable=/^a(?:rea)?$/i,
rboolean=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
rinvalidChar=/\:|^on/,
formHook,boolHook;
jQuery.fn.extend({
attr:function(name,value){
return jQuery.access(this,name,value,true,jQuery.attr);},
removeAttr:function(name){
return this.each(function(){
jQuery.removeAttr(this,name);});},
prop:function(name,value){
return jQuery.access(this,name,value,true,jQuery.prop);},
removeProp:function(name){
name=jQuery.propFix[name]||name;
return this.each(function(){
try{
this[name]=undefined;
delete this[name];}catch(e){}});},
addClass:function(value){
var classNames,i,l,elem,
setClass,c,cl;
if(jQuery.isFunction(value)){
return this.each(function(j){
jQuery(this).addClass(value.call(this,j,this.className));});}
if(value&&typeof value==="string"){
classNames=value.split(rspace);
for(i=0,l=this.length;i<l;i++){
elem=this[i];
if(elem.nodeType===1){
if(!elem.className&&classNames.length===1){
elem.className=value;}else{
setClass=" "+elem.className+" ";
for(c=0,cl=classNames.length;c<cl;c++){
if(!~setClass.indexOf(" "+classNames[c]+" ")){
setClass+=classNames[c]+" ";}}
elem.className=jQuery.trim(setClass);}}}}
return this;},
removeClass:function(value){
var classNames,i,l,elem,className,c,cl;
if(jQuery.isFunction(value)){
return this.each(function(j){
jQuery(this).removeClass(value.call(this,j,this.className));});}
if((value&&typeof value==="string")||value===undefined){
classNames=(value||"").split(rspace);
for(i=0,l=this.length;i<l;i++){
elem=this[i];
if(elem.nodeType===1&&elem.className){
if(value){
className=(" "+elem.className+" ").replace(rclass," ");
for(c=0,cl=classNames.length;c<cl;c++){
className=className.replace(" "+classNames[c]+" "," ");}
elem.className=jQuery.trim(className);}else{
elem.className="";}}}}
return this;},
toggleClass:function(value,stateVal){
var type=typeof value,
isBool=typeof stateVal==="boolean";
if(jQuery.isFunction(value)){
return this.each(function(i){
jQuery(this).toggleClass(value.call(this,i,this.className,stateVal),stateVal);});}
return this.each(function(){
if(type==="string"){
var className,
i=0,
self=jQuery(this),
state=stateVal,
classNames=value.split(rspace);
while((className=classNames[i++])){
state=isBool?state:!self.hasClass(className);
self[state?"addClass":"removeClass"](className);}}else if(type==="undefined"||type==="boolean"){
if(this.className){
jQuery._data(this,"__className__",this.className);}
this.className=this.className||value===false?"":jQuery._data(this,"__className__")||"";}});},
hasClass:function(selector){
var className=" "+selector+" ";
for(var i=0,l=this.length;i<l;i++){
if((" "+this[i].className+" ").replace(rclass," ").indexOf(className)>-1){
return true;}}
return false;},
val:function(value){
var hooks,ret,
elem=this[0];
if(!arguments.length){
if(elem){
hooks=jQuery.valHooks[elem.nodeName.toLowerCase()]||jQuery.valHooks[elem.type];
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,"value"))!==undefined){
return ret;}
ret=elem.value;
return typeof ret==="string"?
ret.replace(rreturn,""):
ret==null?"":ret;}
return undefined;}
var isFunction=jQuery.isFunction(value);
return this.each(function(i){
var self=jQuery(this),val;
if(this.nodeType!==1){
return;}
if(isFunction){
val=value.call(this,i,self.val());}else{
val=value;}
if(val==null){
val="";}else if(typeof val==="number"){
val+="";}else if(jQuery.isArray(val)){
val=jQuery.map(val,function(value){
return value==null?"":value+"";});}
hooks=jQuery.valHooks[this.nodeName.toLowerCase()]||jQuery.valHooks[this.type];
if(!hooks||!("set"in hooks)||hooks.set(this,val,"value")===undefined){
this.value=val;}});}});
jQuery.extend({
valHooks:{
option:{
get:function(elem){
var val=elem.attributes.value;
return!val||val.specified?elem.value:elem.text;}},
select:{
get:function(elem){
var value,
index=elem.selectedIndex,
values=[],
options=elem.options,
one=elem.type==="select-one";
if(index<0){
return null;}
for(var i=one?index:0,max=one?index+1:options.length;i<max;i++){
var option=options[i];
if(option.selected&&(jQuery.support.optDisabled?!option.disabled:option.getAttribute("disabled")===null)&&
(!option.parentNode.disabled||!jQuery.nodeName(option.parentNode,"optgroup"))){
value=jQuery(option).val();
if(one){
return value;}
values.push(value);}}
if(one&&!values.length&&options.length){
return jQuery(options[index]).val();}
return values;},
set:function(elem,value){
var values=jQuery.makeArray(value);
jQuery(elem).find("option").each(function(){
this.selected=jQuery.inArray(jQuery(this).val(),values)>=0;});
if(!values.length){
elem.selectedIndex=-1;}
return values;}}},
attrFn:{
val:true,
css:true,
html:true,
text:true,
data:true,
width:true,
height:true,
offset:true},
attrFix:{
tabindex:"tabIndex"},
attr:function(elem,name,value,pass){
var nType=elem.nodeType;
if(!elem||nType===3||nType===8||nType===2){
return undefined;}
if(pass&&name in jQuery.attrFn){
return jQuery(elem)[name](value);}
if(!("getAttribute"in elem)){
return jQuery.prop(elem,name,value);}
var ret,hooks,
notxml=nType!==1||!jQuery.isXMLDoc(elem);
if(notxml){
name=jQuery.attrFix[name]||name;
hooks=jQuery.attrHooks[name];
if(!hooks){
if(rboolean.test(name)){
hooks=boolHook;}else if(formHook&&name!=="className"&&
(jQuery.nodeName(elem,"form")||rinvalidChar.test(name))){
hooks=formHook;}}}
if(value!==undefined){
if(value===null){
jQuery.removeAttr(elem,name);
return undefined;}else if(hooks&&"set"in hooks&&notxml&&(ret=hooks.set(elem,value,name))!==undefined){
return ret;}else{
elem.setAttribute(name,""+value);
return value;}}else if(hooks&&"get"in hooks&&notxml&&(ret=hooks.get(elem,name))!==null){
return ret;}else{
ret=elem.getAttribute(name);
return ret===null?
undefined:
ret;}},
removeAttr:function(elem,name){
var propName;
if(elem.nodeType===1){
name=jQuery.attrFix[name]||name;
if(jQuery.support.getSetAttribute){
elem.removeAttribute(name);}else{
jQuery.attr(elem,name,"");
elem.removeAttributeNode(elem.getAttributeNode(name));}
if(rboolean.test(name)&&(propName=jQuery.propFix[name]||name)in elem){
elem[propName]=false;}}},
attrHooks:{
type:{
set:function(elem,value){
if(rtype.test(elem.nodeName)&&elem.parentNode){
jQuery.error("type property can't be changed");}else if(!jQuery.support.radioValue&&value==="radio"&&jQuery.nodeName(elem,"input")){
var val=elem.value;
elem.setAttribute("type",value);
if(val){
elem.value=val;}
return value;}}},
tabIndex:{
get:function(elem){
var attributeNode=elem.getAttributeNode("tabIndex");
return attributeNode&&attributeNode.specified?
parseInt(attributeNode.value,10):
rfocusable.test(elem.nodeName)||rclickable.test(elem.nodeName)&&elem.href?
0:
undefined;}},
value:{
get:function(elem,name){
if(formHook&&jQuery.nodeName(elem,"button")){
return formHook.get(elem,name);}
return name in elem?
elem.value:
null;},
set:function(elem,value,name){
if(formHook&&jQuery.nodeName(elem,"button")){
return formHook.set(elem,value,name);}
elem.value=value;}}},
propFix:{
tabindex:"tabIndex",
readonly:"readOnly","for":"htmlFor","class":"className",
maxlength:"maxLength",
cellspacing:"cellSpacing",
cellpadding:"cellPadding",
rowspan:"rowSpan",
colspan:"colSpan",
usemap:"useMap",
frameborder:"frameBorder",
contenteditable:"contentEditable"},
prop:function(elem,name,value){
var nType=elem.nodeType;
if(!elem||nType===3||nType===8||nType===2){
return undefined;}
var ret,hooks,
notxml=nType!==1||!jQuery.isXMLDoc(elem);
if(notxml){
name=jQuery.propFix[name]||name;
hooks=jQuery.propHooks[name];}
if(value!==undefined){
if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){
return ret;}else{
return(elem[name]=value);}}else{
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==undefined){
return ret;}else{
return elem[name];}}},
propHooks:{}});
boolHook={
get:function(elem,name){
return jQuery.prop(elem,name)?
name.toLowerCase():
undefined;},
set:function(elem,value,name){
var propName;
if(value===false){
jQuery.removeAttr(elem,name);}else{
propName=jQuery.propFix[name]||name;
if(propName in elem){
elem[propName]=true;}
elem.setAttribute(name,name.toLowerCase());}
return name;}};
if(!jQuery.support.getSetAttribute){
jQuery.attrFix=jQuery.propFix;
formHook=jQuery.attrHooks.name=jQuery.attrHooks.title=jQuery.valHooks.button={
get:function(elem,name){
var ret;
ret=elem.getAttributeNode(name);
return ret&&ret.nodeValue!==""?
ret.nodeValue:
undefined;},
set:function(elem,value,name){
var ret=elem.getAttributeNode(name);
if(ret){
ret.nodeValue=value;
return value;}}};
jQuery.each(["width","height"],function(i,name){
jQuery.attrHooks[name]=jQuery.extend(jQuery.attrHooks[name],{
set:function(elem,value){
if(value===""){
elem.setAttribute(name,"auto");
return value;}}});});}
if(!jQuery.support.hrefNormalized){
jQuery.each(["href","src","width","height"],function(i,name){
jQuery.attrHooks[name]=jQuery.extend(jQuery.attrHooks[name],{
get:function(elem){
var ret=elem.getAttribute(name,2);
return ret===null?undefined:ret;}});});}
if(!jQuery.support.style){
jQuery.attrHooks.style={
get:function(elem){
return elem.style.cssText.toLowerCase()||undefined;},
set:function(elem,value){
return(elem.style.cssText=""+value);}};}
if(!jQuery.support.optSelected){
jQuery.propHooks.selected=jQuery.extend(jQuery.propHooks.selected,{
get:function(elem){
var parent=elem.parentNode;
if(parent){
parent.selectedIndex;
if(parent.parentNode){
parent.parentNode.selectedIndex;}}}});}
if(!jQuery.support.checkOn){
jQuery.each(["radio","checkbox"],function(){
jQuery.valHooks[this]={
get:function(elem){
return elem.getAttribute("value")===null?"on":elem.value;}};});}
jQuery.each(["radio","checkbox"],function(){
jQuery.valHooks[this]=jQuery.extend(jQuery.valHooks[this],{
set:function(elem,value){
if(jQuery.isArray(value)){
return(elem.checked=jQuery.inArray(jQuery(elem).val(),value)>=0);}}});});
var rnamespaces=/\.(.*)$/,
rformElems=/^(?:textarea|input|select)$/i,
rperiod=/\./g,
rspaces=/ /g,
rescape=/[^\w\s.|`]/g,
fcleanup=function(nm){
return nm.replace(rescape,"\\$&");};
jQuery.event={
add:function(elem,types,handler,data){
if(elem.nodeType===3||elem.nodeType===8){
return;}
if(handler===false){
handler=returnFalse;}else if(!handler){
return;}
var handleObjIn,handleObj;
if(handler.handler){
handleObjIn=handler;
handler=handleObjIn.handler;}
if(!handler.guid){
handler.guid=jQuery.guid++;}
var elemData=jQuery._data(elem);
if(!elemData){
return;}
var events=elemData.events,
eventHandle=elemData.handle;
if(!events){
elemData.events=events={};}
if(!eventHandle){
elemData.handle=eventHandle=function(e){
return typeof jQuery!=="undefined"&&(!e||jQuery.event.triggered!==e.type)?
jQuery.event.handle.apply(eventHandle.elem,arguments):
undefined;};}
eventHandle.elem=elem;
types=types.split(" ");
var type,i=0,namespaces;
while((type=types[i++])){
handleObj=handleObjIn?
jQuery.extend({},handleObjIn):
{handler:handler,data:data};
if(type.indexOf(".")>-1){
namespaces=type.split(".");
type=namespaces.shift();
handleObj.namespace=namespaces.slice(0).sort().join(".");}else{
namespaces=[];
handleObj.namespace="";}
handleObj.type=type;
if(!handleObj.guid){
handleObj.guid=handler.guid;}
var handlers=events[type],
special=jQuery.event.special[type]||{};
if(!handlers){
handlers=events[type]=[];
if(!special.setup||special.setup.call(elem,data,namespaces,eventHandle)===false){
if(elem.addEventListener){
elem.addEventListener(type,eventHandle,false);}else if(elem.attachEvent){
elem.attachEvent("on"+type,eventHandle);}}}
if(special.add){
special.add.call(elem,handleObj);
if(!handleObj.handler.guid){
handleObj.handler.guid=handler.guid;}}
handlers.push(handleObj);
jQuery.event.global[type]=true;}
elem=null;},
global:{},
remove:function(elem,types,handler,pos){
if(elem.nodeType===3||elem.nodeType===8){
return;}
if(handler===false){
handler=returnFalse;}
var ret,type,fn,j,i=0,all,namespaces,namespace,special,eventType,handleObj,origType,
elemData=jQuery.hasData(elem)&&jQuery._data(elem),
events=elemData&&elemData.events;
if(!elemData||!events){
return;}
if(types&&types.type){
handler=types.handler;
types=types.type;}
if(!types||typeof types==="string"&&types.charAt(0)==="."){
types=types||"";
for(type in events){
jQuery.event.remove(elem,type+types);}
return;}
types=types.split(" ");
while((type=types[i++])){
origType=type;
handleObj=null;
all=type.indexOf(".")<0;
namespaces=[];
if(!all){
namespaces=type.split(".");
type=namespaces.shift();
namespace=new RegExp("(^|\\.)"+
jQuery.map(namespaces.slice(0).sort(),fcleanup).join("\\.(?:.*\\.)?")+"(\\.|$)");}
eventType=events[type];
if(!eventType){
continue;}
if(!handler){
for(j=0;j<eventType.length;j++){
handleObj=eventType[j];
if(all||namespace.test(handleObj.namespace)){
jQuery.event.remove(elem,origType,handleObj.handler,j);
eventType.splice(j--,1);}}
continue;}
special=jQuery.event.special[type]||{};
for(j=pos||0;j<eventType.length;j++){
handleObj=eventType[j];
if(handler.guid===handleObj.guid){
if(all||namespace.test(handleObj.namespace)){
if(pos==null){
eventType.splice(j--,1);}
if(special.remove){
special.remove.call(elem,handleObj);}}
if(pos!=null){
break;}}}
if(eventType.length===0||pos!=null&&eventType.length===1){
if(!special.teardown||special.teardown.call(elem,namespaces)===false){
jQuery.removeEvent(elem,type,elemData.handle);}
ret=null;
delete events[type];}}
if(jQuery.isEmptyObject(events)){
var handle=elemData.handle;
if(handle){
handle.elem=null;}
delete elemData.events;
delete elemData.handle;
if(jQuery.isEmptyObject(elemData)){
jQuery.removeData(elem,undefined,true);}}},
customEvent:{"getData":true,"setData":true,"changeData":true},
trigger:function(event,data,elem,onlyHandlers){
var type=event.type||event,
namespaces=[],
exclusive;
if(type.indexOf("!")>=0){
type=type.slice(0,-1);
exclusive=true;}
if(type.indexOf(".")>=0){
namespaces=type.split(".");
type=namespaces.shift();
namespaces.sort();}
if((!elem||jQuery.event.customEvent[type])&&!jQuery.event.global[type]){
return;}
event=typeof event==="object"?
event[jQuery.expando]?event:
new jQuery.Event(type,event):
new jQuery.Event(type);
event.type=type;
event.exclusive=exclusive;
event.namespace=namespaces.join(".");
event.namespace_re=new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.)?")+"(\\.|$)");
if(onlyHandlers||!elem){
event.preventDefault();
event.stopPropagation();}
if(!elem){
jQuery.each(jQuery.cache,function(){
var internalKey=jQuery.expando,
internalCache=this[internalKey];
if(internalCache&&internalCache.events&&internalCache.events[type]){
jQuery.event.trigger(event,data,internalCache.handle.elem);}});
return;}
if(elem.nodeType===3||elem.nodeType===8){
return;}
event.result=undefined;
event.target=elem;
data=data!=null?jQuery.makeArray(data):[];
data.unshift(event);
var cur=elem,
ontype=type.indexOf(":")<0?"on"+type:"";
do{
var handle=jQuery._data(cur,"handle");
event.currentTarget=cur;
if(handle){
handle.apply(cur,data);}
if(ontype&&jQuery.acceptData(cur)&&cur[ontype]&&cur[ontype].apply(cur,data)===false){
event.result=false;
event.preventDefault();}
cur=cur.parentNode||cur.ownerDocument||cur===event.target.ownerDocument&&window;}while(cur&&!event.isPropagationStopped());
if(!event.isDefaultPrevented()){
var old,
special=jQuery.event.special[type]||{};
if((!special._default||special._default.call(elem.ownerDocument,event)===false)&&!(type==="click"&&jQuery.nodeName(elem,"a"))&&jQuery.acceptData(elem)){
try{
if(ontype&&elem[type]){
old=elem[ontype];
if(old){
elem[ontype]=null;}
jQuery.event.triggered=type;
elem[type]();}}catch(ieError){}
if(old){
elem[ontype]=old;}
jQuery.event.triggered=undefined;}}
return event.result;},
handle:function(event){
event=jQuery.event.fix(event||window.event);
var handlers=((jQuery._data(this,"events")||{})[event.type]||[]).slice(0),
run_all=!event.exclusive&&!event.namespace,
args=Array.prototype.slice.call(arguments,0);
args[0]=event;
event.currentTarget=this;
for(var j=0,l=handlers.length;j<l;j++){
var handleObj=handlers[j];
if(run_all||event.namespace_re.test(handleObj.namespace)){
event.handler=handleObj.handler;
event.data=handleObj.data;
event.handleObj=handleObj;
var ret=handleObj.handler.apply(this,args);
if(ret!==undefined){
event.result=ret;
if(ret===false){
event.preventDefault();
event.stopPropagation();}}
if(event.isImmediatePropagationStopped()){
break;}}}
return event.result;},
props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
fix:function(event){
if(event[jQuery.expando]){
return event;}
var originalEvent=event;
event=jQuery.Event(originalEvent);
for(var i=this.props.length,prop;i;){
prop=this.props[--i];
event[prop]=originalEvent[prop];}
if(!event.target){
event.target=event.srcElement||document;}
if(event.target.nodeType===3){
event.target=event.target.parentNode;}
if(!event.relatedTarget&&event.fromElement){
event.relatedTarget=event.fromElement===event.target?event.toElement:event.fromElement;}
if(event.pageX==null&&event.clientX!=null){
var eventDocument=event.target.ownerDocument||document,
doc=eventDocument.documentElement,
body=eventDocument.body;
event.pageX=event.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc&&doc.clientLeft||body&&body.clientLeft||0);
event.pageY=event.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-(doc&&doc.clientTop||body&&body.clientTop||0);}
if(event.which==null&&(event.charCode!=null||event.keyCode!=null)){
event.which=event.charCode!=null?event.charCode:event.keyCode;}
if(!event.metaKey&&event.ctrlKey){
event.metaKey=event.ctrlKey;}
if(!event.which&&event.button!==undefined){
event.which=(event.button&1?1:(event.button&2?3:(event.button&4?2:0)));}
return event;},
guid:1E8,
proxy:jQuery.proxy,
special:{
ready:{
setup:jQuery.bindReady,
teardown:jQuery.noop},
live:{
add:function(handleObj){
jQuery.event.add(this,
liveConvert(handleObj.origType,handleObj.selector),
jQuery.extend({},handleObj,{handler:liveHandler,guid:handleObj.handler.guid}));},
remove:function(handleObj){
jQuery.event.remove(this,liveConvert(handleObj.origType,handleObj.selector),handleObj);}},
beforeunload:{
setup:function(data,namespaces,eventHandle){
if(jQuery.isWindow(this)){
this.onbeforeunload=eventHandle;}},
teardown:function(namespaces,eventHandle){
if(this.onbeforeunload===eventHandle){
this.onbeforeunload=null;}}}}};
jQuery.removeEvent=document.removeEventListener?
function(elem,type,handle){
if(elem.removeEventListener){
elem.removeEventListener(type,handle,false);}}:
function(elem,type,handle){
if(elem.detachEvent){
elem.detachEvent("on"+type,handle);}};
jQuery.Event=function(src,props){
if(!this.preventDefault){
return new jQuery.Event(src,props);}
if(src&&src.type){
this.originalEvent=src;
this.type=src.type;
this.isDefaultPrevented=(src.defaultPrevented||src.returnValue===false||
src.getPreventDefault&&src.getPreventDefault())?returnTrue:returnFalse;}else{
this.type=src;}
if(props){
jQuery.extend(this,props);}
this.timeStamp=jQuery.now();
this[jQuery.expando]=true;};
function returnFalse(){
return false;}
function returnTrue(){
return true;}
jQuery.Event.prototype={
preventDefault:function(){
this.isDefaultPrevented=returnTrue;
var e=this.originalEvent;
if(!e){
return;}
if(e.preventDefault){
e.preventDefault();}else{
e.returnValue=false;}},
stopPropagation:function(){
this.isPropagationStopped=returnTrue;
var e=this.originalEvent;
if(!e){
return;}
if(e.stopPropagation){
e.stopPropagation();}
e.cancelBubble=true;},
stopImmediatePropagation:function(){
this.isImmediatePropagationStopped=returnTrue;
this.stopPropagation();},
isDefaultPrevented:returnFalse,
isPropagationStopped:returnFalse,
isImmediatePropagationStopped:returnFalse};
var withinElement=function(event){
var related=event.relatedTarget,
inside=false,
eventType=event.type;
event.type=event.data;
if(related!==this){
if(related){
inside=jQuery.contains(this,related);}
if(!inside){
jQuery.event.handle.apply(this,arguments);
event.type=eventType;}}},
delegate=function(event){
event.type=event.data;
jQuery.event.handle.apply(this,arguments);};
jQuery.each({
mouseenter:"mouseover",
mouseleave:"mouseout"},function(orig,fix){
jQuery.event.special[orig]={
setup:function(data){
jQuery.event.add(this,fix,data&&data.selector?delegate:withinElement,orig);},
teardown:function(data){
jQuery.event.remove(this,fix,data&&data.selector?delegate:withinElement);}};});
if(!jQuery.support.submitBubbles){
jQuery.event.special.submit={
setup:function(data,namespaces){
if(!jQuery.nodeName(this,"form")){
jQuery.event.add(this,"click.specialSubmit",function(e){
var elem=e.target,
type=elem.type;
if((type==="submit"||type==="image")&&jQuery(elem).closest("form").length){
trigger("submit",this,arguments);}});
jQuery.event.add(this,"keypress.specialSubmit",function(e){
var elem=e.target,
type=elem.type;
if((type==="text"||type==="password")&&jQuery(elem).closest("form").length&&e.keyCode===13){
trigger("submit",this,arguments);}});}else{
return false;}},
teardown:function(namespaces){
jQuery.event.remove(this,".specialSubmit");}};}
if(!jQuery.support.changeBubbles){
var changeFilters,
getVal=function(elem){
var type=elem.type,val=elem.value;
if(type==="radio"||type==="checkbox"){
val=elem.checked;}else if(type==="select-multiple"){
val=elem.selectedIndex>-1?
jQuery.map(elem.options,function(elem){
return elem.selected;}).join("-"):"";}else if(jQuery.nodeName(elem,"select")){
val=elem.selectedIndex;}
return val;},
testChange=function testChange(e){
var elem=e.target,data,val;
if(!rformElems.test(elem.nodeName)||elem.readOnly){
return;}
data=jQuery._data(elem,"_change_data");
val=getVal(elem);
if(e.type!=="focusout"||elem.type!=="radio"){
jQuery._data(elem,"_change_data",val);}
if(data===undefined||val===data){
return;}
if(data!=null||val){
e.type="change";
e.liveFired=undefined;
jQuery.event.trigger(e,arguments[1],elem);}};
jQuery.event.special.change={
filters:{
focusout:testChange,
beforedeactivate:testChange,
click:function(e){
var elem=e.target,type=jQuery.nodeName(elem,"input")?elem.type:"";
if(type==="radio"||type==="checkbox"||jQuery.nodeName(elem,"select")){
testChange.call(this,e);}},
keydown:function(e){
var elem=e.target,type=jQuery.nodeName(elem,"input")?elem.type:"";
if((e.keyCode===13&&!jQuery.nodeName(elem,"textarea"))||
(e.keyCode===32&&(type==="checkbox"||type==="radio"))||
type==="select-multiple"){
testChange.call(this,e);}},
beforeactivate:function(e){
var elem=e.target;
jQuery._data(elem,"_change_data",getVal(elem));}},
setup:function(data,namespaces){
if(this.type==="file"){
return false;}
for(var type in changeFilters){
jQuery.event.add(this,type+".specialChange",changeFilters[type]);}
return rformElems.test(this.nodeName);},
teardown:function(namespaces){
jQuery.event.remove(this,".specialChange");
return rformElems.test(this.nodeName);}};
changeFilters=jQuery.event.special.change.filters;
changeFilters.focus=changeFilters.beforeactivate;}
function trigger(type,elem,args){
var event=jQuery.extend({},args[0]);
event.type=type;
event.originalEvent={};
event.liveFired=undefined;
jQuery.event.handle.call(elem,event);
if(event.isDefaultPrevented()){
args[0].preventDefault();}}
if(!jQuery.support.focusinBubbles){
jQuery.each({focus:"focusin",blur:"focusout"},function(orig,fix){
var attaches=0;
jQuery.event.special[fix]={
setup:function(){
if(attaches++===0){
document.addEventListener(orig,handler,true);}},
teardown:function(){
if(--attaches===0){
document.removeEventListener(orig,handler,true);}}};
function handler(donor){
var e=jQuery.event.fix(donor);
e.type=fix;
e.originalEvent={};
jQuery.event.trigger(e,null,e.target);
if(e.isDefaultPrevented()){
donor.preventDefault();}}});}
jQuery.each(["bind","one"],function(i,name){
jQuery.fn[name]=function(type,data,fn){
var handler;
if(typeof type==="object"){
for(var key in type){
this[name](key,data,type[key],fn);}
return this;}
if(arguments.length===2||data===false){
fn=data;
data=undefined;}
if(name==="one"){
handler=function(event){
jQuery(this).unbind(event,handler);
return fn.apply(this,arguments);};
handler.guid=fn.guid||jQuery.guid++;}else{
handler=fn;}
if(type==="unload"&&name!=="one"){
this.one(type,data,fn);}else{
for(var i=0,l=this.length;i<l;i++){
jQuery.event.add(this[i],type,handler,data);}}
return this;};});
jQuery.fn.extend({
unbind:function(type,fn){
if(typeof type==="object"&&!type.preventDefault){
for(var key in type){
this.unbind(key,type[key]);}}else{
for(var i=0,l=this.length;i<l;i++){
jQuery.event.remove(this[i],type,fn);}}
return this;},
delegate:function(selector,types,data,fn){
return this.live(types,data,fn,selector);},
undelegate:function(selector,types,fn){
if(arguments.length===0){
return this.unbind("live");}else{
return this.die(types,null,fn,selector);}},
trigger:function(type,data){
return this.each(function(){
jQuery.event.trigger(type,data,this);});},
triggerHandler:function(type,data){
if(this[0]){
return jQuery.event.trigger(type,data,this[0],true);}},
toggle:function(fn){
var args=arguments,
guid=fn.guid||jQuery.guid++,
i=0,
toggler=function(event){
var lastToggle=(jQuery.data(this,"lastToggle"+fn.guid)||0)%i;
jQuery.data(this,"lastToggle"+fn.guid,lastToggle+1);
event.preventDefault();
return args[lastToggle].apply(this,arguments)||false;};
toggler.guid=guid;
while(i<args.length){
args[i++].guid=guid;}
return this.click(toggler);},
hover:function(fnOver,fnOut){
return this.mouseenter(fnOver).mouseleave(fnOut||fnOver);}});
var liveMap={
focus:"focusin",
blur:"focusout",
mouseenter:"mouseover",
mouseleave:"mouseout"};
jQuery.each(["live","die"],function(i,name){
jQuery.fn[name]=function(types,data,fn,origSelector){
var type,i=0,match,namespaces,preType,
selector=origSelector||this.selector,
context=origSelector?this:jQuery(this.context);
if(typeof types==="object"&&!types.preventDefault){
for(var key in types){
context[name](key,data,types[key],selector);}
return this;}
if(name==="die"&&!types&&
origSelector&&origSelector.charAt(0)==="."){
context.unbind(origSelector);
return this;}
if(data===false||jQuery.isFunction(data)){
fn=data||returnFalse;
data=undefined;}
types=(types||"").split(" ");
while((type=types[i++])!=null){
match=rnamespaces.exec(type);
namespaces="";
if(match){
namespaces=match[0];
type=type.replace(rnamespaces,"");}
if(type==="hover"){
types.push("mouseenter"+namespaces,"mouseleave"+namespaces);
continue;}
preType=type;
if(liveMap[type]){
types.push(liveMap[type]+namespaces);
type=type+namespaces;}else{
type=(liveMap[type]||type)+namespaces;}
if(name==="live"){
for(var j=0,l=context.length;j<l;j++){
jQuery.event.add(context[j],"live."+liveConvert(type,selector),
{data:data,selector:selector,handler:fn,origType:type,origHandler:fn,preType:preType});}}else{
context.unbind("live."+liveConvert(type,selector),fn);}}
return this;};});
function liveHandler(event){
var stop,maxLevel,related,match,handleObj,elem,j,i,l,data,close,namespace,ret,
elems=[],
selectors=[],
events=jQuery._data(this,"events");
if(event.liveFired===this||!events||!events.live||event.target.disabled||event.button&&event.type==="click"){
return;}
if(event.namespace){
namespace=new RegExp("(^|\\.)"+event.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)");}
event.liveFired=this;
var live=events.live.slice(0);
for(j=0;j<live.length;j++){
handleObj=live[j];
if(handleObj.origType.replace(rnamespaces,"")===event.type){
selectors.push(handleObj.selector);}else{
live.splice(j--,1);}}
match=jQuery(event.target).closest(selectors,event.currentTarget);
for(i=0,l=match.length;i<l;i++){
close=match[i];
for(j=0;j<live.length;j++){
handleObj=live[j];
if(close.selector===handleObj.selector&&(!namespace||namespace.test(handleObj.namespace))&&!close.elem.disabled){
elem=close.elem;
related=null;
if(handleObj.preType==="mouseenter"||handleObj.preType==="mouseleave"){
event.type=handleObj.preType;
related=jQuery(event.relatedTarget).closest(handleObj.selector)[0];
if(related&&jQuery.contains(elem,related)){
related=elem;}}
if(!related||related!==elem){
elems.push({elem:elem,handleObj:handleObj,level:close.level});}}}}
for(i=0,l=elems.length;i<l;i++){
match=elems[i];
if(maxLevel&&match.level>maxLevel){
break;}
event.currentTarget=match.elem;
event.data=match.handleObj.data;
event.handleObj=match.handleObj;
ret=match.handleObj.origHandler.apply(match.elem,arguments);
if(ret===false||event.isPropagationStopped()){
maxLevel=match.level;
if(ret===false){
stop=false;}
if(event.isImmediatePropagationStopped()){
break;}}}
return stop;}
function liveConvert(type,selector){
return(type&&type!=="*"?type+".":"")+selector.replace(rperiod,"`").replace(rspaces,"&");}
jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick "+"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave "+"change select submit keydown keypress keyup error").split(" "),function(i,name){
jQuery.fn[name]=function(data,fn){
if(fn==null){
fn=data;
data=null;}
return arguments.length>0?
this.bind(name,data,fn):
this.trigger(name);};
if(jQuery.attrFn){
jQuery.attrFn[name]=true;}});
jQuery.fn.SplunkPatchWindowUnload=function(){
for(var id in jQuery.cache)
if(id!=1&&jQuery.cache[id].handle)
jQuery.event.remove(jQuery.cache[id].handle.elem);};
jQuery(window).bind('unload',jQuery.fn.SplunkPatchWindowUnload);
(function(){
var chunker=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
done=0,
toString=Object.prototype.toString,
hasDuplicate=false,
baseHasDuplicate=true,
rBackslash=/\\/g,
rNonWord=/\W/;
[0,0].sort(function(){
baseHasDuplicate=false;
return 0;});
var Sizzle=function(selector,context,results,seed){
results=results||[];
context=context||document;
var origContext=context;
if(context.nodeType!==1&&context.nodeType!==9){
return[];}
if(!selector||typeof selector!=="string"){
return results;}
var m,set,checkSet,extra,ret,cur,pop,i,
prune=true,
contextXML=Sizzle.isXML(context),
parts=[],
soFar=selector;
do{
chunker.exec("");
m=chunker.exec(soFar);
if(m){
soFar=m[3];
parts.push(m[1]);
if(m[2]){
extra=m[3];
break;}}}while(m);
if(parts.length>1&&origPOS.exec(selector)){
if(parts.length===2&&Expr.relative[parts[0]]){
set=posProcess(parts[0]+parts[1],context);}else{
set=Expr.relative[parts[0]]?
[context]:
Sizzle(parts.shift(),context);
while(parts.length){
selector=parts.shift();
if(Expr.relative[selector]){
selector+=parts.shift();}
set=posProcess(selector,set);}}}else{
if(!seed&&parts.length>1&&context.nodeType===9&&!contextXML&&
Expr.match.ID.test(parts[0])&&!Expr.match.ID.test(parts[parts.length-1])){
ret=Sizzle.find(parts.shift(),context,contextXML);
context=ret.expr?
Sizzle.filter(ret.expr,ret.set)[0]:
ret.set[0];}
if(context){
ret=seed?
{expr:parts.pop(),set:makeArray(seed)}:
Sizzle.find(parts.pop(),parts.length===1&&(parts[0]==="~"||parts[0]==="+")&&context.parentNode?context.parentNode:context,contextXML);
set=ret.expr?
Sizzle.filter(ret.expr,ret.set):
ret.set;
if(parts.length>0){
checkSet=makeArray(set);}else{
prune=false;}
while(parts.length){
cur=parts.pop();
pop=cur;
if(!Expr.relative[cur]){
cur="";}else{
pop=parts.pop();}
if(pop==null){
pop=context;}
Expr.relative[cur](checkSet,pop,contextXML);}}else{
checkSet=parts=[];}}
if(!checkSet){
checkSet=set;}
if(!checkSet){
Sizzle.error(cur||selector);}
if(toString.call(checkSet)==="[object Array]"){
if(!prune){
results.push.apply(results,checkSet);}else if(context&&context.nodeType===1){
for(i=0;checkSet[i]!=null;i++){
if(checkSet[i]&&(checkSet[i]===true||checkSet[i].nodeType===1&&Sizzle.contains(context,checkSet[i]))){
results.push(set[i]);}}}else{
for(i=0;checkSet[i]!=null;i++){
if(checkSet[i]&&checkSet[i].nodeType===1){
results.push(set[i]);}}}}else{
makeArray(checkSet,results);}
if(extra){
Sizzle(extra,origContext,results,seed);
Sizzle.uniqueSort(results);}
return results;};
Sizzle.uniqueSort=function(results){
if(sortOrder){
hasDuplicate=baseHasDuplicate;
results.sort(sortOrder);
if(hasDuplicate){
for(var i=1;i<results.length;i++){
if(results[i]===results[i-1]){
results.splice(i--,1);}}}}
return results;};
Sizzle.matches=function(expr,set){
return Sizzle(expr,null,null,set);};
Sizzle.matchesSelector=function(node,expr){
return Sizzle(expr,null,null,[node]).length>0;};
Sizzle.find=function(expr,context,isXML){
var set;
if(!expr){
return[];}
for(var i=0,l=Expr.order.length;i<l;i++){
var match,
type=Expr.order[i];
if((match=Expr.leftMatch[type].exec(expr))){
var left=match[1];
match.splice(1,1);
if(left.substr(left.length-1)!=="\\"){
match[1]=(match[1]||"").replace(rBackslash,"");
set=Expr.find[type](match,context,isXML);
if(set!=null){
expr=expr.replace(Expr.match[type],"");
break;}}}}
if(!set){
set=typeof context.getElementsByTagName!=="undefined"?
context.getElementsByTagName("*"):
[];}
return{set:set,expr:expr};};
Sizzle.filter=function(expr,set,inplace,not){
var match,anyFound,
old=expr,
result=[],
curLoop=set,
isXMLFilter=set&&set[0]&&Sizzle.isXML(set[0]);
while(expr&&set.length){
for(var type in Expr.filter){
if((match=Expr.leftMatch[type].exec(expr))!=null&&match[2]){
var found,item,
filter=Expr.filter[type],
left=match[1];
anyFound=false;
match.splice(1,1);
if(left.substr(left.length-1)==="\\"){
continue;}
if(curLoop===result){
result=[];}
if(Expr.preFilter[type]){
match=Expr.preFilter[type](match,curLoop,inplace,result,not,isXMLFilter);
if(!match){
anyFound=found=true;}else if(match===true){
continue;}}
if(match){
for(var i=0;(item=curLoop[i])!=null;i++){
if(item){
found=filter(item,match,i,curLoop);
var pass=not^!!found;
if(inplace&&found!=null){
if(pass){
anyFound=true;}else{
curLoop[i]=false;}}else if(pass){
result.push(item);
anyFound=true;}}}}
if(found!==undefined){
if(!inplace){
curLoop=result;}
expr=expr.replace(Expr.match[type],"");
if(!anyFound){
return[];}
break;}}}
if(expr===old){
if(anyFound==null){
Sizzle.error(expr);}else{
break;}}
old=expr;}
return curLoop;};
Sizzle.error=function(msg){
throw"Syntax error, unrecognized expression: "+msg;};
var Expr=Sizzle.selectors={
order:["ID","NAME","TAG"],
match:{
ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},
leftMatch:{},
attrMap:{"class":"className","for":"htmlFor"},
attrHandle:{
href:function(elem){
return elem.getAttribute("href");},
type:function(elem){
return elem.getAttribute("type");}},
relative:{"+":function(checkSet,part){
var isPartStr=typeof part==="string",
isTag=isPartStr&&!rNonWord.test(part),
isPartStrNotTag=isPartStr&&!isTag;
if(isTag){
part=part.toLowerCase();}
for(var i=0,l=checkSet.length,elem;i<l;i++){
if((elem=checkSet[i])){
while((elem=elem.previousSibling)&&elem.nodeType!==1){}
checkSet[i]=isPartStrNotTag||elem&&elem.nodeName.toLowerCase()===part?
elem||false:
elem===part;}}
if(isPartStrNotTag){
Sizzle.filter(part,checkSet,true);}},">":function(checkSet,part){
var elem,
isPartStr=typeof part==="string",
i=0,
l=checkSet.length;
if(isPartStr&&!rNonWord.test(part)){
part=part.toLowerCase();
for(;i<l;i++){
elem=checkSet[i];
if(elem){
var parent=elem.parentNode;
checkSet[i]=parent.nodeName.toLowerCase()===part?parent:false;}}}else{
for(;i<l;i++){
elem=checkSet[i];
if(elem){
checkSet[i]=isPartStr?
elem.parentNode:
elem.parentNode===part;}}
if(isPartStr){
Sizzle.filter(part,checkSet,true);}}},"":function(checkSet,part,isXML){
var nodeCheck,
doneName=done++,
checkFn=dirCheck;
if(typeof part==="string"&&!rNonWord.test(part)){
part=part.toLowerCase();
nodeCheck=part;
checkFn=dirNodeCheck;}
checkFn("parentNode",part,doneName,checkSet,nodeCheck,isXML);},"~":function(checkSet,part,isXML){
var nodeCheck,
doneName=done++,
checkFn=dirCheck;
if(typeof part==="string"&&!rNonWord.test(part)){
part=part.toLowerCase();
nodeCheck=part;
checkFn=dirNodeCheck;}
checkFn("previousSibling",part,doneName,checkSet,nodeCheck,isXML);}},
find:{
ID:function(match,context,isXML){
if(typeof context.getElementById!=="undefined"&&!isXML){
var m=context.getElementById(match[1]);
return m&&m.parentNode?[m]:[];}},
NAME:function(match,context){
if(typeof context.getElementsByName!=="undefined"){
var ret=[],
results=context.getElementsByName(match[1]);
for(var i=0,l=results.length;i<l;i++){
if(results[i].getAttribute("name")===match[1]){
ret.push(results[i]);}}
return ret.length===0?null:ret;}},
TAG:function(match,context){
if(typeof context.getElementsByTagName!=="undefined"){
return context.getElementsByTagName(match[1]);}}},
preFilter:{
CLASS:function(match,curLoop,inplace,result,not,isXML){
match=" "+match[1].replace(rBackslash,"")+" ";
if(isXML){
return match;}
for(var i=0,elem;(elem=curLoop[i])!=null;i++){
if(elem){
if(not^(elem.className&&(" "+elem.className+" ").replace(/[\t\n\r]/g," ").indexOf(match)>=0)){
if(!inplace){
result.push(elem);}}else if(inplace){
curLoop[i]=false;}}}
return false;},
ID:function(match){
return match[1].replace(rBackslash,"");},
TAG:function(match,curLoop){
return match[1].replace(rBackslash,"").toLowerCase();},
CHILD:function(match){
if(match[1]==="nth"){
if(!match[2]){
Sizzle.error(match[0]);}
match[2]=match[2].replace(/^\+|\s*/g,'');
var test=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(
match[2]==="even"&&"2n"||match[2]==="odd"&&"2n+1"||!/\D/.test(match[2])&&"0n+"+match[2]||match[2]);
match[2]=(test[1]+(test[2]||1))-0;
match[3]=test[3]-0;}
else if(match[2]){
Sizzle.error(match[0]);}
match[0]=done++;
return match;},
ATTR:function(match,curLoop,inplace,result,not,isXML){
var name=match[1]=match[1].replace(rBackslash,"");
if(!isXML&&Expr.attrMap[name]){
match[1]=Expr.attrMap[name];}
match[4]=(match[4]||match[5]||"").replace(rBackslash,"");
if(match[2]==="~="){
match[4]=" "+match[4]+" ";}
return match;},
PSEUDO:function(match,curLoop,inplace,result,not){
if(match[1]==="not"){
if((chunker.exec(match[3])||"").length>1||/^\w/.test(match[3])){
match[3]=Sizzle(match[3],null,null,curLoop);}else{
var ret=Sizzle.filter(match[3],curLoop,inplace,true^not);
if(!inplace){
result.push.apply(result,ret);}
return false;}}else if(Expr.match.POS.test(match[0])||Expr.match.CHILD.test(match[0])){
return true;}
return match;},
POS:function(match){
match.unshift(true);
return match;}},
filters:{
enabled:function(elem){
return elem.disabled===false&&elem.type!=="hidden";},
disabled:function(elem){
return elem.disabled===true;},
checked:function(elem){
return elem.checked===true;},
selected:function(elem){
if(elem.parentNode){
elem.parentNode.selectedIndex;}
return elem.selected===true;},
parent:function(elem){
return!!elem.firstChild;},
empty:function(elem){
return!elem.firstChild;},
has:function(elem,i,match){
return!!Sizzle(match[3],elem).length;},
header:function(elem){
return(/h\d/i).test(elem.nodeName);},
text:function(elem){
var attr=elem.getAttribute("type"),type=elem.type;
return elem.nodeName.toLowerCase()==="input"&&"text"===type&&(attr===type||attr===null);},
radio:function(elem){
return elem.nodeName.toLowerCase()==="input"&&"radio"===elem.type;},
checkbox:function(elem){
return elem.nodeName.toLowerCase()==="input"&&"checkbox"===elem.type;},
file:function(elem){
return elem.nodeName.toLowerCase()==="input"&&"file"===elem.type;},
password:function(elem){
return elem.nodeName.toLowerCase()==="input"&&"password"===elem.type;},
submit:function(elem){
var name=elem.nodeName.toLowerCase();
return(name==="input"||name==="button")&&"submit"===elem.type;},
image:function(elem){
return elem.nodeName.toLowerCase()==="input"&&"image"===elem.type;},
reset:function(elem){
var name=elem.nodeName.toLowerCase();
return(name==="input"||name==="button")&&"reset"===elem.type;},
button:function(elem){
var name=elem.nodeName.toLowerCase();
return name==="input"&&"button"===elem.type||name==="button";},
input:function(elem){
return(/input|select|textarea|button/i).test(elem.nodeName);},
focus:function(elem){
return elem===elem.ownerDocument.activeElement;}},
setFilters:{
first:function(elem,i){
return i===0;},
last:function(elem,i,match,array){
return i===array.length-1;},
even:function(elem,i){
return i%2===0;},
odd:function(elem,i){
return i%2===1;},
lt:function(elem,i,match){
return i<match[3]-0;},
gt:function(elem,i,match){
return i>match[3]-0;},
nth:function(elem,i,match){
return match[3]-0===i;},
eq:function(elem,i,match){
return match[3]-0===i;}},
filter:{
PSEUDO:function(elem,match,i,array){
var name=match[1],
filter=Expr.filters[name];
if(filter){
return filter(elem,i,match,array);}else if(name==="contains"){
return(elem.textContent||elem.innerText||Sizzle.getText([elem])||"").indexOf(match[3])>=0;}else if(name==="not"){
var not=match[3];
for(var j=0,l=not.length;j<l;j++){
if(not[j]===elem){
return false;}}
return true;}else{
Sizzle.error(name);}},
CHILD:function(elem,match){
var type=match[1],
node=elem;
switch(type){
case"only":
case"first":
while((node=node.previousSibling)){
if(node.nodeType===1){
return false;}}
if(type==="first"){
return true;}
node=elem;
case"last":
while((node=node.nextSibling)){
if(node.nodeType===1){
return false;}}
return true;
case"nth":
var first=match[2],
last=match[3];
if(first===1&&last===0){
return true;}
var doneName=match[0],
parent=elem.parentNode;
if(parent&&(parent.sizcache!==doneName||!elem.nodeIndex)){
var count=0;
for(node=parent.firstChild;node;node=node.nextSibling){
if(node.nodeType===1){
node.nodeIndex=++count;}}
parent.sizcache=doneName;}
var diff=elem.nodeIndex-last;
if(first===0){
return diff===0;}else{
return(diff%first===0&&diff/first>=0);}}},
ID:function(elem,match){
return elem.nodeType===1&&elem.getAttribute("id")===match;},
TAG:function(elem,match){
return(match==="*"&&elem.nodeType===1)||elem.nodeName.toLowerCase()===match;},
CLASS:function(elem,match){
return(" "+(elem.className||elem.getAttribute("class"))+" ").indexOf(match)>-1;},
ATTR:function(elem,match){
var name=match[1],
result=Expr.attrHandle[name]?
Expr.attrHandle[name](elem):
elem[name]!=null?
elem[name]:
elem.getAttribute(name),
value=result+"",
type=match[2],
check=match[4];
return result==null?
type==="!=":
type==="="?
value===check:
type==="*="?
value.indexOf(check)>=0:
type==="~="?
(" "+value+" ").indexOf(check)>=0:!check?
value&&result!==false:
type==="!="?
value!==check:
type==="^="?
value.indexOf(check)===0:
type==="$="?
value.substr(value.length-check.length)===check:
type==="|="?
value===check||value.substr(0,check.length+1)===check+"-":
false;},
POS:function(elem,match,i,array){
var name=match[2],
filter=Expr.setFilters[name];
if(filter){
return filter(elem,i,match,array);}}}};
var origPOS=Expr.match.POS,
fescape=function(all,num){
return"\\"+(num-0+1);};
for(var type in Expr.match){
Expr.match[type]=new RegExp(Expr.match[type].source+(/(?![^\[]*\])(?![^\(]*\))/.source));
Expr.leftMatch[type]=new RegExp(/(^(?:.|\r|\n)*?)/.source+Expr.match[type].source.replace(/\\(\d+)/g,fescape));}
var makeArray=function(array,results){
array=Array.prototype.slice.call(array,0);
if(results){
results.push.apply(results,array);
return results;}
return array;};
try{
Array.prototype.slice.call(document.documentElement.childNodes,0)[0].nodeType;}catch(e){
makeArray=function(array,results){
var i=0,
ret=results||[];
if(toString.call(array)==="[object Array]"){
Array.prototype.push.apply(ret,array);}else{
if(typeof array.length==="number"){
for(var l=array.length;i<l;i++){
ret.push(array[i]);}}else{
for(;array[i];i++){
ret.push(array[i]);}}}
return ret;};}
var sortOrder,siblingCheck;
if(document.documentElement.compareDocumentPosition){
sortOrder=function(a,b){
if(a===b){
hasDuplicate=true;
return 0;}
if(!a.compareDocumentPosition||!b.compareDocumentPosition){
return a.compareDocumentPosition?-1:1;}
return a.compareDocumentPosition(b)&4?-1:1;};}else{
sortOrder=function(a,b){
if(a===b){
hasDuplicate=true;
return 0;}else if(a.sourceIndex&&b.sourceIndex){
return a.sourceIndex-b.sourceIndex;}
var al,bl,
ap=[],
bp=[],
aup=a.parentNode,
bup=b.parentNode,
cur=aup;
if(aup===bup){
return siblingCheck(a,b);}else if(!aup){
return-1;}else if(!bup){
return 1;}
while(cur){
ap.unshift(cur);
cur=cur.parentNode;}
cur=bup;
while(cur){
bp.unshift(cur);
cur=cur.parentNode;}
al=ap.length;
bl=bp.length;
for(var i=0;i<al&&i<bl;i++){
if(ap[i]!==bp[i]){
return siblingCheck(ap[i],bp[i]);}}
return i===al?
siblingCheck(a,bp[i],-1):
siblingCheck(ap[i],b,1);};
siblingCheck=function(a,b,ret){
if(a===b){
return ret;}
var cur=a.nextSibling;
while(cur){
if(cur===b){
return-1;}
cur=cur.nextSibling;}
return 1;};}
Sizzle.getText=function(elems){
var ret="",elem;
for(var i=0;elems[i];i++){
elem=elems[i];
if(elem.nodeType===3||elem.nodeType===4){
ret+=elem.nodeValue;}else if(elem.nodeType!==8){
ret+=Sizzle.getText(elem.childNodes);}}
return ret;};
(function(){
var form=document.createElement("div"),
id="script"+(new Date()).getTime(),
root=document.documentElement;
form.innerHTML="<a name='"+id+"'/>";
root.insertBefore(form,root.firstChild);
if(document.getElementById(id)){
Expr.find.ID=function(match,context,isXML){
if(typeof context.getElementById!=="undefined"&&!isXML){
var m=context.getElementById(match[1]);
return m?
m.id===match[1]||typeof m.getAttributeNode!=="undefined"&&m.getAttributeNode("id").nodeValue===match[1]?
[m]:
undefined:
[];}};
Expr.filter.ID=function(elem,match){
var node=typeof elem.getAttributeNode!=="undefined"&&elem.getAttributeNode("id");
return elem.nodeType===1&&node&&node.nodeValue===match;};}
root.removeChild(form);
root=form=null;})();
(function(){
var div=document.createElement("div");
div.appendChild(document.createComment(""));
if(div.getElementsByTagName("*").length>0){
Expr.find.TAG=function(match,context){
var results=context.getElementsByTagName(match[1]);
if(match[1]==="*"){
var tmp=[];
for(var i=0;results[i];i++){
if(results[i].nodeType===1){
tmp.push(results[i]);}}
results=tmp;}
return results;};}
div.innerHTML="<a href='#'></a>";
if(div.firstChild&&typeof div.firstChild.getAttribute!=="undefined"&&
div.firstChild.getAttribute("href")!=="#"){
Expr.attrHandle.href=function(elem){
return elem.getAttribute("href",2);};}
div=null;})();
if(document.querySelectorAll){
(function(){
var oldSizzle=Sizzle,
div=document.createElement("div"),
id="__sizzle__";
div.innerHTML="<p class='TEST'></p>";
if(div.querySelectorAll&&div.querySelectorAll(".TEST").length===0){
return;}
Sizzle=function(query,context,extra,seed){
context=context||document;
if(!seed&&!Sizzle.isXML(context)){
var match=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(query);
if(match&&(context.nodeType===1||context.nodeType===9)){
if(match[1]){
return makeArray(context.getElementsByTagName(query),extra);}else if(match[2]&&Expr.find.CLASS&&context.getElementsByClassName){
return makeArray(context.getElementsByClassName(match[2]),extra);}}
if(context.nodeType===9){
if(query==="body"&&context.body){
return makeArray([context.body],extra);}else if(match&&match[3]){
var elem=context.getElementById(match[3]);
if(elem&&elem.parentNode){
if(elem.id===match[3]){
return makeArray([elem],extra);}}else{
return makeArray([],extra);}}
try{
return makeArray(context.querySelectorAll(query),extra);}catch(qsaError){}}else if(context.nodeType===1&&context.nodeName.toLowerCase()!=="object"){
var oldContext=context,
old=context.getAttribute("id"),
nid=old||id,
hasParent=context.parentNode,
relativeHierarchySelector=/^\s*[+~]/.test(query);
if(!old){
context.setAttribute("id",nid);}else{
nid=nid.replace(/'/g,"\\$&");}
if(relativeHierarchySelector&&hasParent){
context=context.parentNode;}
try{
if(!relativeHierarchySelector||hasParent){
return makeArray(context.querySelectorAll("[id='"+nid+"'] "+query),extra);}}catch(pseudoError){}finally{
if(!old){
oldContext.removeAttribute("id");}}}}
return oldSizzle(query,context,extra,seed);};
for(var prop in oldSizzle){
Sizzle[prop]=oldSizzle[prop];}
div=null;})();}
(function(){
var html=document.documentElement,
matches=html.matchesSelector||html.mozMatchesSelector||html.webkitMatchesSelector||html.msMatchesSelector;
if(matches){
var disconnectedMatch=!matches.call(document.createElement("div"),"div"),
pseudoWorks=false;
try{
matches.call(document.documentElement,"[test!='']:sizzle");}catch(pseudoError){
pseudoWorks=true;}
Sizzle.matchesSelector=function(node,expr){
expr=expr.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");
if(!Sizzle.isXML(node)){
try{
if(pseudoWorks||!Expr.match.PSEUDO.test(expr)&&!/!=/.test(expr)){
var ret=matches.call(node,expr);
if(ret||!disconnectedMatch||
node.document&&node.document.nodeType!==11){
return ret;}}}catch(e){}}
return Sizzle(expr,null,null,[node]).length>0;};}})();
(function(){
var div=document.createElement("div");
div.innerHTML="<div class='test e'></div><div class='test'></div>";
if(!div.getElementsByClassName||div.getElementsByClassName("e").length===0){
return;}
div.lastChild.className="e";
if(div.getElementsByClassName("e").length===1){
return;}
Expr.order.splice(1,0,"CLASS");
Expr.find.CLASS=function(match,context,isXML){
if(typeof context.getElementsByClassName!=="undefined"&&!isXML){
return context.getElementsByClassName(match[1]);}};
div=null;})();
function dirNodeCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){
for(var i=0,l=checkSet.length;i<l;i++){
var elem=checkSet[i];
if(elem){
var match=false;
elem=elem[dir];
while(elem){
if(elem.sizcache===doneName){
match=checkSet[elem.sizset];
break;}
if(elem.nodeType===1&&!isXML){
elem.sizcache=doneName;
elem.sizset=i;}
if(elem.nodeName.toLowerCase()===cur){
match=elem;
break;}
elem=elem[dir];}
checkSet[i]=match;}}}
function dirCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){
for(var i=0,l=checkSet.length;i<l;i++){
var elem=checkSet[i];
if(elem){
var match=false;
elem=elem[dir];
while(elem){
if(elem.sizcache===doneName){
match=checkSet[elem.sizset];
break;}
if(elem.nodeType===1){
if(!isXML){
elem.sizcache=doneName;
elem.sizset=i;}
if(typeof cur!=="string"){
if(elem===cur){
match=true;
break;}}else if(Sizzle.filter(cur,[elem]).length>0){
match=elem;
break;}}
elem=elem[dir];}
checkSet[i]=match;}}}
if(document.documentElement.contains){
Sizzle.contains=function(a,b){
return a!==b&&(a.contains?a.contains(b):true);};}else if(document.documentElement.compareDocumentPosition){
Sizzle.contains=function(a,b){
return!!(a.compareDocumentPosition(b)&16);};}else{
Sizzle.contains=function(){
return false;};}
Sizzle.isXML=function(elem){
var documentElement=(elem?elem.ownerDocument||elem:0).documentElement;
return documentElement?documentElement.nodeName!=="HTML":false;};
var posProcess=function(selector,context){
var match,
tmpSet=[],
later="",
root=context.nodeType?[context]:context;
while((match=Expr.match.PSEUDO.exec(selector))){
later+=match[0];
selector=selector.replace(Expr.match.PSEUDO,"");}
selector=Expr.relative[selector]?selector+"*":selector;
for(var i=0,l=root.length;i<l;i++){
Sizzle(selector,root[i],tmpSet);}
return Sizzle.filter(later,tmpSet);};
jQuery.find=Sizzle;
jQuery.expr=Sizzle.selectors;
jQuery.expr[":"]=jQuery.expr.filters;
jQuery.unique=Sizzle.uniqueSort;
jQuery.text=Sizzle.getText;
jQuery.isXMLDoc=Sizzle.isXML;
jQuery.contains=Sizzle.contains;})();
var runtil=/Until$/,
rparentsprev=/^(?:parents|prevUntil|prevAll)/,
rmultiselector=/,/,
isSimple=/^.[^:#\[\.,]*$/,
slice=Array.prototype.slice,
POS=jQuery.expr.match.POS,
guaranteedUnique={
children:true,
contents:true,
next:true,
prev:true};
jQuery.fn.extend({
find:function(selector){
var self=this,
i,l;
if(typeof selector!=="string"){
return jQuery(selector).filter(function(){
for(i=0,l=self.length;i<l;i++){
if(jQuery.contains(self[i],this)){
return true;}}});}
var ret=this.pushStack("","find",selector),
length,n,r;
for(i=0,l=this.length;i<l;i++){
length=ret.length;
jQuery.find(selector,this[i],ret);
if(i>0){
for(n=length;n<ret.length;n++){
for(r=0;r<length;r++){
if(ret[r]===ret[n]){
ret.splice(n--,1);
break;}}}}}
return ret;},
has:function(target){
var targets=jQuery(target);
return this.filter(function(){
for(var i=0,l=targets.length;i<l;i++){
if(jQuery.contains(this,targets[i])){
return true;}}});},
not:function(selector){
return this.pushStack(winnow(this,selector,false),"not",selector);},
filter:function(selector){
return this.pushStack(winnow(this,selector,true),"filter",selector);},
is:function(selector){
return!!selector&&(typeof selector==="string"?
jQuery.filter(selector,this).length>0:
this.filter(selector).length>0);},
closest:function(selectors,context){
var ret=[],i,l,cur=this[0];
if(jQuery.isArray(selectors)){
var match,selector,
matches={},
level=1;
if(cur&&selectors.length){
for(i=0,l=selectors.length;i<l;i++){
selector=selectors[i];
if(!matches[selector]){
matches[selector]=POS.test(selector)?
jQuery(selector,context||this.context):
selector;}}
while(cur&&cur.ownerDocument&&cur!==context){
for(selector in matches){
match=matches[selector];
if(match.jquery?match.index(cur)>-1:jQuery(cur).is(match)){
ret.push({selector:selector,elem:cur,level:level});}}
cur=cur.parentNode;
level++;}}
return ret;}
var pos=POS.test(selectors)||typeof selectors!=="string"?
jQuery(selectors,context||this.context):
0;
for(i=0,l=this.length;i<l;i++){
cur=this[i];
while(cur){
if(pos?pos.index(cur)>-1:jQuery.find.matchesSelector(cur,selectors)){
ret.push(cur);
break;}else{
cur=cur.parentNode;
if(!cur||!cur.ownerDocument||cur===context||cur.nodeType===11){
break;}}}}
ret=ret.length>1?jQuery.unique(ret):ret;
return this.pushStack(ret,"closest",selectors);},
index:function(elem){
if(!elem||typeof elem==="string"){
return jQuery.inArray(this[0],
elem?jQuery(elem):this.parent().children());}
return jQuery.inArray(
elem.jquery?elem[0]:elem,this);},
add:function(selector,context){
var set=typeof selector==="string"?
jQuery(selector,context):
jQuery.makeArray(selector&&selector.nodeType?[selector]:selector),
all=jQuery.merge(this.get(),set);
return this.pushStack(isDisconnected(set[0])||isDisconnected(all[0])?
all:
jQuery.unique(all));},
andSelf:function(){
return this.add(this.prevObject);}});
function isDisconnected(node){
return!node||!node.parentNode||node.parentNode.nodeType===11;}
jQuery.each({
parent:function(elem){
var parent=elem.parentNode;
return parent&&parent.nodeType!==11?parent:null;},
parents:function(elem){
return jQuery.dir(elem,"parentNode");},
parentsUntil:function(elem,i,until){
return jQuery.dir(elem,"parentNode",until);},
next:function(elem){
return jQuery.nth(elem,2,"nextSibling");},
prev:function(elem){
return jQuery.nth(elem,2,"previousSibling");},
nextAll:function(elem){
return jQuery.dir(elem,"nextSibling");},
prevAll:function(elem){
return jQuery.dir(elem,"previousSibling");},
nextUntil:function(elem,i,until){
return jQuery.dir(elem,"nextSibling",until);},
prevUntil:function(elem,i,until){
return jQuery.dir(elem,"previousSibling",until);},
siblings:function(elem){
return jQuery.sibling(elem.parentNode.firstChild,elem);},
children:function(elem){
return jQuery.sibling(elem.firstChild);},
contents:function(elem){
return jQuery.nodeName(elem,"iframe")?
elem.contentDocument||elem.contentWindow.document:
jQuery.makeArray(elem.childNodes);}},function(name,fn){
jQuery.fn[name]=function(until,selector){
var ret=jQuery.map(this,fn,until),
args=slice.call(arguments);
if(!runtil.test(name)){
selector=until;}
if(selector&&typeof selector==="string"){
ret=jQuery.filter(selector,ret);}
ret=this.length>1&&!guaranteedUnique[name]?jQuery.unique(ret):ret;
if((this.length>1||rmultiselector.test(selector))&&rparentsprev.test(name)){
ret=ret.reverse();}
return this.pushStack(ret,name,args.join(","));};});
jQuery.extend({
filter:function(expr,elems,not){
if(not){
expr=":not("+expr+")";}
return elems.length===1?
jQuery.find.matchesSelector(elems[0],expr)?[elems[0]]:[]:
jQuery.find.matches(expr,elems);},
dir:function(elem,dir,until){
var matched=[],
cur=elem[dir];
while(cur&&cur.nodeType!==9&&(until===undefined||cur.nodeType!==1||!jQuery(cur).is(until))){
if(cur.nodeType===1){
matched.push(cur);}
cur=cur[dir];}
return matched;},
nth:function(cur,result,dir,elem){
result=result||1;
var num=0;
for(;cur;cur=cur[dir]){
if(cur.nodeType===1&&++num===result){
break;}}
return cur;},
sibling:function(n,elem){
var r=[];
for(;n;n=n.nextSibling){
if(n.nodeType===1&&n!==elem){
r.push(n);}}
return r;}});
function winnow(elements,qualifier,keep){
qualifier=qualifier||0;
if(jQuery.isFunction(qualifier)){
return jQuery.grep(elements,function(elem,i){
var retVal=!!qualifier.call(elem,i,elem);
return retVal===keep;});}else if(qualifier.nodeType){
return jQuery.grep(elements,function(elem,i){
return(elem===qualifier)===keep;});}else if(typeof qualifier==="string"){
var filtered=jQuery.grep(elements,function(elem){
return elem.nodeType===1;});
if(isSimple.test(qualifier)){
return jQuery.filter(qualifier,filtered,!keep);}else{
qualifier=jQuery.filter(qualifier,filtered);}}
return jQuery.grep(elements,function(elem,i){
return(jQuery.inArray(elem,qualifier)>=0)===keep;});}
var rinlinejQuery=/ jQuery\d+="(?:\d+|null)"/g,
rleadingWhitespace=/^\s+/,
rxhtmlTag=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
rtagName=/<([\w:]+)/,
rtbody=/<tbody/i,
rhtml=/<|&#?\w+;/,
rnocache=/<(?:script|object|embed|option|style)/i,
rchecked=/checked\s*(?:[^=]|=\s*.checked.)/i,
rscriptType=/\/(java|ecma)script/i,
rcleanScript=/^\s*<!(?:\[CDATA\[|\-\-)/,
wrapMap={
option:[1,"<select multiple='multiple'>","</select>"],
legend:[1,"<fieldset>","</fieldset>"],
thead:[1,"<table>","</table>"],
tr:[2,"<table><tbody>","</tbody></table>"],
td:[3,"<table><tbody><tr>","</tr></tbody></table>"],
col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],
area:[1,"<map>","</map>"],
_default:[0,"",""]};
wrapMap.optgroup=wrapMap.option;
wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;
wrapMap.th=wrapMap.td;
if(!jQuery.support.htmlSerialize){
wrapMap._default=[1,"div<div>","</div>"];}
jQuery.fn.extend({
text:function(text){
if(jQuery.isFunction(text)){
return this.each(function(i){
var self=jQuery(this);
self.text(text.call(this,i,self.text()));});}
if(typeof text!=="object"&&text!==undefined){
return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(text));}
return jQuery.text(this);},
wrapAll:function(html){
if(jQuery.isFunction(html)){
return this.each(function(i){
jQuery(this).wrapAll(html.call(this,i));});}
if(this[0]){
var wrap=jQuery(html,this[0].ownerDocument).eq(0).clone(true);
if(this[0].parentNode){
wrap.insertBefore(this[0]);}
wrap.map(function(){
var elem=this;
while(elem.firstChild&&elem.firstChild.nodeType===1){
elem=elem.firstChild;}
return elem;}).append(this);}
return this;},
wrapInner:function(html){
if(jQuery.isFunction(html)){
return this.each(function(i){
jQuery(this).wrapInner(html.call(this,i));});}
return this.each(function(){
var self=jQuery(this),
contents=self.contents();
if(contents.length){
contents.wrapAll(html);}else{
self.append(html);}});},
wrap:function(html){
return this.each(function(){
jQuery(this).wrapAll(html);});},
unwrap:function(){
return this.parent().each(function(){
if(!jQuery.nodeName(this,"body")){
jQuery(this).replaceWith(this.childNodes);}}).end();},
append:function(){
return this.domManip(arguments,true,function(elem){
if(this.nodeType===1){
this.appendChild(elem);}});},
prepend:function(){
return this.domManip(arguments,true,function(elem){
if(this.nodeType===1){
this.insertBefore(elem,this.firstChild);}});},
before:function(){
if(this[0]&&this[0].parentNode){
return this.domManip(arguments,false,function(elem){
this.parentNode.insertBefore(elem,this);});}else if(arguments.length){
var set=jQuery(arguments[0]);
set.push.apply(set,this.toArray());
return this.pushStack(set,"before",arguments);}},
after:function(){
if(this[0]&&this[0].parentNode){
return this.domManip(arguments,false,function(elem){
this.parentNode.insertBefore(elem,this.nextSibling);});}else if(arguments.length){
var set=this.pushStack(this,"after",arguments);
set.push.apply(set,jQuery(arguments[0]).toArray());
return set;}},
remove:function(selector,keepData){
for(var i=0,elem;(elem=this[i])!=null;i++){
if(!selector||jQuery.filter(selector,[elem]).length){
if(!keepData&&elem.nodeType===1){
jQuery.cleanData(elem.getElementsByTagName("*"));
jQuery.cleanData([elem]);}
if(elem.parentNode){
elem.parentNode.removeChild(elem);}}}
return this;},
empty:function(){
for(var i=0,elem;(elem=this[i])!=null;i++){
if(elem.nodeType===1){
jQuery.cleanData(elem.getElementsByTagName("*"));}
while(elem.firstChild){
elem.removeChild(elem.firstChild);}}
return this;},
clone:function(dataAndEvents,deepDataAndEvents){
dataAndEvents=dataAndEvents==null?false:dataAndEvents;
deepDataAndEvents=deepDataAndEvents==null?dataAndEvents:deepDataAndEvents;
return this.map(function(){
return jQuery.clone(this,dataAndEvents,deepDataAndEvents);});},
html:function(value){
if(value===undefined){
return this[0]&&this[0].nodeType===1?
this[0].innerHTML.replace(rinlinejQuery,""):
null;}else if(typeof value==="string"&&!rnocache.test(value)&&
(jQuery.support.leadingWhitespace||!rleadingWhitespace.test(value))&&!wrapMap[(rtagName.exec(value)||["",""])[1].toLowerCase()]){
value=value.replace(rxhtmlTag,"<$1></$2>");
try{
for(var i=0,l=this.length;i<l;i++){
if(this[i].nodeType===1){
jQuery.cleanData(this[i].getElementsByTagName("*"));
this[i].innerHTML=value;}}}catch(e){
this.empty().append(value);}}else if(jQuery.isFunction(value)){
this.each(function(i){
var self=jQuery(this);
self.html(value.call(this,i,self.html()));});}else{
this.empty().append(value);}
return this;},
replaceWith:function(value){
if(this[0]&&this[0].parentNode){
if(jQuery.isFunction(value)){
return this.each(function(i){
var self=jQuery(this),old=self.html();
self.replaceWith(value.call(this,i,old));});}
if(typeof value!=="string"){
value=jQuery(value).detach();}
return this.each(function(){
var next=this.nextSibling,
parent=this.parentNode;
jQuery(this).remove();
if(next){
jQuery(next).before(value);}else{
jQuery(parent).append(value);}});}else{
return this.length?
this.pushStack(jQuery(jQuery.isFunction(value)?value():value),"replaceWith",value):
this;}},
detach:function(selector){
return this.remove(selector,true);},
domManip:function(args,table,callback){
var results,first,fragment,parent,
value=args[0],
scripts=[];
if(!jQuery.support.checkClone&&arguments.length===3&&typeof value==="string"&&rchecked.test(value)){
return this.each(function(){
jQuery(this).domManip(args,table,callback,true);});}
if(jQuery.isFunction(value)){
return this.each(function(i){
var self=jQuery(this);
args[0]=value.call(this,i,table?self.html():undefined);
self.domManip(args,table,callback);});}
if(this[0]){
parent=value&&value.parentNode;
if(jQuery.support.parentNode&&parent&&parent.nodeType===11&&parent.childNodes.length===this.length){
results={fragment:parent};}else{
results=jQuery.buildFragment(args,this,scripts);}
fragment=results.fragment;
if(fragment.childNodes.length===1){
first=fragment=fragment.firstChild;}else{
first=fragment.firstChild;}
if(first){
table=table&&jQuery.nodeName(first,"tr");
for(var i=0,l=this.length,lastIndex=l-1;i<l;i++){
callback.call(
table?
root(this[i],first):
this[i],
results.cacheable||(l>1&&i<lastIndex)?
jQuery.clone(fragment,true,true):
fragment);}}
if(scripts.length){
jQuery.each(scripts,evalScript);}}
return this;}});
function root(elem,cur){
return jQuery.nodeName(elem,"table")?
(elem.getElementsByTagName("tbody")[0]||
elem.appendChild(elem.ownerDocument.createElement("tbody"))):
elem;}
function cloneCopyEvent(src,dest){
if(dest.nodeType!==1||!jQuery.hasData(src)){
return;}
var internalKey=jQuery.expando,
oldData=jQuery.data(src),
curData=jQuery.data(dest,oldData);
if((oldData=oldData[internalKey])){
var events=oldData.events;
curData=curData[internalKey]=jQuery.extend({},oldData);
if(events){
delete curData.handle;
curData.events={};
for(var type in events){
for(var i=0,l=events[type].length;i<l;i++){
jQuery.event.add(dest,type+(events[type][i].namespace?".":"")+events[type][i].namespace,events[type][i],events[type][i].data);}}}}}
function cloneFixAttributes(src,dest){
var nodeName;
if(dest.nodeType!==1){
return;}
if(dest.clearAttributes){
dest.clearAttributes();}
if(dest.mergeAttributes){
dest.mergeAttributes(src);}
nodeName=dest.nodeName.toLowerCase();
if(nodeName==="object"){
dest.outerHTML=src.outerHTML;}else if(nodeName==="input"&&(src.type==="checkbox"||src.type==="radio")){
if(src.checked){
dest.defaultChecked=dest.checked=src.checked;}
if(dest.value!==src.value){
dest.value=src.value;}}else if(nodeName==="option"){
dest.selected=src.defaultSelected;}else if(nodeName==="input"||nodeName==="textarea"){
dest.defaultValue=src.defaultValue;}
dest.removeAttribute(jQuery.expando);}
jQuery.buildFragment=function(args,nodes,scripts){
var fragment,cacheable,cacheresults,doc;
if(nodes&&nodes[0]){
doc=nodes[0].ownerDocument||nodes[0];}
if(!doc.createDocumentFragment){
doc=document;}
if(args.length===1&&typeof args[0]==="string"&&args[0].length<512&&doc===document&&
args[0].charAt(0)==="<"&&!rnocache.test(args[0])&&(jQuery.support.checkClone||!rchecked.test(args[0]))){
cacheable=true;
cacheresults=jQuery.fragments[args[0]];
if(cacheresults&&cacheresults!==1){
fragment=cacheresults;}}
if(!fragment){
fragment=doc.createDocumentFragment();
jQuery.clean(args,doc,fragment,scripts);}
if(cacheable){
jQuery.fragments[args[0]]=cacheresults?fragment:1;}
return{fragment:fragment,cacheable:cacheable};};
jQuery.fragments={};
jQuery.each({
appendTo:"append",
prependTo:"prepend",
insertBefore:"before",
insertAfter:"after",
replaceAll:"replaceWith"},function(name,original){
jQuery.fn[name]=function(selector){
var ret=[],
insert=jQuery(selector),
parent=this.length===1&&this[0].parentNode;
if(parent&&parent.nodeType===11&&parent.childNodes.length===1&&insert.length===1){
insert[original](this[0]);
return this;}else{
for(var i=0,l=insert.length;i<l;i++){
var elems=(i>0?this.clone(true):this).get();
jQuery(insert[i])[original](elems);
ret=ret.concat(elems);}
return this.pushStack(ret,name,insert.selector);}};});
function getAll(elem){
if("getElementsByTagName"in elem){
return elem.getElementsByTagName("*");}else if("querySelectorAll"in elem){
return elem.querySelectorAll("*");}else{
return[];}}
function fixDefaultChecked(elem){
if(elem.type==="checkbox"||elem.type==="radio"){
elem.defaultChecked=elem.checked;}}
function findInputs(elem){
if(jQuery.nodeName(elem,"input")){
fixDefaultChecked(elem);}else if("getElementsByTagName"in elem){
jQuery.grep(elem.getElementsByTagName("input"),fixDefaultChecked);}}
jQuery.extend({
clone:function(elem,dataAndEvents,deepDataAndEvents){
var clone=elem.cloneNode(true),
srcElements,
destElements,
i;
if((!jQuery.support.noCloneEvent||!jQuery.support.noCloneChecked)&&
(elem.nodeType===1||elem.nodeType===11)&&!jQuery.isXMLDoc(elem)){
cloneFixAttributes(elem,clone);
srcElements=getAll(elem);
destElements=getAll(clone);
for(i=0;srcElements[i];++i){
cloneFixAttributes(srcElements[i],destElements[i]);}}
if(dataAndEvents){
cloneCopyEvent(elem,clone);
if(deepDataAndEvents){
srcElements=getAll(elem);
destElements=getAll(clone);
for(i=0;srcElements[i];++i){
cloneCopyEvent(srcElements[i],destElements[i]);}}}
srcElements=destElements=null;
return clone;},
clean:function(elems,context,fragment,scripts){
var checkScriptType;
context=context||document;
if(typeof context.createElement==="undefined"){
context=context.ownerDocument||context[0]&&context[0].ownerDocument||document;}
var ret=[],j;
for(var i=0,elem;(elem=elems[i])!=null;i++){
if(typeof elem==="number"){
elem+="";}
if(!elem){
continue;}
if(typeof elem==="string"){
if(!rhtml.test(elem)){
elem=context.createTextNode(elem);}else{
elem=elem.replace(rxhtmlTag,"<$1></$2>");
var tag=(rtagName.exec(elem)||["",""])[1].toLowerCase(),
wrap=wrapMap[tag]||wrapMap._default,
depth=wrap[0],
div=context.createElement("div");
div.innerHTML=wrap[1]+elem+wrap[2];
while(depth--){
div=div.lastChild;}
if(!jQuery.support.tbody){
var hasBody=rtbody.test(elem),
tbody=tag==="table"&&!hasBody?
div.firstChild&&div.firstChild.childNodes:
wrap[1]==="<table>"&&!hasBody?
div.childNodes:
[];
for(j=tbody.length-1;j>=0;--j){
if(jQuery.nodeName(tbody[j],"tbody")&&!tbody[j].childNodes.length){
tbody[j].parentNode.removeChild(tbody[j]);}}}
if(!jQuery.support.leadingWhitespace&&rleadingWhitespace.test(elem)){
div.insertBefore(context.createTextNode(rleadingWhitespace.exec(elem)[0]),div.firstChild);}
elem=div.childNodes;}}
var len;
if(!jQuery.support.appendChecked){
if(elem[0]&&typeof(len=elem.length)==="number"){
for(j=0;j<len;j++){
findInputs(elem[j]);}}else{
findInputs(elem);}}
if(elem.nodeType){
ret.push(elem);}else{
ret=jQuery.merge(ret,elem);}}
if(fragment){
checkScriptType=function(elem){
return!elem.type||rscriptType.test(elem.type);};
for(i=0;ret[i];i++){
if(scripts&&jQuery.nodeName(ret[i],"script")&&(!ret[i].type||ret[i].type.toLowerCase()==="text/javascript")){
scripts.push(ret[i].parentNode?ret[i].parentNode.removeChild(ret[i]):ret[i]);}else{
if(ret[i].nodeType===1){
var jsTags=jQuery.grep(ret[i].getElementsByTagName("script"),checkScriptType);
ret.splice.apply(ret,[i+1,0].concat(jsTags));}
fragment.appendChild(ret[i]);}}}
return ret;},
cleanData:function(elems){
var data,id,cache=jQuery.cache,internalKey=jQuery.expando,special=jQuery.event.special,
deleteExpando=jQuery.support.deleteExpando;
for(var i=0,elem;(elem=elems[i])!=null;i++){
if(elem.nodeName&&jQuery.noData[elem.nodeName.toLowerCase()]){
continue;}
id=elem[jQuery.expando];
if(id){
data=cache[id]&&cache[id][internalKey];
if(data&&data.events){
for(var type in data.events){
if(special[type]){
jQuery.event.remove(elem,type);}else{
jQuery.removeEvent(elem,type,data.handle);}}
if(data.handle){
data.handle.elem=null;}}
if(deleteExpando){
delete elem[jQuery.expando];}else if(elem.removeAttribute){
elem.removeAttribute(jQuery.expando);}
delete cache[id];}}}});
function evalScript(i,elem){
if(elem.src){
jQuery.ajax({
url:elem.src,
async:false,
dataType:"script"});}else{
jQuery.globalEval((elem.text||elem.textContent||elem.innerHTML||"").replace(rcleanScript,"/*$0*/"));}
if(elem.parentNode){
elem.parentNode.removeChild(elem);}}
var ralpha=/alpha\([^)]*\)/i,
ropacity=/opacity=([^)]*)/,
rupper=/([A-Z]|^ms)/g,
rnumpx=/^-?\d+(?:px)?$/i,
rnum=/^-?\d/,
rrelNum=/^[+\-]=/,
rrelNumFilter=/[^+\-\.\de]+/g,
cssShow={position:"absolute",visibility:"hidden",display:"block"},
cssWidth=["Left","Right"],
cssHeight=["Top","Bottom"],
curCSS,
getComputedStyle,
currentStyle;
jQuery.fn.css=function(name,value){
if(arguments.length===2&&value===undefined){
return this;}
return jQuery.access(this,name,value,true,function(elem,name,value){
return value!==undefined?
jQuery.style(elem,name,value):
jQuery.css(elem,name);});};
jQuery.extend({
cssHooks:{
opacity:{
get:function(elem,computed){
if(computed){
var ret=curCSS(elem,"opacity","opacity");
return ret===""?"1":ret;}else{
return elem.style.opacity;}}}},
cssNumber:{"fillOpacity":true,"fontWeight":true,"lineHeight":true,"opacity":true,"orphans":true,"widows":true,"zIndex":true,"zoom":true},
cssProps:{"float":jQuery.support.cssFloat?"cssFloat":"styleFloat"},
style:function(elem,name,value,extra){
if(!elem||elem.nodeType===3||elem.nodeType===8||!elem.style){
return;}
var ret,type,origName=jQuery.camelCase(name),
style=elem.style,hooks=jQuery.cssHooks[origName];
name=jQuery.cssProps[origName]||origName;
if(value!==undefined){
type=typeof value;
if(type==="number"&&isNaN(value)||value==null){
return;}
if(type==="string"&&rrelNum.test(value)){
value=+value.replace(rrelNumFilter,"")+parseFloat(jQuery.css(elem,name));
type="number";}
if(type==="number"&&!jQuery.cssNumber[origName]){
value+="px";}
if(!hooks||!("set"in hooks)||(value=hooks.set(elem,value))!==undefined){
try{
style[name]=value;}catch(e){}}}else{
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,false,extra))!==undefined){
return ret;}
return style[name];}},
css:function(elem,name,extra){
var ret,hooks;
name=jQuery.camelCase(name);
hooks=jQuery.cssHooks[name];
name=jQuery.cssProps[name]||name;
if(name==="cssFloat"){
name="float";}
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,true,extra))!==undefined){
return ret;}else if(curCSS){
return curCSS(elem,name);}},
swap:function(elem,options,callback){
var old={};
for(var name in options){
old[name]=elem.style[name];
elem.style[name]=options[name];}
callback.call(elem);
for(name in options){
elem.style[name]=old[name];}}});
jQuery.curCSS=jQuery.css;
jQuery.each(["height","width"],function(i,name){
jQuery.cssHooks[name]={
get:function(elem,computed,extra){
var val;
if(computed){
if(elem.offsetWidth!==0){
return getWH(elem,name,extra);}else{
jQuery.swap(elem,cssShow,function(){
val=getWH(elem,name,extra);});}
return val;}},
set:function(elem,value){
if(rnumpx.test(value)){
value=parseFloat(value);
if(value>=0){
return value+"px";}}else{
return value;}}};});
if(!jQuery.support.opacity){
jQuery.cssHooks.opacity={
get:function(elem,computed){
return ropacity.test((computed&&elem.currentStyle?elem.currentStyle.filter:elem.style.filter)||"")?
(parseFloat(RegExp.$1)/100)+"":
computed?"1":"";},
set:function(elem,value){
var style=elem.style,
currentStyle=elem.currentStyle;
style.zoom=1;
var opacity=jQuery.isNaN(value)?"":"alpha(opacity="+value*100+")",
filter=currentStyle&&currentStyle.filter||style.filter||"";
style.filter=ralpha.test(filter)?
filter.replace(ralpha,opacity):
filter+" "+opacity;}};}
jQuery(function(){
if(!jQuery.support.reliableMarginRight){
jQuery.cssHooks.marginRight={
get:function(elem,computed){
var ret;
jQuery.swap(elem,{"display":"inline-block"},function(){
if(computed){
ret=curCSS(elem,"margin-right","marginRight");}else{
ret=elem.style.marginRight;}});
return ret;}};}});
if(document.defaultView&&document.defaultView.getComputedStyle){
getComputedStyle=function(elem,name){
var ret,defaultView,computedStyle;
name=name.replace(rupper,"-$1").toLowerCase();
if(!(defaultView=elem.ownerDocument.defaultView)){
return undefined;}
if((computedStyle=defaultView.getComputedStyle(elem,null))){
ret=computedStyle.getPropertyValue(name);
if(ret===""&&!jQuery.contains(elem.ownerDocument.documentElement,elem)){
ret=jQuery.style(elem,name);}}
return ret;};}
if(document.documentElement.currentStyle){
currentStyle=function(elem,name){
var left,
ret=elem.currentStyle&&elem.currentStyle[name],
rsLeft=elem.runtimeStyle&&elem.runtimeStyle[name],
style=elem.style;
if(!rnumpx.test(ret)&&rnum.test(ret)){
left=style.left;
if(rsLeft){
elem.runtimeStyle.left=elem.currentStyle.left;}
style.left=name==="fontSize"?"1em":(ret||0);
ret=style.pixelLeft+"px";
style.left=left;
if(rsLeft){
elem.runtimeStyle.left=rsLeft;}}
return ret===""?"auto":ret;};}
curCSS=getComputedStyle||currentStyle;
function getWH(elem,name,extra){
var val=name==="width"?elem.offsetWidth:elem.offsetHeight,
which=name==="width"?cssWidth:cssHeight;
if(val>0){
if(extra!=="border"){
jQuery.each(which,function(){
if(!extra){
val-=parseFloat(jQuery.css(elem,"padding"+this))||0;}
if(extra==="margin"){
val+=parseFloat(jQuery.css(elem,extra+this))||0;}else{
val-=parseFloat(jQuery.css(elem,"border"+this+"Width"))||0;}});}
return val+"px";}
val=curCSS(elem,name,name);
if(val<0||val==null){
val=elem.style[name]||0;}
val=parseFloat(val)||0;
if(extra){
jQuery.each(which,function(){
val+=parseFloat(jQuery.css(elem,"padding"+this))||0;
if(extra!=="padding"){
val+=parseFloat(jQuery.css(elem,"border"+this+"Width"))||0;}
if(extra==="margin"){
val+=parseFloat(jQuery.css(elem,extra+this))||0;}});}
return val+"px";}
if(jQuery.expr&&jQuery.expr.filters){
jQuery.expr.filters.hidden=function(elem){
var width=elem.offsetWidth,
height=elem.offsetHeight;
return(width===0&&height===0)||(!jQuery.support.reliableHiddenOffsets&&(elem.style.display||jQuery.css(elem,"display"))==="none");};
jQuery.expr.filters.visible=function(elem){
return!jQuery.expr.filters.hidden(elem);};}
var r20=/%20/g,
rbracket=/\[\]$/,
rCRLF=/\r?\n/g,
rhash=/#.*$/,
rheaders=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
rinput=/^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
rlocalProtocol=/^(?:about|app|app\-storage|.+\-extension|file|widget):$/,
rnoContent=/^(?:GET|HEAD)$/,
rprotocol=/^\/\//,
rquery=/\?/,
rscript=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
rselectTextarea=/^(?:select|textarea)/i,
rspacesAjax=/\s+/,
rts=/([?&])_=[^&]*/,
rurl=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,
_load=jQuery.fn.load,
prefilters={},
transports={},
ajaxLocation,
ajaxLocParts;
try{
ajaxLocation=location.href;}catch(e){
ajaxLocation=document.createElement("a");
ajaxLocation.href="";
ajaxLocation=ajaxLocation.href;}
ajaxLocParts=rurl.exec(ajaxLocation.toLowerCase())||[];
function addToPrefiltersOrTransports(structure){
return function(dataTypeExpression,func){
if(typeof dataTypeExpression!=="string"){
func=dataTypeExpression;
dataTypeExpression="*";}
if(jQuery.isFunction(func)){
var dataTypes=dataTypeExpression.toLowerCase().split(rspacesAjax),
i=0,
length=dataTypes.length,
dataType,
list,
placeBefore;
for(;i<length;i++){
dataType=dataTypes[i];
placeBefore=/^\+/.test(dataType);
if(placeBefore){
dataType=dataType.substr(1)||"*";}
list=structure[dataType]=structure[dataType]||[];
list[placeBefore?"unshift":"push"](func);}}};}
function inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR,
dataType,inspected){
dataType=dataType||options.dataTypes[0];
inspected=inspected||{};
inspected[dataType]=true;
var list=structure[dataType],
i=0,
length=list?list.length:0,
executeOnly=(structure===prefilters),
selection;
for(;i<length&&(executeOnly||!selection);i++){
selection=list[i](options,originalOptions,jqXHR);
if(typeof selection==="string"){
if(!executeOnly||inspected[selection]){
selection=undefined;}else{
options.dataTypes.unshift(selection);
selection=inspectPrefiltersOrTransports(
structure,options,originalOptions,jqXHR,selection,inspected);}}}
if((executeOnly||!selection)&&!inspected["*"]){
selection=inspectPrefiltersOrTransports(
structure,options,originalOptions,jqXHR,"*",inspected);}
return selection;}
jQuery.fn.extend({
load:function(url,params,callback){
if(typeof url!=="string"&&_load){
return _load.apply(this,arguments);}else if(!this.length){
return this;}
var off=url.indexOf(" ");
if(off>=0){
var selector=url.slice(off,url.length);
url=url.slice(0,off);}
var type="GET";
if(params){
if(jQuery.isFunction(params)){
callback=params;
params=undefined;}else if(typeof params==="object"){
params=jQuery.param(params,jQuery.ajaxSettings.traditional);
type="POST";}}
var self=this;
jQuery.ajax({
url:url,
type:type,
dataType:"html",
data:params,
complete:function(jqXHR,status,responseText){
responseText=jqXHR.responseText;
if(jqXHR.isResolved()){
jqXHR.done(function(r){
responseText=r;});
self.html(selector?
jQuery("<div>").append(responseText.replace(rscript,"")).find(selector):
responseText);}
if(callback){
self.each(callback,[responseText,status,jqXHR]);}}});
return this;},
serialize:function(){
return jQuery.param(this.serializeArray());},
serializeArray:function(){
return this.map(function(){
return this.elements?jQuery.makeArray(this.elements):this;}).filter(function(){
return this.name&&!this.disabled&&
(this.checked||rselectTextarea.test(this.nodeName)||
rinput.test(this.type));}).map(function(i,elem){
var val=jQuery(this).val();
return val==null?
null:
jQuery.isArray(val)?
jQuery.map(val,function(val,i){
return{name:elem.name,value:val.replace(rCRLF,"\r\n")};}):
{name:elem.name,value:val.replace(rCRLF,"\r\n")};}).get();}});
jQuery.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(i,o){
jQuery.fn[o]=function(f){
return this.bind(o,f);};});
jQuery.each(["get","post"],function(i,method){
jQuery[method]=function(url,data,callback,type){
if(jQuery.isFunction(data)){
type=type||callback;
callback=data;
data=undefined;}
return jQuery.ajax({
type:method,
url:url,
data:data,
success:callback,
dataType:type});};});
jQuery.extend({
getScript:function(url,callback){
return jQuery.get(url,undefined,callback,"script");},
getJSON:function(url,data,callback){
return jQuery.get(url,data,callback,"json");},
ajaxSetup:function(target,settings){
if(!settings){
settings=target;
target=jQuery.extend(true,jQuery.ajaxSettings,settings);}else{
jQuery.extend(true,target,jQuery.ajaxSettings,settings);}
for(var field in{context:1,url:1}){
if(field in settings){
target[field]=settings[field];}else if(field in jQuery.ajaxSettings){
target[field]=jQuery.ajaxSettings[field];}}
return target;},
ajaxSettings:{
url:ajaxLocation,
isLocal:rlocalProtocol.test(ajaxLocParts[1]),
global:true,
type:"GET",
contentType:"application/x-www-form-urlencoded",
processData:true,
async:true,
accepts:{
xml:"application/xml, text/xml",
html:"text/html",
text:"text/plain",
json:"application/json, text/javascript","*":"*/*"},
contents:{
xml:/xml/,
html:/html/,
json:/json/},
responseFields:{
xml:"responseXML",
text:"responseText"},
converters:{"* text":window.String,"text html":true,"text json":jQuery.parseJSON,"text xml":jQuery.parseXML}},
ajaxPrefilter:addToPrefiltersOrTransports(prefilters),
ajaxTransport:addToPrefiltersOrTransports(transports),
ajax:function(url,options){
if(typeof url==="object"){
options=url;
url=undefined;}
options=options||{};
var
s=jQuery.ajaxSetup({},options),
callbackContext=s.context||s,
globalEventContext=callbackContext!==s&&
(callbackContext.nodeType||callbackContext instanceof jQuery)?
jQuery(callbackContext):jQuery.event,
deferred=jQuery.Deferred(),
completeDeferred=jQuery._Deferred(),
statusCode=s.statusCode||{},
ifModifiedKey,
requestHeaders={},
requestHeadersNames={},
responseHeadersString,
responseHeaders,
transport,
timeoutTimer,
parts,
state=0,
fireGlobals,
i,
jqXHR={
readyState:0,
setRequestHeader:function(name,value){
if(!state){
var lname=name.toLowerCase();
name=requestHeadersNames[lname]=requestHeadersNames[lname]||name;
requestHeaders[name]=value;}
return this;},
getAllResponseHeaders:function(){
return state===2?responseHeadersString:null;},
getResponseHeader:function(key){
var match;
if(state===2){
if(!responseHeaders){
responseHeaders={};
while((match=rheaders.exec(responseHeadersString))){
responseHeaders[match[1].toLowerCase()]=match[2];}}
match=responseHeaders[key.toLowerCase()];}
return match===undefined?null:match;},
overrideMimeType:function(type){
if(!state){
s.mimeType=type;}
return this;},
abort:function(statusText){
statusText=statusText||"abort";
if(transport){
transport.abort(statusText);}
done(0,statusText);
return this;}};
function done(status,statusText,responses,headers){
if(state===2){
return;}
state=2;
if(timeoutTimer){
clearTimeout(timeoutTimer);}
transport=undefined;
responseHeadersString=headers||"";
jqXHR.readyState=status?4:0;
var isSuccess,
success,
error,
response=responses?ajaxHandleResponses(s,jqXHR,responses):undefined,
lastModified,
etag;
if(status>=200&&status<300||status===304){
if(s.ifModified){
if((lastModified=jqXHR.getResponseHeader("Last-Modified"))){
jQuery.lastModified[ifModifiedKey]=lastModified;}
if((etag=jqXHR.getResponseHeader("Etag"))){
jQuery.etag[ifModifiedKey]=etag;}}
if(status===304){
statusText="notmodified";
isSuccess=true;}else{
try{
success=ajaxConvert(s,response);
statusText="success";
isSuccess=true;}catch(e){
statusText="parsererror";
error=e;}}}else{
error=statusText;
if(!statusText||status){
statusText="error";
if(status<0){
status=0;}}}
jqXHR.status=status;
jqXHR.statusText=statusText;
if(isSuccess){
deferred.resolveWith(callbackContext,[success,statusText,jqXHR]);}else{
deferred.rejectWith(callbackContext,[jqXHR,statusText,error]);}
jqXHR.statusCode(statusCode);
statusCode=undefined;
if(fireGlobals){
globalEventContext.trigger("ajax"+(isSuccess?"Success":"Error"),
[jqXHR,s,isSuccess?success:error]);}
completeDeferred.resolveWith(callbackContext,[jqXHR,statusText]);
if(fireGlobals){
globalEventContext.trigger("ajaxComplete",[jqXHR,s]);
if(!(--jQuery.active)){
jQuery.event.trigger("ajaxStop");}}}
deferred.promise(jqXHR);
jqXHR.success=jqXHR.done;
jqXHR.error=jqXHR.fail;
jqXHR.complete=completeDeferred.done;
jqXHR.statusCode=function(map){
if(map){
var tmp;
if(state<2){
for(tmp in map){
statusCode[tmp]=[statusCode[tmp],map[tmp]];}}else{
tmp=map[jqXHR.status];
jqXHR.then(tmp,tmp);}}
return this;};
s.url=((url||s.url)+"").replace(rhash,"").replace(rprotocol,ajaxLocParts[1]+"//");
s.dataTypes=jQuery.trim(s.dataType||"*").toLowerCase().split(rspacesAjax);
if(s.crossDomain==null){
parts=rurl.exec(s.url.toLowerCase());
s.crossDomain=!!(parts&&
(parts[1]!=ajaxLocParts[1]||parts[2]!=ajaxLocParts[2]||
(parts[3]||(parts[1]==="http:"?80:443))!=
(ajaxLocParts[3]||(ajaxLocParts[1]==="http:"?80:443))));}
if(s.data&&s.processData&&typeof s.data!=="string"){
s.data=jQuery.param(s.data,s.traditional);}
inspectPrefiltersOrTransports(prefilters,s,options,jqXHR);
if(state===2){
return false;}
fireGlobals=s.global;
s.type=s.type.toUpperCase();
s.hasContent=!rnoContent.test(s.type);
if(fireGlobals&&jQuery.active++===0){
jQuery.event.trigger("ajaxStart");}
if(!s.hasContent){
if(s.data){
s.url+=(rquery.test(s.url)?"&":"?")+s.data;}
ifModifiedKey=s.url;
if(s.cache===false){
var ts=jQuery.now(),
ret=s.url.replace(rts,"$1_="+ts);
s.url=ret+((ret===s.url)?(rquery.test(s.url)?"&":"?")+"_="+ts:"");}}
if(s.data&&s.hasContent&&s.contentType!==false||options.contentType){
jqXHR.setRequestHeader("Content-Type",s.contentType);}
if(s.ifModified){
ifModifiedKey=ifModifiedKey||s.url;
if(jQuery.lastModified[ifModifiedKey]){
jqXHR.setRequestHeader("If-Modified-Since",jQuery.lastModified[ifModifiedKey]);}
if(jQuery.etag[ifModifiedKey]){
jqXHR.setRequestHeader("If-None-Match",jQuery.etag[ifModifiedKey]);}}
jqXHR.setRequestHeader("Accept",
s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?
s.accepts[s.dataTypes[0]]+(s.dataTypes[0]!=="*"?", */*; q=0.01":""):
s.accepts["*"]);
for(i in s.headers){
jqXHR.setRequestHeader(i,s.headers[i]);}
if(s.beforeSend&&(s.beforeSend.call(callbackContext,jqXHR,s)===false||state===2)){
jqXHR.abort();
return false;}
for(i in{success:1,error:1,complete:1}){
jqXHR[i](s[i]);}
transport=inspectPrefiltersOrTransports(transports,s,options,jqXHR);
if(!transport){
done(-1,"No Transport");}else{
jqXHR.readyState=1;
if(fireGlobals){
globalEventContext.trigger("ajaxSend",[jqXHR,s]);}
if(s.async&&s.timeout>0){
timeoutTimer=setTimeout(function(){
jqXHR.abort("timeout");},s.timeout);}
try{
state=1;
transport.send(requestHeaders,done);}catch(e){
if(status<2){
done(-1,e);}else{
jQuery.error(e);}}}
return jqXHR;},
param:function(a,traditional){
var s=[],
add=function(key,value){
value=jQuery.isFunction(value)?value():value;
s[s.length]=encodeURIComponent(key)+"="+encodeURIComponent(value);};
if(traditional===undefined){
traditional=jQuery.ajaxSettings.traditional;}
if(jQuery.isArray(a)||(a.jquery&&!jQuery.isPlainObject(a))){
jQuery.each(a,function(){
add(this.name,this.value);});}else{
for(var prefix in a){
buildParams(prefix,a[prefix],traditional,add);}}
return s.join("&").replace(r20,"+");}});
function buildParams(prefix,obj,traditional,add){
if(jQuery.isArray(obj)){
jQuery.each(obj,function(i,v){
if(traditional||rbracket.test(prefix)){
add(prefix,v);}else{
buildParams(prefix+"["+(typeof v==="object"||jQuery.isArray(v)?i:"")+"]",v,traditional,add);}});}else if(!traditional&&obj!=null&&typeof obj==="object"){
for(var name in obj){
buildParams(prefix+"["+name+"]",obj[name],traditional,add);}}else{
add(prefix,obj);}}
jQuery.extend({
active:0,
lastModified:{},
etag:{}});
function ajaxHandleResponses(s,jqXHR,responses){
var contents=s.contents,
dataTypes=s.dataTypes,
responseFields=s.responseFields,
ct,
type,
finalDataType,
firstDataType;
for(type in responseFields){
if(type in responses){
jqXHR[responseFields[type]]=responses[type];}}
while(dataTypes[0]==="*"){
dataTypes.shift();
if(ct===undefined){
ct=s.mimeType||jqXHR.getResponseHeader("content-type");}}
if(ct){
for(type in contents){
if(contents[type]&&contents[type].test(ct)){
dataTypes.unshift(type);
break;}}}
if(dataTypes[0]in responses){
finalDataType=dataTypes[0];}else{
for(type in responses){
if(!dataTypes[0]||s.converters[type+" "+dataTypes[0]]){
finalDataType=type;
break;}
if(!firstDataType){
firstDataType=type;}}
finalDataType=finalDataType||firstDataType;}
if(finalDataType){
if(finalDataType!==dataTypes[0]){
dataTypes.unshift(finalDataType);}
return responses[finalDataType];}}
function ajaxConvert(s,response){
if(s.dataFilter){
response=s.dataFilter(response,s.dataType);}
var dataTypes=s.dataTypes,
converters={},
i,
key,
length=dataTypes.length,
tmp,
current=dataTypes[0],
prev,
conversion,
conv,
conv1,
conv2;
for(i=1;i<length;i++){
if(i===1){
for(key in s.converters){
if(typeof key==="string"){
converters[key.toLowerCase()]=s.converters[key];}}}
prev=current;
current=dataTypes[i];
if(current==="*"){
current=prev;}else if(prev!=="*"&&prev!==current){
conversion=prev+" "+current;
conv=converters[conversion]||converters["* "+current];
if(!conv){
conv2=undefined;
for(conv1 in converters){
tmp=conv1.split(" ");
if(tmp[0]===prev||tmp[0]==="*"){
conv2=converters[tmp[1]+" "+current];
if(conv2){
conv1=converters[conv1];
if(conv1===true){
conv=conv2;}else if(conv2===true){
conv=conv1;}
break;}}}}
if(!(conv||conv2)){
jQuery.error("No conversion from "+conversion.replace(" "," to "));}
if(conv!==true){
response=conv?conv(response):conv2(conv1(response));}}}
return response;}
var jsc=jQuery.now(),
jsre=/(\=)\?(&|$)|\?\?/i;
jQuery.ajaxSetup({
jsonp:"callback",
jsonpCallback:function(){
return jQuery.expando+"_"+(jsc++);}});
jQuery.ajaxPrefilter("json jsonp",function(s,originalSettings,jqXHR){
var inspectData=s.contentType==="application/x-www-form-urlencoded"&&
(typeof s.data==="string");
if(s.dataTypes[0]==="jsonp"||
s.jsonp!==false&&(jsre.test(s.url)||
inspectData&&jsre.test(s.data))){
var responseContainer,
jsonpCallback=s.jsonpCallback=
jQuery.isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback,
previous=window[jsonpCallback],
url=s.url,
data=s.data,
replace="$1"+jsonpCallback+"$2";
if(s.jsonp!==false){
url=url.replace(jsre,replace);
if(s.url===url){
if(inspectData){
data=data.replace(jsre,replace);}
if(s.data===data){
url+=(/\?/.test(url)?"&":"?")+s.jsonp+"="+jsonpCallback;}}}
s.url=url;
s.data=data;
window[jsonpCallback]=function(response){
responseContainer=[response];};
jqXHR.always(function(){
window[jsonpCallback]=previous;
if(responseContainer&&jQuery.isFunction(previous)){
window[jsonpCallback](responseContainer[0]);}});
s.converters["script json"]=function(){
if(!responseContainer){
jQuery.error(jsonpCallback+" was not called");}
return responseContainer[0];};
s.dataTypes[0]="json";
return"script";}});
jQuery.ajaxSetup({
accepts:{
script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},
contents:{
script:/javascript|ecmascript/},
converters:{"text script":function(text){
jQuery.globalEval(text);
return text;}}});
jQuery.ajaxPrefilter("script",function(s){
if(s.cache===undefined){
s.cache=false;}
if(s.crossDomain){
s.type="GET";
s.global=false;}});
jQuery.ajaxTransport("script",function(s){
if(s.crossDomain){
var script,
head=document.head||document.getElementsByTagName("head")[0]||document.documentElement;
return{
send:function(_,callback){
script=document.createElement("script");
script.async="async";
if(s.scriptCharset){
script.charset=s.scriptCharset;}
script.src=s.url;
script.onload=script.onreadystatechange=function(_,isAbort){
if(isAbort||!script.readyState||/loaded|complete/.test(script.readyState)){
script.onload=script.onreadystatechange=null;
if(head&&script.parentNode){
head.removeChild(script);}
script=undefined;
if(!isAbort){
callback(200,"success");}}};
head.insertBefore(script,head.firstChild);},
abort:function(){
if(script){
script.onload(0,1);}}};}});
var
xhrOnUnloadAbort=window.ActiveXObject?function(){
for(var key in xhrCallbacks){
xhrCallbacks[key](0,1);}}:false,
xhrId=0,
xhrCallbacks;
function createStandardXHR(){
try{
return new window.XMLHttpRequest();}catch(e){}}
function createActiveXHR(){
try{
return new window.ActiveXObject("Microsoft.XMLHTTP");}catch(e){}}
jQuery.ajaxSettings.xhr=window.ActiveXObject?
function(){
return!this.isLocal&&createStandardXHR()||createActiveXHR();}:
createStandardXHR;
(function(xhr){
jQuery.extend(jQuery.support,{
ajax:!!xhr,
cors:!!xhr&&("withCredentials"in xhr)});})(jQuery.ajaxSettings.xhr());
if(jQuery.support.ajax){
jQuery.ajaxTransport(function(s){
if(!s.crossDomain||jQuery.support.cors){
var callback;
return{
send:function(headers,complete){
var xhr=s.xhr(),
handle,
i;
if(s.username){
xhr.open(s.type,s.url,s.async,s.username,s.password);}else{
xhr.open(s.type,s.url,s.async);}
if(s.xhrFields){
for(i in s.xhrFields){
xhr[i]=s.xhrFields[i];}}
if(s.mimeType&&xhr.overrideMimeType){
xhr.overrideMimeType(s.mimeType);}
if(!s.crossDomain&&!headers["X-Requested-With"]){
headers["X-Requested-With"]="XMLHttpRequest";}
try{
for(i in headers){
xhr.setRequestHeader(i,headers[i]);}}catch(_){}
xhr.send((s.hasContent&&s.data)||null);
callback=function(_,isAbort){
var status,
statusText,
responseHeaders,
responses,
xml;
try{
if(callback&&(isAbort||xhr.readyState===4)){
callback=undefined;
if(handle){
xhr.onreadystatechange=jQuery.noop;
if(xhrOnUnloadAbort){
delete xhrCallbacks[handle];}}
if(isAbort){
if(xhr.readyState!==4){
xhr.abort();}}else{
status=xhr.status;
responseHeaders=xhr.getAllResponseHeaders();
responses={};
xml=xhr.responseXML;
if(xml&&xml.documentElement){
responses.xml=xml;}
responses.text=xhr.responseText;
try{
statusText=xhr.statusText;}catch(e){
statusText="";}
if(!status&&s.isLocal&&!s.crossDomain){
status=responses.text?200:404;}else if(status===1223){
status=204;}}}}catch(firefoxAccessException){
if(!isAbort){
complete(-1,firefoxAccessException);}}
if(responses){
complete(status,statusText,responses,responseHeaders);}};
if(!s.async||xhr.readyState===4){
callback();}else{
handle=++xhrId;
if(xhrOnUnloadAbort){
if(!xhrCallbacks){
xhrCallbacks={};
jQuery(window).unload(xhrOnUnloadAbort);}
xhrCallbacks[handle]=callback;}
xhr.onreadystatechange=callback;}},
abort:function(){
if(callback){
callback(0,1);}}};}});}
var elemdisplay={},
iframe,iframeDoc,
rfxtypes=/^(?:toggle|show|hide)$/,
rfxnum=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
timerId,
fxAttrs=[
["height","marginTop","marginBottom","paddingTop","paddingBottom"],
["width","marginLeft","marginRight","paddingLeft","paddingRight"],
["opacity"]],
fxNow,
requestAnimationFrame=window.webkitRequestAnimationFrame||
window.mozRequestAnimationFrame||
window.oRequestAnimationFrame;
jQuery.fn.extend({
show:function(speed,easing,callback){
var elem,display;
if(speed||speed===0){
return this.animate(genFx("show",3),speed,easing,callback);}else{
for(var i=0,j=this.length;i<j;i++){
elem=this[i];
if(elem.style){
display=elem.style.display;
if(!jQuery._data(elem,"olddisplay")&&display==="none"){
display=elem.style.display="";}
if(display===""&&jQuery.css(elem,"display")==="none"){
jQuery._data(elem,"olddisplay",defaultDisplay(elem.nodeName));}}}
for(i=0;i<j;i++){
elem=this[i];
if(elem.style){
display=elem.style.display;
if(display===""||display==="none"){
elem.style.display=jQuery._data(elem,"olddisplay")||"";}}}
return this;}},
hide:function(speed,easing,callback){
if(speed||speed===0){
return this.animate(genFx("hide",3),speed,easing,callback);}else{
for(var i=0,j=this.length;i<j;i++){
if(this[i].style){
var display=jQuery.css(this[i],"display");
if(display!=="none"&&!jQuery._data(this[i],"olddisplay")){
jQuery._data(this[i],"olddisplay",display);}}}
for(i=0;i<j;i++){
if(this[i].style){
this[i].style.display="none";}}
return this;}},
_toggle:jQuery.fn.toggle,
toggle:function(fn,fn2,callback){
var bool=typeof fn==="boolean";
if(jQuery.isFunction(fn)&&jQuery.isFunction(fn2)){
this._toggle.apply(this,arguments);}else if(fn==null||bool){
this.each(function(){
var state=bool?fn:jQuery(this).is(":hidden");
jQuery(this)[state?"show":"hide"]();});}else{
this.animate(genFx("toggle",3),fn,fn2,callback);}
return this;},
fadeTo:function(speed,to,easing,callback){
return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:to},speed,easing,callback);},
animate:function(prop,speed,easing,callback){
var optall=jQuery.speed(speed,easing,callback);
if(jQuery.isEmptyObject(prop)){
return this.each(optall.complete,[false]);}
prop=jQuery.extend({},prop);
return this[optall.queue===false?"each":"queue"](function(){
if(optall.queue===false){
jQuery._mark(this);}
var opt=jQuery.extend({},optall),
isElement=this.nodeType===1,
hidden=isElement&&jQuery(this).is(":hidden"),
name,val,p,
display,e,
parts,start,end,unit;
opt.animatedProperties={};
for(p in prop){
name=jQuery.camelCase(p);
if(p!==name){
prop[name]=prop[p];
delete prop[p];}
val=prop[name];
if(jQuery.isArray(val)){
opt.animatedProperties[name]=val[1];
val=prop[name]=val[0];}else{
opt.animatedProperties[name]=opt.specialEasing&&opt.specialEasing[name]||opt.easing||'swing';}
if(val==="hide"&&hidden||val==="show"&&!hidden){
return opt.complete.call(this);}
if(isElement&&(name==="height"||name==="width")){
opt.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY];
if(jQuery.css(this,"display")==="inline"&&
jQuery.css(this,"float")==="none"){
if(!jQuery.support.inlineBlockNeedsLayout){
this.style.display="inline-block";}else{
display=defaultDisplay(this.nodeName);
if(display==="inline"){
this.style.display="inline-block";}else{
this.style.display="inline";
this.style.zoom=1;}}}}}
if(opt.overflow!=null){
this.style.overflow="hidden";}
for(p in prop){
e=new jQuery.fx(this,opt,p);
val=prop[p];
if(rfxtypes.test(val)){
e[val==="toggle"?hidden?"show":"hide":val]();}else{
parts=rfxnum.exec(val);
start=e.cur();
if(parts){
end=parseFloat(parts[2]);
unit=parts[3]||(jQuery.cssNumber[p]?"":"px");
if(unit!=="px"){
jQuery.style(this,p,(end||1)+unit);
start=((end||1)/e.cur())*start;
jQuery.style(this,p,start+unit);}
if(parts[1]){
end=((parts[1]==="-="?-1:1)*end)+start;}
e.custom(start,end,unit);}else{
e.custom(start,val,"");}}}
return true;});},
stop:function(clearQueue,gotoEnd){
if(clearQueue){
this.queue([]);}
this.each(function(){
var timers=jQuery.timers,
i=timers.length;
if(!gotoEnd){
jQuery._unmark(true,this);}
while(i--){
if(timers[i].elem===this){
if(gotoEnd){
timers[i](true);}
timers.splice(i,1);}}});
if(!gotoEnd){
this.dequeue();}
return this;}});
function createFxNow(){
setTimeout(clearFxNow,0);
return(fxNow=jQuery.now());}
function clearFxNow(){
fxNow=undefined;}
function genFx(type,num){
var obj={};
jQuery.each(fxAttrs.concat.apply([],fxAttrs.slice(0,num)),function(){
obj[this]=type;});
return obj;}
jQuery.each({
slideDown:genFx("show",1),
slideUp:genFx("hide",1),
slideToggle:genFx("toggle",1),
fadeIn:{opacity:"show"},
fadeOut:{opacity:"hide"},
fadeToggle:{opacity:"toggle"}},function(name,props){
jQuery.fn[name]=function(speed,easing,callback){
return this.animate(props,speed,easing,callback);};});
jQuery.extend({
speed:function(speed,easing,fn){
var opt=speed&&typeof speed==="object"?jQuery.extend({},speed):{
complete:fn||!fn&&easing||
jQuery.isFunction(speed)&&speed,
duration:speed,
easing:fn&&easing||easing&&!jQuery.isFunction(easing)&&easing};
opt.duration=jQuery.fx.off?0:typeof opt.duration==="number"?opt.duration:
opt.duration in jQuery.fx.speeds?jQuery.fx.speeds[opt.duration]:jQuery.fx.speeds._default;
opt.old=opt.complete;
opt.complete=function(noUnmark){
if(jQuery.isFunction(opt.old)){
opt.old.call(this);}
if(opt.queue!==false){
jQuery.dequeue(this);}else if(noUnmark!==false){
jQuery._unmark(this);}};
return opt;},
easing:{
linear:function(p,n,firstNum,diff){
return firstNum+diff*p;},
swing:function(p,n,firstNum,diff){
return((-Math.cos(p*Math.PI)/2)+0.5)*diff+firstNum;}},
timers:[],
fx:function(elem,options,prop){
this.options=options;
this.elem=elem;
this.prop=prop;
options.orig=options.orig||{};}});
jQuery.fx.prototype={
update:function(){
if(this.options.step){
this.options.step.call(this.elem,this.now,this);}
(jQuery.fx.step[this.prop]||jQuery.fx.step._default)(this);},
cur:function(){
if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null)){
return this.elem[this.prop];}
var parsed,
r=jQuery.css(this.elem,this.prop);
return isNaN(parsed=parseFloat(r))?!r||r==="auto"?0:r:parsed;},
custom:function(from,to,unit){
var self=this,
fx=jQuery.fx,
raf;
this.startTime=fxNow||createFxNow();
this.start=from;
this.end=to;
this.unit=unit||this.unit||(jQuery.cssNumber[this.prop]?"":"px");
this.now=this.start;
this.pos=this.state=0;
function t(gotoEnd){
return self.step(gotoEnd);}
t.elem=this.elem;
if(t()&&jQuery.timers.push(t)&&!timerId){
if(requestAnimationFrame){
timerId=true;
raf=function(){
if(timerId){
requestAnimationFrame(raf);
fx.tick();}};
requestAnimationFrame(raf);}else{
timerId=setInterval(fx.tick,fx.interval);}}},
show:function(){
this.options.orig[this.prop]=jQuery.style(this.elem,this.prop);
this.options.show=true;
this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur());
jQuery(this.elem).show();},
hide:function(){
this.options.orig[this.prop]=jQuery.style(this.elem,this.prop);
this.options.hide=true;
this.custom(this.cur(),0);},
step:function(gotoEnd){
var t=fxNow||createFxNow(),
done=true,
elem=this.elem,
options=this.options,
i,n;
if(gotoEnd||t>=options.duration+this.startTime){
this.now=this.end;
this.pos=this.state=1;
this.update();
options.animatedProperties[this.prop]=true;
for(i in options.animatedProperties){
if(options.animatedProperties[i]!==true){
done=false;}}
if(done){
if(options.overflow!=null&&!jQuery.support.shrinkWrapBlocks){
jQuery.each(["","X","Y"],function(index,value){
elem.style["overflow"+value]=options.overflow[index];});}
if(options.hide){
jQuery(elem).hide();}
if(options.hide||options.show){
for(var p in options.animatedProperties){
jQuery.style(elem,p,options.orig[p]);}}
options.complete.call(elem);}
return false;}else{
if(options.duration==Infinity){
this.now=t;}else{
n=t-this.startTime;
this.state=n/options.duration;
this.pos=jQuery.easing[options.animatedProperties[this.prop]](this.state,n,0,1,options.duration);
this.now=this.start+((this.end-this.start)*this.pos);}
this.update();}
return true;}};
jQuery.extend(jQuery.fx,{
tick:function(){
for(var timers=jQuery.timers,i=0;i<timers.length;++i){
if(!timers[i]()){
timers.splice(i--,1);}}
if(!timers.length){
jQuery.fx.stop();}},
interval:13,
stop:function(){
clearInterval(timerId);
timerId=null;},
speeds:{
slow:600,
fast:200,
_default:400},
step:{
opacity:function(fx){
jQuery.style(fx.elem,"opacity",fx.now);},
_default:function(fx){
if(fx.elem.style&&fx.elem.style[fx.prop]!=null){
fx.elem.style[fx.prop]=(fx.prop==="width"||fx.prop==="height"?Math.max(0,fx.now):fx.now)+fx.unit;}else{
fx.elem[fx.prop]=fx.now;}}}});
if(jQuery.expr&&jQuery.expr.filters){
jQuery.expr.filters.animated=function(elem){
return jQuery.grep(jQuery.timers,function(fn){
return elem===fn.elem;}).length;};}
function defaultDisplay(nodeName){
if(!elemdisplay[nodeName]){
var body=document.body,
elem=jQuery("<"+nodeName+">").appendTo(body),
display=elem.css("display");
elem.remove();
if(display==="none"||display===""){
if(!iframe){
iframe=document.createElement("iframe");
iframe.frameBorder=iframe.width=iframe.height=0;}
body.appendChild(iframe);
if(!iframeDoc||!iframe.createElement){
iframeDoc=(iframe.contentWindow||iframe.contentDocument).document;
iframeDoc.write((document.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>");
iframeDoc.close();}
elem=iframeDoc.createElement(nodeName);
iframeDoc.body.appendChild(elem);
display=jQuery.css(elem,"display");
body.removeChild(iframe);}
elemdisplay[nodeName]=display;}
return elemdisplay[nodeName];}
var rtable=/^t(?:able|d|h)$/i,
rroot=/^(?:body|html)$/i;
if("getBoundingClientRect"in document.documentElement){
jQuery.fn.offset=function(options){
var elem=this[0],box;
if(options){
return this.each(function(i){
jQuery.offset.setOffset(this,options,i);});}
if(!elem||!elem.ownerDocument){
return null;}
if(elem===elem.ownerDocument.body){
return jQuery.offset.bodyOffset(elem);}
try{
box=elem.getBoundingClientRect();}catch(e){}
var doc=elem.ownerDocument,
docElem=doc.documentElement;
if(!box||!jQuery.contains(docElem,elem)){
return box?{top:box.top,left:box.left}:{top:0,left:0};}
var body=doc.body,
win=getWindow(doc),
clientTop=docElem.clientTop||body.clientTop||0,
clientLeft=docElem.clientLeft||body.clientLeft||0,
scrollTop=win.pageYOffset||jQuery.support.boxModel&&docElem.scrollTop||body.scrollTop,
scrollLeft=win.pageXOffset||jQuery.support.boxModel&&docElem.scrollLeft||body.scrollLeft,
top=box.top+scrollTop-clientTop,
left=box.left+scrollLeft-clientLeft;
return{top:top,left:left};};}else{
jQuery.fn.offset=function(options){
var elem=this[0];
if(options){
return this.each(function(i){
jQuery.offset.setOffset(this,options,i);});}
if(!elem||!elem.ownerDocument){
return null;}
if(elem===elem.ownerDocument.body){
return jQuery.offset.bodyOffset(elem);}
jQuery.offset.initialize();
var computedStyle,
offsetParent=elem.offsetParent,
prevOffsetParent=elem,
doc=elem.ownerDocument,
docElem=doc.documentElement,
body=doc.body,
defaultView=doc.defaultView,
prevComputedStyle=defaultView?defaultView.getComputedStyle(elem,null):elem.currentStyle,
top=elem.offsetTop,
left=elem.offsetLeft;
while((elem=elem.parentNode)&&elem!==body&&elem!==docElem){
if(jQuery.offset.supportsFixedPosition&&prevComputedStyle.position==="fixed"){
break;}
computedStyle=defaultView?defaultView.getComputedStyle(elem,null):elem.currentStyle;
top-=elem.scrollTop;
left-=elem.scrollLeft;
if(elem===offsetParent){
top+=elem.offsetTop;
left+=elem.offsetLeft;
if(jQuery.offset.doesNotAddBorder&&!(jQuery.offset.doesAddBorderForTableAndCells&&rtable.test(elem.nodeName))){
top+=parseFloat(computedStyle.borderTopWidth)||0;
left+=parseFloat(computedStyle.borderLeftWidth)||0;}
prevOffsetParent=offsetParent;
offsetParent=elem.offsetParent;}
if(jQuery.offset.subtractsBorderForOverflowNotVisible&&computedStyle.overflow!=="visible"){
top+=parseFloat(computedStyle.borderTopWidth)||0;
left+=parseFloat(computedStyle.borderLeftWidth)||0;}
prevComputedStyle=computedStyle;}
if(prevComputedStyle.position==="relative"||prevComputedStyle.position==="static"){
top+=body.offsetTop;
left+=body.offsetLeft;}
if(jQuery.offset.supportsFixedPosition&&prevComputedStyle.position==="fixed"){
top+=Math.max(docElem.scrollTop,body.scrollTop);
left+=Math.max(docElem.scrollLeft,body.scrollLeft);}
return{top:top,left:left};};}
jQuery.offset={
initialize:function(){
var body=document.body,container=document.createElement("div"),innerDiv,checkDiv,table,td,bodyMarginTop=parseFloat(jQuery.css(body,"marginTop"))||0,
html="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
jQuery.extend(container.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"});
container.innerHTML=html;
body.insertBefore(container,body.firstChild);
innerDiv=container.firstChild;
checkDiv=innerDiv.firstChild;
td=innerDiv.nextSibling.firstChild.firstChild;
this.doesNotAddBorder=(checkDiv.offsetTop!==5);
this.doesAddBorderForTableAndCells=(td.offsetTop===5);
checkDiv.style.position="fixed";
checkDiv.style.top="20px";
this.supportsFixedPosition=(checkDiv.offsetTop===20||checkDiv.offsetTop===15);
checkDiv.style.position=checkDiv.style.top="";
innerDiv.style.overflow="hidden";
innerDiv.style.position="relative";
this.subtractsBorderForOverflowNotVisible=(checkDiv.offsetTop===-5);
this.doesNotIncludeMarginInBodyOffset=(body.offsetTop!==bodyMarginTop);
body.removeChild(container);
jQuery.offset.initialize=jQuery.noop;},
bodyOffset:function(body){
var top=body.offsetTop,
left=body.offsetLeft;
jQuery.offset.initialize();
if(jQuery.offset.doesNotIncludeMarginInBodyOffset){
top+=parseFloat(jQuery.css(body,"marginTop"))||0;
left+=parseFloat(jQuery.css(body,"marginLeft"))||0;}
return{top:top,left:left};},
setOffset:function(elem,options,i){
var position=jQuery.css(elem,"position");
if(position==="static"){
elem.style.position="relative";}
var curElem=jQuery(elem),
curOffset=curElem.offset(),
curCSSTop=jQuery.css(elem,"top"),
curCSSLeft=jQuery.css(elem,"left"),
calculatePosition=(position==="absolute"||position==="fixed")&&jQuery.inArray("auto",[curCSSTop,curCSSLeft])>-1,
props={},curPosition={},curTop,curLeft;
if(calculatePosition){
curPosition=curElem.position();
curTop=curPosition.top;
curLeft=curPosition.left;}else{
curTop=parseFloat(curCSSTop)||0;
curLeft=parseFloat(curCSSLeft)||0;}
if(jQuery.isFunction(options)){
options=options.call(elem,i,curOffset);}
if(options.top!=null){
props.top=(options.top-curOffset.top)+curTop;}
if(options.left!=null){
props.left=(options.left-curOffset.left)+curLeft;}
if("using"in options){
options.using.call(elem,props);}else{
curElem.css(props);}}};
jQuery.fn.extend({
position:function(){
if(!this[0]){
return null;}
var elem=this[0],
offsetParent=this.offsetParent(),
offset=this.offset(),
parentOffset=rroot.test(offsetParent[0].nodeName)?{top:0,left:0}:offsetParent.offset();
offset.top-=parseFloat(jQuery.css(elem,"marginTop"))||0;
offset.left-=parseFloat(jQuery.css(elem,"marginLeft"))||0;
parentOffset.top+=parseFloat(jQuery.css(offsetParent[0],"borderTopWidth"))||0;
parentOffset.left+=parseFloat(jQuery.css(offsetParent[0],"borderLeftWidth"))||0;
return{
top:offset.top-parentOffset.top,
left:offset.left-parentOffset.left};},
offsetParent:function(){
return this.map(function(){
var offsetParent=this.offsetParent||document.body;
while(offsetParent&&(!rroot.test(offsetParent.nodeName)&&jQuery.css(offsetParent,"position")==="static")){
offsetParent=offsetParent.offsetParent;}
return offsetParent;});}});
jQuery.each(["Left","Top"],function(i,name){
var method="scroll"+name;
jQuery.fn[method]=function(val){
var elem,win;
if(val===undefined){
elem=this[0];
if(!elem){
return null;}
win=getWindow(elem);
return win?("pageXOffset"in win)?win[i?"pageYOffset":"pageXOffset"]:
jQuery.support.boxModel&&win.document.documentElement[method]||
win.document.body[method]:
elem[method];}
return this.each(function(){
win=getWindow(this);
if(win){
win.scrollTo(!i?val:jQuery(win).scrollLeft(),
i?val:jQuery(win).scrollTop());}else{
this[method]=val;}});};});
function getWindow(elem){
return jQuery.isWindow(elem)?
elem:
elem.nodeType===9?
elem.defaultView||elem.parentWindow:
false;}
jQuery.each(["Height","Width"],function(i,name){
var type=name.toLowerCase();
jQuery.fn["inner"+name]=function(){
var elem=this[0];
return elem&&elem.style?
parseFloat(jQuery.css(elem,type,"padding")):
null;};
jQuery.fn["outer"+name]=function(margin){
var elem=this[0];
return elem&&elem.style?
parseFloat(jQuery.css(elem,type,margin?"margin":"border")):
null;};
jQuery.fn[type]=function(size){
var elem=this[0];
if(!elem){
return size==null?null:this;}
if(jQuery.isFunction(size)){
return this.each(function(i){
var self=jQuery(this);
self[type](size.call(this,i,self[type]()));});}
if(jQuery.isWindow(elem)){
var docElemProp=elem.document.documentElement["client"+name];
return elem.document.compatMode==="CSS1Compat"&&docElemProp||
elem.document.body["client"+name]||docElemProp;}else if(elem.nodeType===9){
return Math.max(
elem.documentElement["client"+name],
elem.body["scroll"+name],elem.documentElement["scroll"+name],
elem.body["offset"+name],elem.documentElement["offset"+name]);}else if(size===undefined){
var orig=jQuery.css(elem,type),
ret=parseFloat(orig);
return jQuery.isNaN(ret)?orig:ret;}else{
return this.css(type,typeof size==="string"?size:size+"px");}};});
window.jQuery=window.$=jQuery;})(window);;
_i18n_locale={"date_formats":{"medium":{"pattern":"MMM d, yyyy","format":"%(MMM)s %(d)s, %(yyyy)s"},"full":{"pattern":"EEEE, MMMM d, yyyy","format":"%(EEEE)s, %(MMMM)s %(d)s, %(yyyy)s"},"long":{"pattern":"MMMM d, yyyy","format":"%(MMMM)s %(d)s, %(yyyy)s"},"short":{"pattern":"M/d/yy","format":"%(M)s/%(d)s/%(yy)s"}},"scientific_format":"#E0","exp_symbol":"E","eras":{"wide":{"0":"Before Christ","1":"Anno Domini"},"abbreviated":{"0":"BC","1":"AD"},"narrow":{"0":"B","1":"A"}},"decimal_symbol":".","months":{"stand-alone":{"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"},"abbreviated":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"}},"format":{"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"},"abbreviated":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"}}},"group_symbol":",","days":{"stand-alone":{"wide":{"0":"Monday","1":"Tuesday","2":"Wednesday","3":"Thursday","4":"Friday","5":"Saturday","6":"Sunday"},"abbreviated":{"0":"Monday","1":"Tuesday","2":"Wednesday","3":"Thursday","4":"Friday","5":"Saturday","6":"Sunday"},"narrow":{"0":"M","1":"T","2":"W","3":"T","4":"F","5":"S","6":"S"}},"format":{"wide":{"0":"Monday","1":"Tuesday","2":"Wednesday","3":"Thursday","4":"Friday","5":"Saturday","6":"Sunday"},"abbreviated":{"0":"Mon","1":"Tue","2":"Wed","3":"Thu","4":"Fri","5":"Sat","6":"Sun"},"narrow":{"0":"M","1":"T","2":"W","3":"T","4":"F","5":"S","6":"S"}}},"datetime_formats":{"null":"{1} {0}"},"percent_format":"#,##0%","min_week_days":1,"first_week_day":6,"periods":{"am":"AM","pm":"PM"},"minus_sign":"-","time_formats":{"medium":{"pattern":"h:mm:ss a","format":"%(h)s:%(mm)s:%(ss)s %(a)s"},"full":{"pattern":"h:mm:ss a v","format":"%(h)s:%(mm)s:%(ss)s %(a)s %(v)s"},"long":{"pattern":"h:mm:ss a z","format":"%(h)s:%(mm)s:%(ss)s %(a)s %(z)s"},"short":{"pattern":"h:mm a","format":"%(h)s:%(mm)s %(a)s"}},"quarters":{"stand-alone":{"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"},"abbreviated":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"},"narrow":{"1":"1","2":"2","3":"3","4":"4"}},"format":{"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"},"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"}}},"plus_sign":"+","number_format":"#,##0.###","locale_name":"en_US"};
function _(message){
if(_i18n_locale.locale_name=='en_DEBUG')return __debug_trans_str(message);
var entry=_i18n_catalog['+-'+message];
return entry==undefined?message:entry;}
function ungettext(msgid1,msgid2,n){
if(_i18n_locale.locale_name=='en_DEBUG')return __debug_trans_str(msgid1);
var id=''+_i18n_plural(n)+'-'+msgid1;
var entry=_i18n_catalog[id];
return entry==undefined?(n==1?msgid1:msgid2):entry;}
function __debug_trans_str(str){
var parts=str.split(/(\%(:?\(\w+\))?\w)|(<[^>]+>)|(\s+)/);
parts=jQuery.grep(parts,function(en){return en!==undefined;});
var result=[];
for(var i=0;i<parts.length;i++){
if(i&&parts[i-1].substr(0,2)=='%(')
continue;
if(parts[i][0]=='%')
result.push('**'+parts[i]+'**');
else if(parts[i][0]=='<'||/^\s+/.test(parts[i]))
result.push(parts[i]);
else
result.push('\u270c'.repeat(parts[i].length));}
return result.join('');}
function format_decimal(num,format){
if(!format)
format=_i18n_locale['number_format'];
var pattern=parse_number_pattern(format);
if(_i18n_locale.locale_name=='en_DEBUG')
return pattern.apply(num).replace(/\d/g,'0');
else
return pattern.apply(num);}
format_number=format_decimal;
function format_percent(num,format){
if(!format)
format=_i18n_locale['percent_format'];
var pattern=parse_number_pattern(format);
pattern.frac_prec=[0,3];
return pattern.apply(num);}
function format_scientific(num,format){
if(!format)
format=_i18n_locale['scientific_format'];
var pattern=parse_number_pattern(format);
return pattern.apply(num);}
function format_date(date,format){
if(!date)
date=new Date();
if(Splunk.util.isInt(date)){
date=new Date(date*1000);}
if(!format)
format='medium';
if(['full','long','medium','short'].indexOf(format)!==-1)
format=get_date_format(format);
var pattern=parse_datetime_pattern(format);
return pattern.apply(new DateTime(date),_i18n_locale);}
function format_datetime(datetime,date_format,time_format){
if(datetime==undefined)
datetime=new Date();
if(Splunk.util.isInt(datetime)){
datetime=new Date(datetime*1000);}
datetime=new DateTime(datetime);
if(!date_format)
date_format='medium';
if(!time_format)
time_format=date_format;
var td_format=get_datetime_format(date_format);
return td_format.replace('{0}',format_time(datetime,time_format)).replace('{1}',format_date(datetime,date_format));}
function format_time(time,format){
if(!format)
format='medium';
if(!time){
timenow=new Date();
time=new Time(timenow.getHours(),timenow.getMinutes(),timenow.getSeconds());}else if(time instanceof Date){
time=new DateTime(time);}
if(['full','long','medium','short'].indexOf(format)!==-1)
format=get_time_format(format);
var pattern=parse_datetime_pattern(format);
return pattern.apply(time,_i18n_locale);}
function format_datetime_microseconds(dt,date_base_format,time_base_format){
if(!date_base_format)
date_base_format='short';
if(!time_base_format)
time_base_format='medium';
if(!dt){
var timenow=new Date();
dt=new Time(timenow.getHours(),timenow.getMinutes(),timenow.getSeconds());}else if(dt instanceof Date){
dt=new DateTime(dt);}
var locale=_i18n_locale;
var time_format=locale.time_formats[time_base_format+'-microsecond'];
if(!time_format){
time_format=get_time_format(time_base_format);
time_format=(time_format instanceof DateTimePattern)?time_format.pattern:time_format;
time_format=time_format.replace(/ss/,'ss_TTT','g');
time_format=locale.time_formats[time_base_format+'-microsecond']=parse_datetime_pattern(time_format);}
return get_datetime_format(time_base_format).replace('{0}',format_time(dt,time_format)).replace('{1}',format_date(dt,date_base_format));}
function format_time_microseconds(time,time_base_format){
if(!time_base_format)
time_base_format='medium';
if(!time){
timenow=new Date();
time=new Time(timenow.getHours(),timenow.getMinutes(),timenow.getSeconds());}else if(time instanceof Date){
time=new DateTime(time);}
var locale=_i18n_locale;
var time_format=locale.time_formats[time_base_format+'-microsecond'];
if(!time_format){
time_format=get_time_format(time_base_format);
time_format=(time_format instanceof DateTimePattern)?time_format.pattern:time_format;
time_format=time_format.replace(/ss/,'ss_TTT','g');
time_format=locale.time_formats[time_base_format+'-microsecond']=parse_datetime_pattern(time_format);}
return format_time(time,time_format);}
function locale_name(){
return _i18n_locale.locale_name;}
function locale_uses_12h(){
time_format=get_time_format('medium');
return time_format.format.indexOf('%(a)')!=-1;}
function locale_uses_day_before_month(){
time_format=get_date_format("short");
var formatStr=time_format.format.toLowerCase();
if(formatStr.indexOf('%(d)')>-1&&formatStr.indexOf('%(m)')>-1){
return(formatStr.indexOf('%(d)')<formatStr.indexOf('%(m)'));}
return false;}
function Time(hour,minute,second,microsecond){
if(_i18n_locale.locale_name=='en_DEBUG'){
this.hour=11;
this.minute=22;
this.second=33;
this.microsecond=123000;}else{
this.hour=hour;
this.minute=minute;
this.second=second;
this.microsecond=microsecond?microsecond:0;}}
function DateTime(date){
if(date instanceof DateTime)
return date;
if(_i18n_locale.locale_name=='en_DEBUG')
date=new Date(3333,10,22,11,22,33,123);
if(date instanceof Date){
this.date=date;
this.hour=date.getHours();
this.minute=date.getMinutes();
this.second=date.getSeconds();
this.microsecond=0;
this.year=date.getFullYear();
this.month=date.getMonth()+1;
this.day=date.getDate();}else{
for(var k in date){
this[k]=date[k];}}}
DateTime.prototype.weekday=function(){
var d=this.date.getDay()-1;
if(d<0)d=6;
return d;}
function parse_number_pattern(pattern){
var PREFIX_END='[^0-9@#.,]';
var NUMBER_TOKEN='[0-9@#.,E+\-]';
var PREFIX_PATTERN="((?:'[^']*'|"+PREFIX_END+")*)";
var NUMBER_PATTERN="("+NUMBER_TOKEN+"+)";
var SUFFIX_PATTERN="(.*)";
var number_re=new RegExp(PREFIX_PATTERN+NUMBER_PATTERN+SUFFIX_PATTERN);
if(pattern instanceof NumberPattern){
return pattern;}
var neg_pattern,pos_suffix,pos_prefix,neg_prefix,neg_suffix,num,exp,dum,sp;
if(pattern.indexOf(';')!==-1){
sp=pattern.split(';',2);
pattern=sp[0];neg_pattern=sp[1];
sp=pattern.match(number_re).slice(1);
pos_prefix=sp[0];num=sp[1];pos_suffix=sp[2];
sp=neg_pattern.match(number_re).slice(1);
neg_prefix=sp[0];neg_suffix=[2];}else{
sp=pattern.match(number_re).slice(1);
pos_prefix=sp[0];num=sp[1];pos_suffix=sp[2];
neg_prefix='-'+pos_prefix;
neg_suffix=pos_suffix;}
if(num.indexOf('E')!==-1){
sp=num.split('E',2);
num=sp[0];exp=sp[1];}else{
exp=null;}
if(num.indexOf('@')!==-1){
if(num.indexOf('.')!==-1&&num.indexOf('0')!==-1)
return alert('Significant digit patterns can not contain "@" or "0"')}
var integer,fraction;
if(num.indexOf('.')!==-1){
sp=num.rsplit('.',2);
integer=sp[0];fraction=sp[1];}else{
integer=num;
fraction='';}
var min_frac=0,max_frac=0;
function parse_precision(p){
var min=0;var max=0;
for(var i=0;i<p.length;i++){
var c=p.substr(i,1);
if('@0'.indexOf(c)!==-1){
min+=1
max+=1}else if(c=='#'){
max+=1}else if(c==','){
continue;}else{
break;}}
return[min,max];}
function parse_grouping(p){
var width=p.length;
var g1=p.lastIndexOf(',');
if(g1==-1)
return[1000,1000];
g1=width-g1-1;
var g2=p.substr(0,p.length-g1-1).lastIndexOf(',');
if(g2==-1)
return[g1,g1];
g2=width-g1-g2-2;
return[g1,g2];}
var int_prec=parse_precision(integer);
var frac_prec=parse_precision(fraction);
var exp_plus;
var exp_prec;
if(exp){
frac_prec=parse_precision(integer+fraction);
exp_plus=exp.substr(0,1)=='+';
exp=exp.replace(/^\++/,'');
exp_prec=parse_precision(exp);}else{
exp_plus=null;
exp_prec=null;}
var grouping=parse_grouping(integer);
return new NumberPattern(pattern,[pos_prefix,neg_prefix],
[pos_suffix,neg_suffix],grouping,
int_prec,frac_prec,
exp_prec,exp_plus);}
function NumberPattern(pattern,prefix,suffix,grouping,int_prec,frac_prec,exp_prec,exp_plus){
this.pattern=pattern;
this.prefix=prefix;
this.suffix=suffix;
this.grouping=grouping;
this.int_prec=int_prec;
this.frac_prec=frac_prec;
this.exp_prec=exp_prec;
this.exp_plus=exp_plus;
if((this.prefix+this.suffix).indexOf('%')!==-1)
this.scale=100;
else if((this.prefix+this.suffix).indexOf('\u2030')!==-1)
this.scale=1000;
else
this.scale=1;}
(function(){
split_number=function(value){
var a,b,sp;
value=''+value;
if(value.indexOf('.')!==-1){
sp=(''+value).split('.');
a=sp[0];b=sp[1];
if(b=='0')
b='';}else{
a=value;
b='';}
return[a,b];};
bankersround=function(value,ndigits){
var a,b;
if(!ndigits)
ndigits=0;
var sign=value<0?-1:1;
value=Math.abs(value);
var sp=split_number(value);
a=sp[0];b=sp[1];
var digits=a+b;
var add=0;
var i=a.length+ndigits;
if(i<0||i>=digits.length){
add=0;}else if(digits.substr(i,1)>'5'){
add=1;}else if(digits.substr(i,1)=='5'&&'13579'.indexOf(digits[i-1])!==-1){
add=1;}
var scale=Math.pow(10,ndigits);
return parseInt(value*scale+add,10)/scale*sign;};
NumberPattern.prototype.apply=function(value,locale){
if(!locale)
locale=_i18n_locale;
value*=this.scale;
var is_negative=value<0?1:0;
if(this.exp_prec){
value=Math.abs(value);
var exp;
if(value)
exp=Math.floor(Math.log(value)/Math.log(10));
else
exp=0;
if(this.int_prec[0]==this.int_prec[1])
exp-=this.int_prec[0]-1;
else if(this.int_prec[1])
exp=parseInt(exp,10)/this.int_prec[1]*this.int_prec[1];
if(exp<0)
value=value*Math.pow(10,-exp);
else
value=value/Math.pow(10,exp);
var exp_sign='';
if(exp<0)
exp_sign=locale.minus_sign;
else if(this.exp_plus)
exp_sign=locale.plus_sign;
exp=Math.abs(exp);
var num=''+
this._format_sigdig(value,this.frac_prec[0],this.frac_prec[1])
+locale.exp_symbol
+exp_sign
+this._format_int(''+exp,this.exp_prec[0],this.exp_prec[1],locale);}else if(this.pattern.indexOf('@')!==-1){
var text=this._format_sigdig(Math.abs(value),this.int_prec[0],this.int_prec[1]);
if(text.indexOf('.')!==-1){
var a,b;
var sp=text.split('.');
a=sp[0];b=sp[1];
a=this._format_int(a,0,1000,locale);
if(b)
b=locale.decimal_symbol+b;
num=a+b;}else{
num=this._format_int(text,0,1000,locale);}}else{
var c,d;
var cd_sp=split_number(bankersround(Math.abs(value),this.frac_prec[1]));
c=cd_sp[0];d=cd_sp[1];
d=d||'0';
c=this._format_int(c,this.int_prec[0],this.int_prec[1],locale);
d=this._format_frac(d,locale);
num=c+d;}
retval=''+this.prefix[is_negative]+num+this.suffix[is_negative];
return retval;};
NumberPattern.prototype._format_sigdig=function(value,min,max){
var a,b;
var sp=split_number(value);
a=sp[0];b=sp[1];
var ndecimals=a.length;
if(a=='0'&&b!=''){
ndecimals=0;
while(b[0]=='0'){
b=b.substr(1);
ndecimals-=1;}}
sp=split_number(bankersround(value,max-ndecimals));
a=sp[0];b=sp[1];
var digits=((a+b).replace(/^0+/,'')).length;
if(!digits)
digits=1
if(a.length>=max&&a!='0')
return a
if(digits<min)
b+=('0'.repeat(min-digits));
if(b)
return a+'.'+b;
return a};
NumberPattern.prototype._format_int=function(value,min,max,locale){
var width=value.length;
if(width<min)
value='0'.repeat(min-width)+value;
var gsize=this.grouping[0];
var ret='';
var symbol=locale.group_symbol;
while(value.length>gsize){
ret=symbol+value.substr(value.length-gsize)+ret;
value=value.substr(0,value.length-gsize);
gsize=this.grouping[1];}
return value+ret;};
NumberPattern.prototype._format_frac=function(value,locale){
var min=this.frac_prec[0];
var max=this.frac_prec[1];
if(value.length<min)
value+='0'.repeat(min-value.length);
if(max==0||(min==0&&parseInt(value,10)==0))
return'';
var width=value.length;
while(value.length>min&&value.substr(value.length-1)=='0')
value=value.substr(0,value.length-1);
return locale.decimal_symbol+value;};})();
function get_period_names(locale){
if(!locale)
locale=_i18n_locale;
return locale.periods;}
function get_day_names(width,context,locale){
if(!width)
width='wide';
if(!context)
context='format';
if(!locale)
locale=_i18n_locale;
return locale.days[context][width];}
function get_month_names(width,context,locale){
if(!width)
width='wide';
if(!context)
context='format';
if(!locale)
locale=_i18n_locale;
return locale.months[context][width];}
function get_quarter_names(width,context,locale){
if(!width)
width='wide';
if(!context)
context='format';
if(!locale)
locale=_i18n_locale;
return locale.quarters[context][width];}
function get_erar_names(width,locale){
if(!width)
width='wide';
if(!locale)
locale=_i18n_locale;
return locale.eras[width];}
function get_date_format(format,locale){
if(!format)
format='medium';
if(!locale)
locale=_i18n_locale;
var dtp=locale.date_formats[format];
return new DateTimePattern(dtp.pattern,dtp.format);}
function get_datetime_format(format,locale){
if(!format)
format='medium';
if(!locale)
locale=_i18n_locale;
if(locale.datetime_formats[format]==undefined)
return locale.datetime_formats[null];
return locale.datetime_formats[format];}
function get_time_format(format,locale){
if(!format)
format='medium';
if(!locale)
locale=_i18n_locale;
var dtp=locale.time_formats[format];
return new DateTimePattern(dtp.pattern,dtp.format);}
var PATTERN_CHARS={'G':[1,2,3,4,5],'y':null,'Y':null,'u':null,'Q':[1,2,3,4],'q':[1,2,3,4],'M':[1,2,3,4,5],'L':[1,2,3,4,5],'w':[1,2],'W':[1],'d':[1,2],'D':[1,2,3],'F':[1],'g':null,'E':[1,2,3,4,5],'e':[1,2,3,4,5],'c':[1,3,4,5],'a':[1],'h':[1,2],'H':[1,2],'K':[1,2],'k':[1,2],'m':[1,2],'s':[1,2],'S':null,'A':null,'T':null,'z':[1,2,3,4],'Z':[1,2,3,4],'v':[1,4],'V':[1,4],'_':[1]}
function parse_datetime_pattern(pattern){
if(pattern instanceof DateTimePattern)
return pattern;
var result=[];
var quotebuf=null;
var charbuf=[];
var fieldchar=[''];
var fieldnum=[0];
function append_chars(){
result.push(charbuf.join('').replace('%','%%'));
charbuf=[];}
function append_field(){
var limit=PATTERN_CHARS[fieldchar[0]];
if(limit&&limit.indexOf(fieldnum[0])==-1){
return alert('Invalid length for field: '+fieldchar[0].repeat(fieldnum[0]));}
result.push('%('+(fieldchar[0].repeat(fieldnum[0]))+')s');
fieldchar[0]='';
fieldnum[0]=0;}
var patterntmp=pattern.replace("''",'\0');
for(var idx=0;idx<patterntmp.length;idx++){
var ch=patterntmp.substr(idx,1);
if(quotebuf===null){
if(ch=="'"){
if(fieldchar[0]){
append_field();}else if(charbuf){
append_chars();}
quotebuf=[];}else if(ch in PATTERN_CHARS){
if(charbuf){
append_chars();}
if(ch==fieldchar[0]){
fieldnum[0]+=1;}else{
if(fieldchar[0]){
append_field();}
fieldchar[0]=ch;
fieldnum[0]=1;}}else{
if(fieldchar[0]){
append_field();}
charbuf.push(ch);}}else if(quotebuf!=null){
if(ch=="'"){
charbuf.extend(quotebuf);
quotebuf=null;}else{
quotebuf.append(ch);}}}
if(fieldchar[0]){
append_field();}else if(charbuf){
append_chars();}
return new DateTimePattern(pattern,result.join('').replace('\0',"'"));}
function DateTimePattern(pattern,format){
this.pattern=pattern;
this.format=format;}
DateTimePattern.prototype.apply=function(datetime,locale){
return sprintf(this.format,new DateTimeFormat(datetime,locale));}
function DateTimeFormat(value,locale){
this.value=value;
this.locale=locale;}
DateTimeFormat.prototype.__getitem__=function(name){
var ch=name.substr(0,1);
var num=name.length;
switch(ch){
case'G':
return this.format_era(ch,num);
case'y':
case'Y':
case'u':
return this.format_year(ch,num);
case'q':
case'Q':
return this.format_quarter(ch,num);
case'M':
case'L':
return this.format_month(ch,num);
case'w':
case'W':
return this.format_week(ch,num);
case'd':
return this.format(this.value.day,num);
case'D':
return this.format_day_of_year(num);
case'F':
return this.format_day_of_week_in_month();
case'E':
case'e':
case'c':
return this.format_weekday(ch,num);
case'a':
return this.format_period(ch);
case'h':
if(this.value.hour%12==0)
return this.format(12,num);
else
return this.format(this.value.hour%12,num);
case'H':
return this.format(this.value.hour,num);
case'K':
return this.format(this.value.hour%12,num);
case'k':
if(this.value.hour==0)
return this.format(24,num);
else
return this.format(this.value.hour,num);
case'm':
return this.format(this.value.minute,num);
case's':
return this.format(this.value.second,num);
case'S':
return this.format_frac_seconds(num);
case'T':
return this.format_decimal_frac_seconds(num);
case'A':
return this.format_milliseconds_in_day(num);
case'z':
case'Z':
case'v':
case'V':
return this.format_timezone(ch,num);
case'_':
return this.locale.decimal_symbol;
default:
return alert('Unsupported date/time field '+ch);}}
DateTimeFormat.prototype.format_era=function(ch,num){
var width={3:'abbreviated',4:'wide',5:'narrow'}[max(3,num)]
var era=this.value.year>=0?1:0;
return get_era_names(width,this.locale)[era];}
DateTimeFormat.prototype.format_year=function(ch,num){
var value=this.value.year;
if(ch==ch.toUpperCase()){
var week=this.get_week_number(this.get_day_of_year());
if(week==0)
value-=1;}
var year=this.format(value,num);
if(num==2)
year=year.substr(year.length-2);
return year;}
DateTimeFormat.prototype.format_quarter=function(ch,num){
var quarter=Math.floor((this.value.month-1)/3+1);
if(num<=2)
return sprintf(sprintf('%%0%dd',num),quarter);
var width={3:'abbreviated',4:'wide',5:'narrow'}[num];
var context={'Q':'format','q':'stand-alone'}[ch];
return get_quarter_names(width,context,this.locale)[quarter];}
DateTimeFormat.prototype.format_month=function(ch,num){
if(num<=2)
return sprintf(sprintf('%%0%dd',num),this.value.month);
var width={3:'abbreviated',4:'wide',5:'narrow'}[num];
var context={'M':'format','L':'stand-alone'}[ch];
return get_month_names(width,context,this.locale)[this.value.month];}
DateTimeFormat.prototype.format_week=function(ch,num){
if(ch==ch.toLowerCase()){
var day_of_year=this.get_day_of_year();
var week=this.get_week_number(day_of_year);
if(week==0){
var date=this.value-timedelta(days=day_of_year);
week=this.get_week_number(this.get_day_of_year(date),date.weekday());}
return this.format(week,num);}else{
var mon_week=this.get_week_number(this.value.day);
if(mon_week==0){
var mon_date=this.value-timedelta(days=this.value.day);
mon_week=this.get_week_number(mon_date.day,mon_date.weekday());}
return mon_week;}}
DateTimeFormat.prototype.format_weekday=function(ch,num){
if(num<3){
if(ch==ch.toLowerCase()){
var value=7-this.locale.first_week_day+this.value.weekday();
return this.format(value%7+1,num);}
num=3;}
var weekday=this.value.weekday();
var width={3:'abbreviated',4:'wide',5:'narrow'}[num];
var context={3:'format',4:'format',5:'stand-alone'}[num];
return get_day_names(width,context,this.locale)[weekday];}
DateTimeFormat.prototype.format_day_of_year=function(num){
return this.format(this.get_day_of_year(),num);}
DateTimeFormat.prototype.format_day_of_week_in_month=function(){
return((this.value.day-1)/7+1);}
DateTimeFormat.prototype.format_period=function(ch){
var period={0:'am',1:'pm'}[this.value.hour>=12?1:0];
return get_period_names(this.locale)[period];}
DateTimeFormat.prototype.format_frac_seconds=function(num){
var value=this.value.microsecond;
return this.format(parseFloat('0.'+value)*Math.pow(10,num),num);}
DateTimeFormat.prototype.format_decimal_frac_seconds=function(num){
return this.format(this.value.microsecond,6).substr(0,num);}
DateTimeFormat.prototype.format_milliseconds_in_day=function(num){
var msecs=Math.floor(this.value.microsecond/1000)+this.value.second*1000+this.value.minute*60000+this.value.hour*3600000;
return this.format(msecs,num);}
DateTimeFormat.prototype.format_timezone=function(ch,num){
return'';}
DateTimeFormat.prototype.format=function(value,length){
return sprintf(sprintf('%%0%dd',length),value);}
DateTimeFormat.prototype.get_day_of_year=function(date){
if(date==undefined)
date=this.value;
var yearstart=new Date(date.year,0,1);
return Math.ceil((date.date-yearstart)/86400000)+1;}
DateTimeFormat.prototype.get_week_number=function(day_of_period,day_of_week){
if(day_of_week==undefined)
day_of_week=this.value.weekday();
var first_day=(day_of_week-this.locale.first_week_day-day_of_period+1)%7;
if(first_day<0)
first_day+=7;
var week_number=(day_of_period+first_day-1)/7;
if(7-first_day>=this.locale.min_week_days)
week_number+=1;
return week_number;}
var _i18n_catalog={};
var _i18n_plural=undefined;
function i18n_register(catalog){
_i18n_plural=catalog['plural'];
for(var k in catalog['catalog']){
_i18n_catalog[k]=catalog['catalog'][k];}}
function BaseTimeRangeFormatter(){
this.DATE_METHODS=[
{name:"year",getter:"getFullYear",setter:"setFullYear",minValue:"1974"},
{name:"month",getter:"getMonth",setter:"setMonth",minValue:"0"},
{name:"day",getter:"getDate",setter:"setDate",minValue:"1"},
{name:"hour",getter:"getHours",setter:"setHours",minValue:"0"},
{name:"minute",getter:"getMinutes",setter:"setMinutes",minValue:"0"},
{name:"second",getter:"getSeconds",setter:"setSeconds",minValue:"0"},
{name:"millisecond",getter:"getMilliseconds",setter:"setMilliseconds",minValue:"0"}];}
BaseTimeRangeFormatter.prototype.get_summary_data=function(absEarliest,absLatest){
var differAtLevel=this.get_differing_level(absEarliest,absLatest);
var valuesDifferAt=(differAtLevel<this.DATE_METHODS.length)?this.DATE_METHODS[differAtLevel].name:false;
var rangeIsSingleUnitOf=false;
var rangeIsIntegerUnitsOf=false;
if(differAtLevel>=this.DATE_METHODS.length){
return{"rangeIsSingleUnitOf":false,"rangeIsIntegerUnitsOf":false,"valuesDifferAt":false,"valuesHighestNonMinimalAt":false}}
var methodDict=this.DATE_METHODS[differAtLevel];
var earliestCopy;
var highestNonMinimalLevel=this.get_highest_non_minimal_level(absEarliest,absLatest);
var valuesHighestNonMinimalAt=(highestNonMinimalLevel<this.DATE_METHODS.length)?this.DATE_METHODS[highestNonMinimalLevel].name:false;
if(highestNonMinimalLevel==differAtLevel){
rangeIsIntegerUnitsOf=valuesDifferAt;}else if(highestNonMinimalLevel==differAtLevel+1){
if(absLatest.getFullYear()=="2009"){
methodDictInner=this.DATE_METHODS[highestNonMinimalLevel];
earliestCopy=new Date();
earliestCopy.setTime(absEarliest.valueOf());
earliestCopy[methodDictInner.setter](earliestCopy[methodDictInner.getter]()+1);
if(earliestCopy.getTime()==absLatest.getTime()){
rangeIsSingleUnitOf=rangeIsIntegerUnitsOf=this.DATE_METHODS[highestNonMinimalLevel].name;}}}
if(rangeIsIntegerUnitsOf&&!rangeIsSingleUnitOf){
earliestCopy=new Date();
earliestCopy.setTime(absEarliest.valueOf());
if(rangeIsIntegerUnitsOf=="hour"){
earliestCopy.setTime(earliestCopy.valueOf()+3600000);}else{
earliestCopy[methodDict.setter](earliestCopy[methodDict.getter]()+1);}
if(earliestCopy.getTime()==absLatest.getTime()){
rangeIsSingleUnitOf=this.DATE_METHODS[differAtLevel].name;}}
return{"rangeIsSingleUnitOf":rangeIsSingleUnitOf,"rangeIsIntegerUnitsOf":rangeIsIntegerUnitsOf,"valuesDifferAt":valuesDifferAt,"valuesHighestNonMinimalAt":valuesHighestNonMinimalAt}}
BaseTimeRangeFormatter.prototype.get_highest_non_minimal_level=function(absEarliest,absLatest){
for(var i=this.DATE_METHODS.length-1;i>=0;i--){
var methodDict=this.DATE_METHODS[i];
var name=methodDict.name;
var minValue=methodDict.minValue;
var earliestValue=absEarliest[methodDict["getter"]]();
var latestValue=absLatest[methodDict["getter"]]();
if(earliestValue!=minValue||latestValue!=minValue){
return i;}}}
BaseTimeRangeFormatter.prototype.get_differing_level=function(absEarliest,absLatest){
var differAtLevel=0;
for(var i=0;i<this.DATE_METHODS.length;i++){
var methodDict=this.DATE_METHODS[i];
var name=methodDict.name;
var earliestValue=absEarliest[methodDict["getter"]]();
var latestValue=absLatest[methodDict["getter"]]();
if(earliestValue==latestValue){
differAtLevel=i+1;}else break;}
return differAtLevel;}
BaseTimeRangeFormatter.prototype.format_range=function(earliestTime,latestTime){
var argsDict;
if(earliestTime&&!latestTime){
argsDict={
startDateTime:format_datetime(earliestTime,'medium')}
return sprintf(_("since %(startDateTime)s"),argsDict);}
if(!earliestTime&&latestTime){
argsDict={
endDateTime:format_datetime(latestTime,'medium')}
return sprintf(_("before %(endDateTime)s"),argsDict);}
var summary=this.get_summary_data(earliestTime,latestTime);
switch(summary["rangeIsSingleUnitOf"]){
case"day":
return format_date(earliestTime,"medium");
case"second":
return format_datetime(earliestTime,"medium");
default:
break;}
var argDict;
if(format_date(earliestTime,"medium")==format_date(latestTime,"medium")){
argDict={
date:format_date(earliestTime,"medium"),
start:format_time(earliestTime,'medium'),
end:format_time(latestTime,'medium')}
return sprintf(_("%(date)s from %(start)s to %(end)s"),argDict);}
argDict={
start:format_datetime(earliestTime,'medium'),
end:format_datetime(latestTime,'medium')}
return sprintf(_("from %(start)s to %(end)s"),argDict)}
function EnglishRangeFormatter(use24HourClock,useEuropeanDateAndMonth){
this.use24HourClock=use24HourClock||false;
this.useEuropeanDateAndMonth=useEuropeanDateAndMonth||false;}
EnglishRangeFormatter.prototype=new BaseTimeRangeFormatter();
EnglishRangeFormatter.prototype.constructor=EnglishRangeFormatter;
EnglishRangeFormatter.superClass=BaseTimeRangeFormatter.prototype;
EnglishRangeFormatter.prototype.get_format_strings=function(summary){
switch(summary["rangeIsSingleUnitOf"]){
case"year":
return{"earliest":"during %Y"}
case"month":
return{"earliest":"during %B %Y"};
case"day":
return{"earliest":"during %A, %B %e, %Y"};
case"hour":
return{"earliest":"at %l %p on %A, %B %e, %Y"};
case"minute":
return{"earliest":"at %l:%M %p %A, %B %e, %Y"};
case"second":
return{"earliest":"at %l:%M:%S %p on %A, %B %e, %Y"};
default:
switch(summary["rangeIsIntegerUnitsOf"]){
case"year":
return{"earliest":"from %Y","latest":" through %Y"}
case"month":
return{"earliest":"from %B","latest":" through %B, %Y"}
case"day":
return{"earliest":"from %B %e","latest":" through %B %e, %Y"}
case"hour":
return{"earliest":"from %l %p","latest":" to %l %p %A, %B %e, %Y"}
case"minute":
return{"earliest":"from %l:%M %p","latest":" to %l:%M %p on %A, %B %e, %Y"}
case"millisecond":
return{"earliest":"from %l:%M:%S.%Q %p","latest":" to %l:%M:%S.%Q %p on %A, %B %e, %Y"}
default:
switch(summary["valuesDifferAt"]){
case"month":
case"day":
if(summary["valuesHighestNonMinimalAt"]=="millisecond"){
return{"earliest":"from %l:%M:%S.%Q %p %B %e to ","latest":"%l:%M:%S.%Q %p %B %e, %Y"};}
return{"earliest":"from %l:%M:%S %p %B %e to ","latest":"%l:%M:%S %p %B %e, %Y"};
case"hour":
case"minute":
case"second":
if(summary["valuesHighestNonMinimalAt"]=="millisecond"){
return{"earliest":"from %l:%M:%S.%Q %p to ","latest":"%l:%M:%S.%Q %p on %A, %B %e, %Y"};}
return{"earliest":"from %l:%M:%S %p to ","latest":"%l:%M:%S %p on %A, %B %e, %Y"};
default:
if(summary["valuesHighestNonMinimalAt"]=="millisecond"){
return{"earliest":"from %l:%M:%S.%Q %p %B %e, %Y to ","latest":"%l:%M:%S.%Q %p %B %e, %Y"};}
return{"earliest":"from %l:%M:%S %p %B %e, %Y to ","latest":"%l:%M:%S %p %B %e, %Y"};}}}};
EnglishRangeFormatter.prototype.applyCustomOptions=function(timeFormatStr){
if(this.use24HourClock){
timeFormatStr=timeFormatStr.replace(/%l %p/g,"%H:00");
timeFormatStr=timeFormatStr.replace(/ %p/g,"");
timeFormatStr=timeFormatStr.replace(/%l/g,"%H");}
if(this.useEuropeanDateAndMonth){
timeFormatStr=timeFormatStr.replace(/%B %e/g,"%e %B");}
return timeFormatStr;};
EnglishRangeFormatter.prototype.format_range=function(earliestTime,latestTime){
if(earliestTime&&!latestTime){
return earliestTime.strftime(this.applyCustomOptions("since %l:%M:%S %p %B %e, %Y"));}
else if(!earliestTime&&latestTime){
return latestTime.strftime(this.applyCustomOptions("before %l:%M:%S %p %B %e, %Y"));}
if(!earliestTime||!latestTime)throw("Assertion failed. format_range expected defined values for both earliest and latest, but one or more was undefined.");
var summary=this.get_summary_data(earliestTime,latestTime);
var formatStrings=this.get_format_strings(summary);
if(summary["rangeIsIntegerUnitsOf"]&&(summary["rangeIsIntegerUnitsOf"]=="year"||
summary["rangeIsIntegerUnitsOf"]=="month"||summary["rangeIsIntegerUnitsOf"]=="day")){
latestTime.setDate(latestTime.getDate()-1);}
if(formatStrings["latest"]){
return earliestTime.strftime(this.applyCustomOptions(formatStrings["earliest"]))+latestTime.strftime(this.applyCustomOptions(formatStrings["latest"]));}
return earliestTime.strftime(this.applyCustomOptions(formatStrings["earliest"]));}
function format_datetime_range(locale,earliestTime,latestTime){
var f=null;
var use24HourClock=!locale_uses_12h();
var useEuropeanDateAndMonth=locale_uses_day_before_month();
if(Splunk.util.trim(locale).indexOf("en-")==0){
f=new EnglishRangeFormatter(use24HourClock,useEuropeanDateAndMonth);}else{
f=new BaseTimeRangeFormatter();}
return f.format_range(earliestTime,latestTime);}
i18n_register({"catalog":{"+-before %(endDateTime)s":"before %(endDateTime)s","+-since %(startDateTime)s":"since %(startDateTime)s","+-from %(start)s to %(end)s":"from %(start)s to %(end)s","+-%(date)s from %(start)s to %(end)s":"%(date)s from %(start)s to %(end)s"},"plural":function(n){return n==1?0:1;}});i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});if(typeof Splunk=="undefined"||!Splunk){
var Splunk={};}
Splunk.namespace=function(name){
var parts=name.split(".");
var obj=Splunk;
for(var i=(parts[0]=="Splunk")?1:0;i<parts.length;i=i+1){
obj[parts[i]]=obj[parts[i]]||{};
obj=obj[parts[i]];}
return obj;};;Splunk.namespace("util");
Splunk.util={
logger:{"info":function(){},"log":function(){},"debug":function(){},"warn":function(){},"error":function(){}},
propToQueryString:function(dictionary){
var o=[];
var val;
for(var prop in dictionary){
val=''+dictionary[prop];
o.push(encodeURIComponent(prop)+'='+encodeURIComponent(dictionary[prop]));}
return o.join('&');},
queryStringToProp:function(args){
args=this.trim(args,'&\?#');
var parts=args.split('&');
var output={};
var key;
var value;
var equalsSegments;
var lim=parts.length;
for(var i=0,l=lim;i<l;i++){
equalsSegments=parts[i].split('=');
key=decodeURIComponent(equalsSegments.shift());
value=equalsSegments.join("=");
output[key]=decodeURIComponent(value);}
return output;},
getHash:function(){
var hashPos=window.location.href.indexOf('#');
if(hashPos==-1){
return"";}
var qPos=window.location.href.indexOf('?',hashPos);
if(qPos!=-1)
return window.location.href.substr(qPos);
return window.location.href.substr(hashPos);},
parseDate:function(str,fmt){
if((!str)||(!str.indexOf)||(str.indexOf("mm")==0))return null;
var y=0;
var m=-1;
var d=0;
var a=str.split(/\W+/);
var b=fmt.match(/%./g);
var i=0,j=0;
var hr=0;
var min=0;
var sec=0;
for(i=0;i<a.length;++i){
if(!a[i])
continue;
switch(b[i]){
case"%d":
d=parseInt(a[i],10);
break;
case"%m":
m=parseInt(a[i],10)-1;
break;
case"%Y":
case"%y":
y=parseInt(a[i],10);
(y<100)&&(y+=(y>29)?1900:2000);
break;
case"%H":
hr=parseInt(a[i],10);
break;
case"%M":
min=parseInt(a[i],10);
break;
case"%S":
sec=parseInt(a[i],10);
break;
default:
break;}}
if(y!=0&&m!=-1&&d!=0){
var ourDate=new Date(y,m,d,hr,min,sec);
return ourDate;}else{
return false;}},
getTimezoneOffsetDelta:function(serverOffsetThen,d){
if(!Splunk.util.isInt(serverOffsetThen)){
return 0;}
var clientOffsetThen=d.getTimezoneOffset()*60;
serverOffsetThen=serverOffsetThen*-60;
return 1000*(serverOffsetThen-clientOffsetThen);},
getEpochTimeFromISO:function(isoStr){
if(!this._isoTimeRegex){
this._isoTimeRegex=/([\+\-])?(\d{4,})(?:(?:\-(\d{2}))(?:(?:\-(\d{2}))(?:(?:[T ](\d{2}))(?:(?:\:(\d{2}))(?:(?:\:(\d{2}(?:\.\d+)?)))?)?(?:(Z)|([\+\-])(\d{2})(?:\:(\d{2}))?)?)?)?)?/;}
var m=this._isoTimeRegex.exec(isoStr);
var seconds,milliseconds;
if(m[7]){
seconds=m[7].substring(0,2);
millisecondsStr=m[7].substring(2);}else{
millisecondsStr="";}
var offset=eval(m[9]+(60*m[10]+parseInt(m[11],10)));
var str=sprintf("%s/%s/%s %s:%s:%s",m[3],m[4],m[2],m[5],m[6],seconds);
var t=new Date(str);
t.setTime(t.getTime()+this.getTimezoneOffsetDelta(offset,t));
var startTime=t.getTime()/1000;
return startTime+millisecondsStr;},
getConfigValue:function(configKey,optionalDefault){
if(window.$C&&window.$C.hasOwnProperty(configKey))return window.$C[configKey];
else{
if(typeof optionalDefault!='undefined'){
return optionalDefault;}
throw new Error('getConfigValue - '+configKey+' not set, no default provided');}},
make_url:function(){
var output='',seg,len;
for(var i=0,l=arguments.length;i<l;i++){
seg=arguments[i].toString();
len=seg.length;
if(len>1&&seg.charAt(len-1)=='/'){
seg=seg.substring(0,len-1);}
if(seg.charAt(0)!='/'){
output+='/'+seg;}else{
output+=seg;}}
if(output!='/'){
var segments=output.split('/');
var firstseg=segments[1];
if(firstseg=='static'||firstseg=='modules'){
var postfix=output.substring(firstseg.length+2,output.length);
output='/'+firstseg+'/@'+window.$C['BUILD_NUMBER'];
if(window.$C['BUILD_PUSH_NUMBER'])output+='.'+window.$C['BUILD_PUSH_NUMBER'];
if(segments[2]=='app')
output+=':'+this.getConfigValue('APP_BUILD',0);
output+='/'+postfix;}}
var root=Splunk.util.getConfigValue('MRSPARKLE_ROOT_PATH','/');
var locale=Splunk.util.getConfigValue('LOCALE','en-US');
if(root==''||root=='/'){
return'/'+locale+output;}else{
return root+'/'+locale+output;}},
make_full_url:function(url,options){
url=this.make_url(url);
if(options)url=url+'?'+this.propToQueryString(options);
return url;},
redirect_to:function(uri,options,windowObj,focus){
uri=this.make_full_url(uri,options);
if(!windowObj)windowObj=window;
windowObj.document.location=uri;
if(focus&&windowObj.focus)windowObj.focus();
return;},
getCurrentApp:function(){
return $(document.body).attr("s:app")||'UNKNOWN_APP';},
getCurrentView:function(){
return $(document.body).attr("s:view")||'UNKNOWN_VIEW';},
getCurrentDisplayView:function(){
return $(document.body).attr("s:displayview")||this.getCurrentView();},
getAutoCancelInterval:function(){
var interval=$(document.body).attr("s:autoCancelInterval");
if(!interval){
this.logger.error("no autoCancelInterval found. Returning 0");
interval=0;}
return interval;},
getCurrentViewConfig:function(){
return $.extend({},Splunk.ViewConfig);},
getPath:function(path){
if(path===undefined){
path=document.location.pathname;}
var locale=this.getConfigValue('LOCALE').toString();
if(!this.getConfigValue('LOCALE')||path.indexOf(locale)==-1){
return path;}
var start=locale.length+path.indexOf(locale);
return path.slice(start);},
getCumlativeOffsetTop:function(element){
if(!element)return 0;
return element.offsetTop+this.getCumlativeOffsetTop(element.offsetParent);},
getCumlativeOffsetLeft:function(element){
if(!element)return 0;
return element.offsetLeft+this.getCumlativeOffsetLeft(element.offsetParent);},
getPageYOffset:function(){
var pageYOffset=0;
if(window.pageYOffset){
pageYOffset=window.pageYOffset;}else if(document.documentElement&&document.documentElement.scrollTop){
pageYOffset=document.documentElement.scrollTop;}
return pageYOffset;},
getWindowDimensions:function(){
return{
width:(!isNaN(window.innerWidth))?window.innerWidth:document.documentElement.clientWidth||0,
height:(!isNaN(window.innerHeight))?window.innerHeight:document.documentElement.clientHeight||0};},
getComputedStyleHelper:function(el,styleProperty){
if(el.currentStyle){
return el.currentStyle[styleProperty];}else if(window.getComputedStyle){
var cssProperty=styleProperty.replace(/([A-Z])/g,"-$1").toLowerCase();
var computedStyle=window.getComputedStyle(el,"");
return computedStyle.getPropertyValue(cssProperty);}else{
return"";}},
getParameter:function(p,s){
s=s||window.location.search;
if(!s){
return null;}
if(!(s.indexOf(p+'=')+1)){
return null;}
return s.split(p+'=')[1].split('&')[0];},
getHEX:function(rgb){
var parts=rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
var hex=(parts[1]<<16|parts[2]<<8|parts[3]).toString(16);
return"#"+Array(6-hex.length).concat([hex]).toString().replace(/,/g,0);},
normalizeColor:function(color){
normalizedColor=null;
if(color.charAt(0)==="#"){
if(color.length===4){
normalizedColor=color+color.charAt(1)+color.charAt(2)+color.charAt(3);}else{
normalizedColor=color;}}else{
try{
normalizedColor=this.getHEX(color);}catch(e){}}
return normalizedColor;},
turboInnerHTML:function(target,innerHTML){
var targetClone=target.cloneNode(false);
targetClone.innerHTML=innerHTML;
target.parentNode.replaceChild(targetClone,target);
return targetClone;},
normalizeBoolean:function(test,strictMode){
if(typeof(test)=='string'){
test=test.toLowerCase();}
switch(test){
case true:
case 1:
case'1':
case'yes':
case'on':
case'true':
return true;
case false:
case 0:
case'0':
case'no':
case'off':
case'false':
return false;
default:
if(strictMode)throw TypeError("Unable to cast value into boolean: "+test);
return test;}},
getCommaFormattedNumber:function(nStr){
nStr+='';
var x=nStr.split('.');
var x1=x[0];
var x2=x.length>1?'.'+x[1]:'';
var rgx=/(\d+)(\d{3})/;
while(rgx.test(x1)){
x1=x1.replace(rgx,'$1'+','+'$2');}
return x1+x2;},
reLTrim:/^[\s\t\r\n]+/,
reLTrimCommand:/^[\s\t\r\n\|]+/,
reRNormalize:/[\s\t\r\n]+$/,
addLeadingSearchCommand:function(q,isUserEntered){
var workingQ=''+q;
workingQ=workingQ.replace(this.reLTrim,'').replace(this.reRNormalize,' ');
if(workingQ.substring(0,1)=='|'){
return q;}
if(!isUserEntered&&(workingQ.substring(0,7)=='search '&&workingQ.length>7))
{
return q;}
return'search '+workingQ;},
stripLeadingSearchCommand:function(q){
var workingQ=''+q;
workingQ=workingQ.replace(this.reLTrimCommand,'');
if(workingQ.substring(0,7)=='search '){
return workingQ.substring(7).replace(this.reLTrimCommand,'');}
return q;},
stringToFieldList:function(strList){
if(typeof(strList)!='string'||!strList)return[];
var items=[];
var field_name_buffer=[];
var inquote=false;
var str=$.trim(strList);
for(var i=0,j=str.length;i<j;i++){
if(str.charAt(i)=='\\'){
var nextidx=i+1;
if(j>nextidx&&(str.charAt(nextidx)=='\\'||str.charAt(nextidx)=='"')){
field_name_buffer.push(str.charAt(nextidx));
i++;
continue;}else{
field_name_buffer.push(str.charAt(i));
continue;}}
if(str.charAt(i)=='"'){
if(!inquote){
inquote=true;
continue;}else{
inquote=false;
items.push(field_name_buffer.join(''));
field_name_buffer=[];
continue;}}
if((str.charAt(i)==' '||str.charAt(i)==',')&&!inquote){
if(field_name_buffer.length>0){
items.push(field_name_buffer.join(''));}
field_name_buffer=[];
continue;}
field_name_buffer.push(str.charAt(i));}
if(field_name_buffer.length>0)items.push(field_name_buffer.join(''));
return items;},
_sflQuotable:/([\\",\s])/,
_sflEscapable:/([\\"])/g,
fieldListToString:function(fieldArray){
if(!fieldArray)return'';
var output=[];
for(var i=0,L=fieldArray.length;i<L;i++){
var v=$.trim(fieldArray[i]);
if(v!=''){
if(v.search(this._sflEscapable)>-1){
v=v.replace(this._sflEscapable,"\\$1");}
if(v.search(this._sflQuotable)>-1){
v=['"',v,'"'].join('');}
output.push(v);}}
return output.join(',');},
searchEscape:function(str){
if(!str.match(/[\s\,=|\[\]\"]/))
return str;
return'"'+str.replace(/(\"|\\)/g,"\\$1")+'"';},
objectSimilarity:function(obj1,obj2){
if(obj1 instanceof Array&&obj2 instanceof Array){
if(obj1.length!==obj2.length){
return false;}else{
for(var i=0;i<obj1.length;i++){
if(!this.objectSimilarity(obj1[i],obj2[i])){
return false;}}}}else if(obj1 instanceof Object&&obj2 instanceof Object){
if(obj1!=obj2){
for(var j in obj2){
if(!obj1.hasOwnProperty(j)){
return false;}}
for(var k in obj1){
if(obj1.hasOwnProperty(k)){
if(obj2.hasOwnProperty(k)){
if(!this.objectSimilarity(obj1[k],obj2[k])){
return false;}}else{
return false;}}}}}else if(typeof(obj1)==="function"&&typeof(obj2)==="function"){
if(obj1.toString()!==obj2.toString()){
return false;}}else if(obj1!==obj2){
return false;}
return true;},
StopWatch:function(){
var self=this,
startTime=null,
stopTime=null,
times=[];
var isSet=function(prop){
return(prop==null)?false:true;};
var isStarted=function(){
return isSet(startTime);};
var isStopped=function(){
return isSet(stopTime);};
var softReset=function(){
startTime=null;
stopTime=null;};
self.start=function(){
if(isStarted()){
throw new Error("cannot call start, start already invoked.");}
startTime=new Date();};
self.stop=function(){
if(!isStarted()){
throw new Error("cannot call stop, start not invoked.");}
if(isStopped()){
throw new Error("cannot call stop, stop already invoked.");}
stopTime=new Date();
time=stopTime-startTime;
times.push(time);};
self.pause=function(){
if(!isStarted()){
throw new Error("cannot call pause, start not invoked.");}
if(isStopped()){
throw new Error("cannot call pause, stop already invoked.");}
self.stop();
softReset();};
self.reset=function(){
softReset();
times=[];};
self.time=function(){
var total=0;
for(i=0;i<times.length;i++){
total+=times[i];}
if(isStarted()&&!isStopped()){
total+=(new Date()-startTime);}
return total/1000;};},
isInt:function(num){
return num!==''&&!isNaN(parseInt(num,10))&&parseInt(num,10)==(num/1);},
smartTrim:function(string,maxLength){
if(!string)return string;
if(maxLength<1)return string;
if(string.length<=maxLength)return string;
if(maxLength==1)return string.substring(0,1)+'...';
var midpoint=Math.ceil(string.length/2);
var toremove=string.length-maxLength;
var lstrip=Math.ceil(toremove/2);
var rstrip=toremove-lstrip;
return string.substring(0,midpoint-lstrip)+'...'+string.substring(midpoint+rstrip);},
_tokenDiscoverer:/\$([^$]+)\$/g,
discoverReplacementTokens:function(fragment){
var keys=[];
var tokenDiscoverer=Splunk.util._tokenDiscoverer;
var keysToAdd;
if(typeof fragment=='string'){
if(fragment.match(tokenDiscoverer)){
keysToAdd=fragment.match(tokenDiscoverer);
for(var i=0;i<keysToAdd.length;i++){
keysToAdd[i]=keysToAdd[i].substring(1,keysToAdd[i].length-1);}
return keysToAdd;}
return[];}
else if(typeof fragment=="function"){
return[];}
for(var key in fragment){
keysToAdd=[];
keysToAdd=Splunk.util.discoverReplacementTokens(fragment[key]);
var matchesInTheKeyItself=key.match(tokenDiscoverer)||[];
for(var j=0;j<matchesInTheKeyItself.length;j++){
keysToAdd.push(matchesInTheKeyItself[j].substring(1,matchesInTheKeyItself[j].length-1));}
for(var k=0;k<keysToAdd.length;k++){
if(keys.indexOf(keysToAdd[k])==-1){
keys.push(keysToAdd[k]);}}}
return keys;},
replaceTokens:function(fragment,reg,value){
if(typeof fragment=='string'){
if(fragment.match(reg)){
fragment=fragment.replace(reg,value);}
return fragment;}
else if(typeof fragment=="function"){
return fragment;}
var keysToRename={};
for(var key in fragment){
if(typeof fragment[key]=='object'){
Splunk.util.replaceTokens(fragment[key],reg,value);}
else if(typeof fragment[key]=='string'&&fragment[key].match(reg)){
fragment[key]=fragment[key].replace(reg,value);}
if(key.match(reg)){
keysToRename[key]=key.replace(reg,value);}}
for(oldKey in keysToRename){
var newKey=keysToRename[oldKey];
fragment[newKey]=fragment[oldKey];
delete(fragment[oldKey]);}
return fragment;},
getServerTimezoneOffset:function(){
return Splunk.util.getConfigValue('SERVER_TIMEZONE_OFFSET');},
moduleLoadStates:{
WAITING_FOR_INITIALIZATION:1,
WAITING_FOR_HIERARCHY:2,
WAITING_FOR_CONTEXT:6,
HAS_CONTEXT:7},
getRetryInterval:function(elapsed_time,min_interval,max_interval,clamp_time){
if(elapsed_time>=clamp_time)return parseFloat(max_interval);
return Math.min(max_interval*Math.pow(elapsed_time/parseFloat(clamp_time),3)+min_interval,max_interval);},
escapeHtml:function(input){
return(""+input).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&#39;');},
escapeBackslash:function(input){
return(""+input).replace(/\\/g,'\\\\');},
trim:function(str,delim){
if(delim)return str.replace(new RegExp("^[\\s"+delim+"]+"),'').replace(new RegExp("[\\s"+delim+"]+$"),'');
else return str.replace(/^\s\s*/,'').replace(/\s\s*$/,'');},
focusFirstField:function(popup){
var firstInput=$(":input:visible:enabled:first",popup),
firstSelect=$("select:visible:enabled:first",popup),
firstInputOffset=(firstInput.length)?firstInput.offset().top:false,
firstSelectOffset=(firstSelect.length)?firstSelect.offset().top:false,
firstElem=firstInput;
if(firstInputOffset&&firstSelectOffset){
if(firstSelectOffset<firstInputOffset){
firstElem=firstSelect;}}
firstElem.focus();}};
var $A=function(iterable){
if(!iterable)return[];
if(iterable.toArray){
return iterable.toArray();}else{
var results=[];
for(var i=0,length=iterable.length;i<length;i++)
results.push(iterable[i]);
return results;}};
Function.prototype.bind=function(){
var __method=this,args=$A(arguments),object=args.shift();
return function(){
return __method.apply(object,args.concat($A(arguments)));};};
if(!String.prototype.repeat){
String.prototype.repeat=function(count){
return new Array(count+1).join(this);};}
if(!String.prototype.reverse){
String.prototype.reverse=function(){
return this.split('').reverse().join('');};}
if(!String.prototype.rsplit){
String.prototype.rsplit=function(sep,limit){
var sp=this.split(sep);
if(limit&&sp.length>limit){
var r=[];
for(var i=0;i<limit;i++)
r[i]=sp[sp.length-limit+i];
return r;}
return sp;};}
if(!Array.prototype.indexOf){
Array.prototype.indexOf=function(search,fromIndex){
if(!fromIndex)fromIndex=0;
for(var i=0;i<this.length;i++){
if(this[i]===search)
return i;}
return-1;};}
if(!Array.prototype.extend){
Array.prototype.extend=function(arr){
for(var i=0;i<arr.length;i++)
this.push(arr[i]);};}
function sprintf(){
var regex=/%%|%(\d+\$)?(\([^)]+\))?([-+#0 ]*)(\*\d+\$|\*|\d+)?(\.(\*\d+\$|\*|\d+))?([scboxXuidfegEG])/g;
var a=arguments;
var i=0;
var format=a[i];
i++;
var pad=function(str,len,chr,leftJustify){
var padding=(str.length>=len)?'':Array(1+len-str.length>>>0).join(chr);
return leftJustify?str+padding:padding+str;};
var justify=function(value,prefix,leftJustify,minWidth,zeroPad){
var diff=minWidth-value.length;
if(diff>0){
if(leftJustify||!zeroPad){
value=pad(value,minWidth,' ',leftJustify);}else{
value=value.slice(0,prefix.length)+pad('',diff,'0',true)+value.slice(prefix.length);}}
return value;};
var formatBaseX=function(value,base,prefix,leftJustify,minWidth,precision,zeroPad){
var number=value>>>0;
prefix=prefix&&number&&{'2':'0b','8':'0','16':'0x'}[base]||'';
value=prefix+pad(number.toString(base),precision||0,'0',false);
return justify(value,prefix,leftJustify,minWidth,zeroPad);};
var formatString=function(value,leftJustify,minWidth,precision,zeroPad){
if(precision!=null){
value=value.slice(0,precision);}
return justify(value,'',leftJustify,minWidth,zeroPad);};
var doFormat=function(substring,valueIndex,valueName,flags,minWidth,_,precision,type){
if(substring=='%%')return'%';
var leftJustify=false,positivePrefix='',zeroPad=false,prefixBaseX=false;
var flagsl=flags.length;
for(var j=0;flags&&j<flagsl;j++)switch(flags.charAt(j)){
case' ':positivePrefix=' ';break;
case'+':positivePrefix='+';break;
case'-':leftJustify=true;break;
case'0':zeroPad=true;break;
case'#':prefixBaseX=true;break;
default:break;}
if(!minWidth){
minWidth=0;}else if(minWidth=='*'){
minWidth=+a[i];
i++;}else if(minWidth.charAt(0)=='*'){
minWidth=+a[minWidth.slice(1,-1)];}else{
minWidth=+minWidth;}
if(minWidth<0){
minWidth=-minWidth;
leftJustify=true;}
if(!isFinite(minWidth)){
throw new Error('sprintf: (minimum-)width must be finite');}
if(!precision){
precision='fFeE'.indexOf(type)>-1?6:(type=='d')?0:void(0);}else if(precision=='*'){
precision=+a[i];
i++;}else if(precision.charAt(0)=='*'){
precision=+a[precision.slice(1,-1)];}else{
precision=+precision;}
var value;
if(valueName){
valueName=valueName.substr(1,valueName.length-2);
value=a[1].__getitem__?a[1].__getitem__(valueName):a[1][valueName];}else{
if(valueIndex){
value=a[valueIndex.slice(0,-1)];}
else
{
value=a[i];
i++;}}
var number;
var prefix;
switch(type){
case's':return formatString(String(value),leftJustify,minWidth,precision,zeroPad);
case'c':return formatString(String.fromCharCode(+value),leftJustify,minWidth,precision,zeroPad);
case'b':return formatBaseX(value,2,prefixBaseX,leftJustify,minWidth,precision,zeroPad);
case'o':return formatBaseX(value,8,prefixBaseX,leftJustify,minWidth,precision,zeroPad);
case'x':return formatBaseX(value,16,prefixBaseX,leftJustify,minWidth,precision,zeroPad);
case'X':return formatBaseX(value,16,prefixBaseX,leftJustify,minWidth,precision,zeroPad).toUpperCase();
case'u':return formatBaseX(value,10,prefixBaseX,leftJustify,minWidth,precision,zeroPad);
case'i':
case'd':{
number=parseInt(+value,10);
prefix=number<0?'-':positivePrefix;
value=prefix+pad(String(Math.abs(number)),precision,'0',false);
return justify(value,prefix,leftJustify,minWidth,zeroPad);}
case'e':
case'E':
case'f':
case'F':
case'g':
case'G':
{
number=+value;
prefix=number<0?'-':positivePrefix;
var method=['toExponential','toFixed','toPrecision']['efg'.indexOf(type.toLowerCase())];
var textTransform=['toString','toUpperCase']['eEfFgG'.indexOf(type)%2];
value=prefix+Math.abs(number)[method](precision);
return justify(value,prefix,leftJustify,minWidth,zeroPad)[textTransform]();}
default:return substring;}};
return format.replace(regex,doFormat);};(function($){
var addMethods=function(source){
var ancestor=this.superclass&&this.superclass.prototype;
var properties=$.keys(source);
if(!$.keys({toString:true}).length)properties.push("toString","valueOf");
for(var i=0,length=properties.length;i<length;i++){
var property=properties[i],value=source[property];
if(ancestor&&$.isFunction(value)&&$.argumentNames(value)[0]=="$super"){
var method=value,value=$.extend($.wrap((function(m){
return function(){return ancestor[m].apply(this,arguments)};})(property),method),{
valueOf:function(){return method},
toString:function(){return method.toString()}});}
this.prototype[property]=value;}
return this;}
$.extend({
keys:function(obj){
var keys=[];
for(var key in obj)keys.push(key);
return keys;},
argumentNames:function(func){
var names=func.toString().match(/^[\s\(]*function[^(]*\((.*?)\)/)[1].split(/, ?/);
return names.length==1&&!names[0]?[]:names;},
bind:function(func,scope){
return function(){
return func.apply(scope,$.makeArray(arguments));}},
wrap:function(func,wrapper){
var __method=func;
return function(){
return wrapper.apply(this,[$.bind(__method,this)].concat($.makeArray(arguments)));}},
klass:function(){
var parent=null,properties=$.makeArray(arguments);
if($.isFunction(properties[0]))parent=properties.shift();
var klass=function(){
this.initialize.apply(this,arguments);};
klass.superclass=parent;
klass.subclasses=[];
klass.addMethods=addMethods;
if(parent){
var subclass=function(){};
subclass.prototype=parent.prototype;
klass.prototype=new subclass;
parent.subclasses.push(klass);}
for(var i=0;i<properties.length;i++)
klass.addMethods(properties[i]);
if(!klass.prototype.initialize)
klass.prototype.initialize=function(){};
klass.prototype.constructor=klass;
return klass;},
delegate:function(rules){
return function(e){
var target=$(e.target);
for(var selector in rules){
if(target.is(selector)||((target=target.parents(selector))&&target.length>0))
return rules[selector].apply(this,[target].concat($.makeArray(arguments)));}}}});
var bindEvents=function(instance){
for(var member in instance){
if(member.match(/^on(.+)/)&&typeof instance[member]=='function'){
instance.element.bind(RegExp.$1,$.bind(instance[member],instance));}}}
var behaviorWrapper=function(behavior){
return $.klass(behavior,{
initialize:function($super,element,args){
this.element=$(element);
if($super)$super.apply(this,args);}});}
var attachBehavior=function(el,behavior,args){
var wrapper=behaviorWrapper(behavior);
instance=new wrapper(el,args);
bindEvents(instance);
if(!behavior.instances)behavior.instances=[];
behavior.instances.push(instance);
return instance;};
$.fn.extend({
attach:function(){
var args=$.makeArray(arguments),behavior=args.shift();
if($.livequery&&this.selector){
return this.livequery(function(){
attachBehavior(this,behavior,args);});}else{
return this.each(function(){
attachBehavior(this,behavior,args);});}},
attachAndReturn:function(){
var args=$.makeArray(arguments),behavior=args.shift();
return $.map(this,function(el){
return attachBehavior(el,behavior,args);});},
delegate:function(type,rules){
return this.bind(type,$.delegate(rules));},
attached:function(behavior){
var instances=[];
if(!behavior.instances)return instances;
this.each(function(i,element){
$.each(behavior.instances,function(i,instance){
if(instance.element.get(0)==element)instances.push(instance);});});
return instances;},
firstAttached:function(behavior){
return this.attached(behavior)[0];}});
Remote=$.klass({
initialize:function(options){
if(this.element.attr('nodeName')=='FORM')this.element.attach(Remote.Form,options);
else this.element.attach(Remote.Link,options);}});
Remote.Base=$.klass({
initialize:function(options){
this.options=$.extend({},options||{});},
_makeRequest:function(options){
$.ajax(options);
return false;}});
Remote.Link=$.klass(Remote.Base,{
onclick:function(){
var options=$.extend({url:this.element.attr('href'),type:'GET'},this.options);
return this._makeRequest(options);}});
Remote.Form=$.klass(Remote.Base,{
onclick:function(e){
var target=e.target;
if($.inArray(target.nodeName.toLowerCase(),['input','button'])>=0&&target.type.match(/submit|image/))
this._submitButton=target;},
onsubmit:function(){
var data=this.element.serializeArray();
if(this._submitButton)data.push({name:this._submitButton.name,value:this._submitButton.value});
var options=$.extend({
url:this.element.attr('action'),
type:this.element.attr('method')||'GET',
data:data},this.options);
this._makeRequest(options);
return false;}});
$.ajaxSetup({
beforeSend:function(xhr){
xhr.setRequestHeader("Accept","text/javascript, text/html, application/xml, text/xml, */*");}});})(jQuery);;
if(!this.JSON){
JSON={};}
(function(){
function f(n){
return n<10?'0'+n:n;}
if(typeof Date.prototype.toJSON!=='function'){
Date.prototype.toJSON=function(key){
return this.getUTCFullYear()+'-'+
f(this.getUTCMonth()+1)+'-'+
f(this.getUTCDate())+'T'+
f(this.getUTCHours())+':'+
f(this.getUTCMinutes())+':'+
f(this.getUTCSeconds())+'Z';};
String.prototype.toJSON=
Number.prototype.toJSON=
Boolean.prototype.toJSON=function(key){
return this.valueOf();};}
var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
gap,
indent,
meta={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'},
rep;
function quote(string){
escapable.lastIndex=0;
return escapable.test(string)?'"'+string.replace(escapable,function(a){
var c=meta[a];
return typeof c==='string'?c:'\\u'+('0000'+a.charCodeAt(0).toString(16)).slice(-4);})+'"':'"'+string+'"';}
function str(key,holder){
var i,
k,
v,
length,
mind=gap,
partial,
value=holder[key];
if(value&&typeof value==='object'&&
typeof value.toJSON==='function'){
value=value.toJSON(key);}
if(typeof rep==='function'){
value=rep.call(holder,key,value);}
switch(typeof value){
case'string':
return quote(value);
case'number':
return isFinite(value)?String(value):'null';
case'boolean':
case'null':
return String(value);
case'object':
if(!value){
return'null';}
gap+=indent;
partial=[];
if(Object.prototype.toString.apply(value)==='[object Array]'){
length=value.length;
for(i=0;i<length;i+=1){
partial[i]=str(i,value)||'null';}
v=partial.length===0?'[]':
gap?'[\n'+gap+
partial.join(',\n'+gap)+'\n'+
mind+']':'['+partial.join(',')+']';
gap=mind;
return v;}
if(rep&&typeof rep==='object'){
length=rep.length;
for(i=0;i<length;i+=1){
k=rep[i];
if(typeof k==='string'){
v=str(k,value);
if(v){
partial.push(quote(k)+(gap?': ':':')+v);}}}}else{
for(k in value){
if(Object.hasOwnProperty.call(value,k)){
v=str(k,value);
if(v){
partial.push(quote(k)+(gap?': ':':')+v);}}}}
v=partial.length===0?'{}':
gap?'{\n'+gap+partial.join(',\n'+gap)+'\n'+
mind+'}':'{'+partial.join(',')+'}';
gap=mind;
return v;}}
if(typeof JSON.stringify!=='function'){
JSON.stringify=function(value,replacer,space){
var i;
gap='';
indent='';
if(typeof space==='number'){
for(i=0;i<space;i+=1){
indent+=' ';}}else if(typeof space==='string'){
indent=space;}
rep=replacer;
if(replacer&&typeof replacer!=='function'&&
(typeof replacer!=='object'||
typeof replacer.length!=='number')){
throw new Error('JSON.stringify');}
return str('',{'':value});};}
if(typeof JSON.parse!=='function'){
JSON.parse=function(text,reviver){
var j;
function walk(holder,key){
var k,v,value=holder[key];
if(value&&typeof value==='object'){
for(k in value){
if(Object.hasOwnProperty.call(value,k)){
v=walk(value,k);
if(v!==undefined){
value[k]=v;}else{
delete value[k];}}}}
return reviver.call(holder,key,value);}
cx.lastIndex=0;
if(cx.test(text)){
text=text.replace(cx,function(a){
return'\\u'+
('0000'+a.charCodeAt(0).toString(16)).slice(-4);});}
if(/^[\],:{}\s]*$/.
test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,'@').
replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,']').
replace(/(?:^|:|,)(?:\s*\[)+/g,''))){
j=eval('('+text+')');
return typeof reviver==='function'?
walk({'':j},''):j;}
throw new SyntaxError('JSON.parse');};}}());;
var swfobject=function(){var D="undefined",r="object",S="Shockwave Flash",W="ShockwaveFlash.ShockwaveFlash",q="application/x-shockwave-flash",R="SWFObjectExprInst",x="onreadystatechange",O=window,j=document,t=navigator,T=false,U=[h],o=[],N=[],I=[],l,Q,E,B,J=false,a=false,n,G,m=true,M=function(){var aa=typeof j.getElementById!=D&&typeof j.getElementsByTagName!=D&&typeof j.createElement!=D,ah=t.userAgent.toLowerCase(),Y=t.platform.toLowerCase(),ae=Y?/win/.test(Y):/win/.test(ah),ac=Y?/mac/.test(Y):/mac/.test(ah),af=/webkit/.test(ah)?parseFloat(ah.replace(/^.*webkit\/(\d+(\.\d+)?).*$/,"$1")):false,X=!+"\v1",ag=[0,0,0],ab=null;if(typeof t.plugins!=D&&typeof t.plugins[S]==r){ab=t.plugins[S].description;if(ab&&!(typeof t.mimeTypes!=D&&t.mimeTypes[q]&&!t.mimeTypes[q].enabledPlugin)){T=true;X=false;ab=ab.replace(/^.*\s+(\S+\s+\S+$)/,"$1");ag[0]=parseInt(ab.replace(/^(.*)\..*$/,"$1"),10);ag[1]=parseInt(ab.replace(/^.*\.(.*)\s.*$/,"$1"),10);ag[2]=/[a-zA-Z]/.test(ab)?parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/,"$1"),10):0}}else{if(typeof O.ActiveXObject!=D){try{var ad=new ActiveXObject(W);if(ad){ab=ad.GetVariable("$version");if(ab){X=true;ab=ab.split(" ")[1].split(",");ag=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}}catch(Z){}}}return{w3:aa,pv:ag,wk:af,ie:X,win:ae,mac:ac}}(),k=function(){if(!M.w3){return}if((typeof j.readyState!=D&&j.readyState=="complete")||(typeof j.readyState==D&&(j.getElementsByTagName("body")[0]||j.body))){f()}if(!J){if(typeof j.addEventListener!=D){j.addEventListener("DOMContentLoaded",f,false)}if(M.ie&&M.win){j.attachEvent(x,function(){if(j.readyState=="complete"){j.detachEvent(x,arguments.callee);f()}});if(O==top){(function(){if(J){return}try{j.documentElement.doScroll("left")}catch(X){setTimeout(arguments.callee,0);return}f()})()}}if(M.wk){(function(){if(J){return}if(!/loaded|complete/.test(j.readyState)){setTimeout(arguments.callee,0);return}f()})()}s(f)}}();function f(){if(J){return}try{var Z=j.getElementsByTagName("body")[0].appendChild(C("span"));Z.parentNode.removeChild(Z)}catch(aa){return}J=true;var X=U.length;for(var Y=0;Y<X;Y++){U[Y]()}}function K(X){if(J){X()}else{U[U.length]=X}}function s(Y){if(typeof O.addEventListener!=D){O.addEventListener("load",Y,false)}else{if(typeof j.addEventListener!=D){j.addEventListener("load",Y,false)}else{if(typeof O.attachEvent!=D){i(O,"onload",Y)}else{if(typeof O.onload=="function"){var X=O.onload;O.onload=function(){X();Y()}}else{O.onload=Y}}}}}function h(){if(T){V()}else{H()}}function V(){var X=j.getElementsByTagName("body")[0];var aa=C(r);aa.setAttribute("type",q);var Z=X.appendChild(aa);if(Z){var Y=0;(function(){if(typeof Z.GetVariable!=D){var ab=Z.GetVariable("$version");if(ab){ab=ab.split(" ")[1].split(",");M.pv=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}else{if(Y<10){Y++;setTimeout(arguments.callee,10);return}}X.removeChild(aa);Z=null;H()})()}else{H()}}function H(){var ag=o.length;if(ag>0){for(var af=0;af<ag;af++){var Y=o[af].id;var ab=o[af].callbackFn;var aa={success:false,id:Y};if(M.pv[0]>0){var ae=c(Y);if(ae){if(F(o[af].swfVersion)&&!(M.wk&&M.wk<312)){w(Y,true);if(ab){aa.success=true;aa.ref=z(Y);ab(aa)}}else{if(o[af].expressInstall&&A()){var ai={};ai.data=o[af].expressInstall;ai.width=ae.getAttribute("width")||"0";ai.height=ae.getAttribute("height")||"0";if(ae.getAttribute("class")){ai.styleclass=ae.getAttribute("class")}if(ae.getAttribute("align")){ai.align=ae.getAttribute("align")}var ah={};var X=ae.getElementsByTagName("param");var ac=X.length;for(var ad=0;ad<ac;ad++){if(X[ad].getAttribute("name").toLowerCase()!="movie"){ah[X[ad].getAttribute("name")]=X[ad].getAttribute("value")}}P(ai,ah,Y,ab)}else{p(ae);if(ab){ab(aa)}}}}}else{w(Y,true);if(ab){var Z=z(Y);if(Z&&typeof Z.SetVariable!=D){aa.success=true;aa.ref=Z}ab(aa)}}}}}function z(aa){var X=null;var Y=c(aa);if(Y&&Y.nodeName=="OBJECT"){if(typeof Y.SetVariable!=D){X=Y}else{var Z=Y.getElementsByTagName(r)[0];if(Z){X=Z}}}return X}function A(){return!a&&F("6.0.65")&&(M.win||M.mac)&&!(M.wk&&M.wk<312)}function P(aa,ab,X,Z){a=true;E=Z||null;B={success:false,id:X};var ae=c(X);if(ae){if(ae.nodeName=="OBJECT"){l=g(ae);Q=null}else{l=ae;Q=X}aa.id=R;if(typeof aa.width==D||(!/%$/.test(aa.width)&&parseInt(aa.width,10)<310)){aa.width="310"}if(typeof aa.height==D||(!/%$/.test(aa.height)&&parseInt(aa.height,10)<137)){aa.height="137"}j.title=j.title.slice(0,47)+" - Flash Player Installation";var ad=M.ie&&M.win?"ActiveX":"PlugIn",ac="MMredirectURL="+O.location.toString().replace(/&/g,"%26")+"&MMplayerType="+ad+"&MMdoctitle="+j.title;if(typeof ab.flashvars!=D){ab.flashvars+="&"+ac}else{ab.flashvars=ac}if(M.ie&&M.win&&ae.readyState!=4){var Y=C("div");X+="SWFObjectNew";Y.setAttribute("id",X);ae.parentNode.insertBefore(Y,ae);ae.style.display="none";(function(){if(ae.readyState==4){ae.parentNode.removeChild(ae)}else{setTimeout(arguments.callee,10)}})()}u(aa,ab,X)}}function p(Y){if(M.ie&&M.win&&Y.readyState!=4){var X=C("div");Y.parentNode.insertBefore(X,Y);X.parentNode.replaceChild(g(Y),X);Y.style.display="none";(function(){if(Y.readyState==4){Y.parentNode.removeChild(Y)}else{setTimeout(arguments.callee,10)}})()}else{Y.parentNode.replaceChild(g(Y),Y)}}function g(ab){var aa=C("div");if(M.win&&M.ie){aa.innerHTML=ab.innerHTML}else{var Y=ab.getElementsByTagName(r)[0];if(Y){var ad=Y.childNodes;if(ad){var X=ad.length;for(var Z=0;Z<X;Z++){if(!(ad[Z].nodeType==1&&ad[Z].nodeName=="PARAM")&&!(ad[Z].nodeType==8)){aa.appendChild(ad[Z].cloneNode(true))}}}}}return aa}function u(ai,ag,Y){var X,aa=c(Y);if(M.wk&&M.wk<312){return X}if(aa){if(typeof ai.id==D){ai.id=Y}if(M.ie&&M.win){var ah="";for(var ae in ai){if(ai[ae]!=Object.prototype[ae]){if(ae.toLowerCase()=="data"){ag.movie=ai[ae]}else{if(ae.toLowerCase()=="styleclass"){ah+=' class="'+ai[ae]+'"'}else{if(ae.toLowerCase()!="classid"){ah+=" "+ae+'="'+ai[ae]+'"'}}}}}var af="";for(var ad in ag){if(ag[ad]!=Object.prototype[ad]){af+='<param name="'+ad+'" value="'+ag[ad]+'" />'}}aa.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'+ah+">"+af+"</object>";N[N.length]=ai.id;X=c(ai.id)}else{var Z=C(r);Z.setAttribute("type",q);for(var ac in ai){if(ai[ac]!=Object.prototype[ac]){if(ac.toLowerCase()=="styleclass"){Z.setAttribute("class",ai[ac])}else{if(ac.toLowerCase()!="classid"){Z.setAttribute(ac,ai[ac])}}}}for(var ab in ag){if(ag[ab]!=Object.prototype[ab]&&ab.toLowerCase()!="movie"){e(Z,ab,ag[ab])}}aa.parentNode.replaceChild(Z,aa);X=Z}}return X}function e(Z,X,Y){var aa=C("param");aa.setAttribute("name",X);aa.setAttribute("value",Y);Z.appendChild(aa)}function y(Y){var X=c(Y);if(X&&X.nodeName=="OBJECT"){if(M.ie&&M.win){X.style.display="none";(function(){if(X.readyState==4){b(Y)}else{setTimeout(arguments.callee,10)}})()}else{X.parentNode.removeChild(X)}}}function b(Z){var Y=c(Z);if(Y){for(var X in Y){if(typeof Y[X]=="function"){Y[X]=null}}Y.parentNode.removeChild(Y)}}function c(Z){var X=null;try{X=j.getElementById(Z)}catch(Y){}return X}function C(X){return j.createElement(X)}function i(Z,X,Y){Z.attachEvent(X,Y);I[I.length]=[Z,X,Y]}function F(Z){var Y=M.pv,X=Z.split(".");X[0]=parseInt(X[0],10);X[1]=parseInt(X[1],10)||0;X[2]=parseInt(X[2],10)||0;return(Y[0]>X[0]||(Y[0]==X[0]&&Y[1]>X[1])||(Y[0]==X[0]&&Y[1]==X[1]&&Y[2]>=X[2]))?true:false}function v(ac,Y,ad,ab){if(M.ie&&M.mac){return}var aa=j.getElementsByTagName("head")[0];if(!aa){return}var X=(ad&&typeof ad=="string")?ad:"screen";if(ab){n=null;G=null}if(!n||G!=X){var Z=C("style");Z.setAttribute("type","text/css");Z.setAttribute("media",X);n=aa.appendChild(Z);if(M.ie&&M.win&&typeof j.styleSheets!=D&&j.styleSheets.length>0){n=j.styleSheets[j.styleSheets.length-1]}G=X}if(M.ie&&M.win){if(n&&typeof n.addRule==r){n.addRule(ac,Y)}}else{if(n&&typeof j.createTextNode!=D){n.appendChild(j.createTextNode(ac+" {"+Y+"}"))}}}function w(Z,X){if(!m){return}var Y=X?"visible":"hidden";if(J&&c(Z)){c(Z).style.visibility=Y}else{v("#"+Z,"visibility:"+Y)}}function L(Y){var Z=/[\\\"<>\.;]/;var X=Z.exec(Y)!=null;return X&&typeof encodeURIComponent!=D?encodeURIComponent(Y):Y}var d=function(){if(M.ie&&M.win){window.attachEvent("onunload",function(){var ac=I.length;for(var ab=0;ab<ac;ab++){I[ab][0].detachEvent(I[ab][1],I[ab][2])}var Z=N.length;for(var aa=0;aa<Z;aa++){y(N[aa])}for(var Y in M){M[Y]=null}M=null;for(var X in swfobject){swfobject[X]=null}swfobject=null})}}();return{registerObject:function(ab,X,aa,Z){if(M.w3&&ab&&X){var Y={};Y.id=ab;Y.swfVersion=X;Y.expressInstall=aa;Y.callbackFn=Z;o[o.length]=Y;w(ab,false)}else{if(Z){Z({success:false,id:ab})}}},getObjectById:function(X){if(M.w3){return z(X)}},embedSWF:function(ab,ah,ae,ag,Y,aa,Z,ad,af,ac){var X={success:false,id:ah};if(M.w3&&!(M.wk&&M.wk<312)&&ab&&ah&&ae&&ag&&Y){w(ah,false);K(function(){ae+="";ag+="";var aj={};if(af&&typeof af===r){for(var al in af){aj[al]=af[al]}}aj.data=ab;aj.width=ae;aj.height=ag;var am={};if(ad&&typeof ad===r){for(var ak in ad){am[ak]=ad[ak]}}if(Z&&typeof Z===r){for(var ai in Z){if(typeof am.flashvars!=D){am.flashvars+="&"+ai+"="+Z[ai]}else{am.flashvars=ai+"="+Z[ai]}}}if(F(Y)){var an=u(aj,am,ah);if(aj.id==ah){w(ah,true)}X.success=true;X.ref=an}else{if(aa&&A()){aj.data=aa;P(aj,am,ah,ac);return}else{w(ah,true)}}if(ac){ac(X)}})}else{if(ac){ac(X)}}},switchOffAutoHideShow:function(){m=false},ua:M,getFlashPlayerVersion:function(){return{major:M.pv[0],minor:M.pv[1],release:M.pv[2]}},hasFlashPlayerVersion:F,createSWF:function(Z,Y,X){if(M.w3){return u(Z,Y,X)}else{return undefined}},showExpressInstall:function(Z,aa,X,Y){if(M.w3&&A()){P(Z,aa,X,Y)}},removeSWF:function(X){if(M.w3){y(X)}},createCSS:function(aa,Z,Y,X){if(M.w3){v(aa,Z,Y,X)}},addDomLoadEvent:K,addLoadEvent:s,getQueryParamValue:function(aa){var Z=j.location.search||j.location.hash;if(Z){if(/\?/.test(Z)){Z=Z.split("?")[1]}if(aa==null){return L(Z)}var Y=Z.split("&");for(var X=0;X<Y.length;X++){if(Y[X].substring(0,Y[X].indexOf("="))==aa){return L(Y[X].substring((Y[X].indexOf("=")+1)))}}}return""},expressInstallCallback:function(){if(a){var X=c(R);if(X&&l){X.parentNode.replaceChild(l,X);if(Q){w(Q,true);if(M.ie&&M.win){l.style.display="block"}}if(E){E(B)}}a=false}}}}();;
if(!window.console){
(function()
{
window.console=
{
log:function()
{
logFormatted(arguments,"");},
debug:function()
{
logFormatted(arguments,"debug");},
info:function()
{
logFormatted(arguments,"info");},
warn:function()
{
logFormatted(arguments,"warning");},
error:function()
{
logFormatted(arguments,"error");},
assert:function(truth,message)
{
if(!truth)
{
var args=[];
for(var i=1;i<arguments.length;++i)
args.push(arguments[i]);
logFormatted(args.length?args:["Assertion Failure"],"error");
throw message?message:"Assertion Failure";}},
dir:function(object)
{
var html=[];
var pairs=[];
for(var name in object)
{
try
{
pairs.push([name,object[name]]);}
catch(exc)
{}}
pairs.sort(function(a,b){return a[0]<b[0]?-1:1;});
html.push('<table>');
for(var i=0;i<pairs.length;++i)
{
var name=pairs[i][0],value=pairs[i][1];
html.push('<tr>','<td class="propertyNameCell"><span class="propertyName">',
escapeHTML(name),'</span></td>','<td><span class="propertyValue">');
appendObject(value,html);
html.push('</span></td></tr>');}
html.push('</table>');
logRow(html,"dir");},
dirxml:function(node)
{
var html=[];
appendNode(node,html);
logRow(html,"dirxml");},
group:function()
{
logRow(arguments,"group",pushGroup);},
groupEnd:function()
{
logRow(arguments,"",popGroup);},
time:function(name)
{
timeMap[name]=(new Date()).getTime();},
timeEnd:function(name)
{
if(name in timeMap)
{
var delta=(new Date()).getTime()-timeMap[name];
logFormatted([name+":",delta+"ms"]);
delete timeMap[name];}},
count:function()
{
this.warn(["count() not supported."]);},
trace:function()
{
this.warn(["trace() not supported."]);},
profile:function()
{
this.warn(["profile() not supported."]);},
profileEnd:function()
{},
clear:function()
{
consoleBody.innerHTML="";},
open:function()
{
toggleConsole(true);},
close:function()
{
if(frameVisible)
toggleConsole();}};
var consoleFrame=null;
var consoleBody=null;
var commandLine=null;
var frameVisible=false;
var messageQueue=[];
var groupStack=[];
var timeMap={};
var clPrefix=">>> ";
var isFirefox=navigator.userAgent.indexOf("Firefox")!=-1;
var isIE=navigator.userAgent.indexOf("MSIE")!=-1;
var isOpera=navigator.userAgent.indexOf("Opera")!=-1;
var isSafari=navigator.userAgent.indexOf("AppleWebKit")!=-1;
function toggleConsole(forceOpen)
{
frameVisible=forceOpen||!frameVisible;
if(consoleFrame)
consoleFrame.style.visibility=frameVisible?"visible":"hidden";
else
waitForBody();}
function focusCommandLine()
{
toggleConsole(true);
if(commandLine)
commandLine.focus();}
function waitForBody()
{
if(document.body)
createFrame();
else
setTimeout(waitForBody,200);}
function createFrame()
{
if(consoleFrame)
return;
window.onFirebugReady=function(doc)
{
window.onFirebugReady=null;
var toolbar=doc.getElementById("toolbar");
toolbar.onmousedown=onSplitterMouseDown;
commandLine=doc.getElementById("commandLine");
addEvent(commandLine,"keydown",onCommandLineKeyDown);
addEvent(doc,isIE||isSafari?"keydown":"keypress",onKeyDown);
consoleBody=doc.getElementById("log");
layout();
flush();}
var baseURL=getFirebugURL();
consoleFrame=document.createElement("iframe");
consoleFrame.setAttribute("src",baseURL+"/html/firebug.html");
consoleFrame.setAttribute("frameBorder","0");
consoleFrame.style.visibility=(frameVisible?"visible":"hidden");
consoleFrame.style.zIndex="2147483583";
consoleFrame.style.position=document.all?"absolute":"fixed";
consoleFrame.style.width="100%";
consoleFrame.style.left="0";
consoleFrame.style.bottom="0";
consoleFrame.style.height="200px";
document.body.appendChild(consoleFrame);}
function getFirebugURL()
{
if(Splunk&&Splunk.util&&Splunk.util.make_url){
return Splunk.util.make_url('/static');}else{
return'/en-US/static';}}
function evalCommandLine()
{
var text=commandLine.value;
commandLine.value="";
logRow([clPrefix,text],"command");
var value;
try
{
value=eval(text);}
catch(exc)
{}
console.log(value);}
function layout()
{
var toolbar=consoleBody.ownerDocument.getElementById("toolbar");
var height=consoleFrame.offsetHeight-(toolbar.offsetHeight+commandLine.offsetHeight);
consoleBody.style.top=toolbar.offsetHeight+"px";
consoleBody.style.height=height+"px";
commandLine.style.top=(consoleFrame.offsetHeight-commandLine.offsetHeight)+"px";}
function logRow(message,className,handler)
{
if(consoleBody)
writeMessage(message,className,handler);
else
{
messageQueue.push([message,className,handler]);
waitForBody();}}
function flush()
{
var queue=messageQueue;
messageQueue=[];
for(var i=0;i<queue.length;++i)
writeMessage(queue[i][0],queue[i][1],queue[i][2]);}
function writeMessage(message,className,handler)
{
var isScrolledToBottom=
consoleBody.scrollTop+consoleBody.offsetHeight>=consoleBody.scrollHeight;
if(!handler)
handler=writeRow;
handler(message,className);
if(isScrolledToBottom)
consoleBody.scrollTop=consoleBody.scrollHeight-consoleBody.offsetHeight;}
function appendRow(row)
{
var container=groupStack.length?groupStack[groupStack.length-1]:consoleBody;
container.appendChild(row);}
function writeRow(message,className)
{
var row=consoleBody.ownerDocument.createElement("div");
row.className="logRow"+(className?" logRow-"+className:"");
row.innerHTML=message.join("");
appendRow(row);}
function pushGroup(message,className)
{
logFormatted(message,className);
var groupRow=consoleBody.ownerDocument.createElement("div");
groupRow.className="logGroup";
var groupRowBox=consoleBody.ownerDocument.createElement("div");
groupRowBox.className="logGroupBox";
groupRow.appendChild(groupRowBox);
appendRow(groupRowBox);
groupStack.push(groupRowBox);}
function popGroup()
{
groupStack.pop();}
function logFormatted(objects,className)
{
var html=[];
var format=objects[0];
var objIndex=0;
if(typeof(format)!="string")
{
format="";
objIndex=-1;}
var parts=parseFormat(format);
for(var i=0;i<parts.length;++i)
{
var part=parts[i];
if(part&&typeof(part)=="object")
{
var object=objects[++objIndex];
part.appender(object,html);}
else
appendText(part,html);}
for(var i=objIndex+1;i<objects.length;++i)
{
appendText(" ",html);
var object=objects[i];
if(typeof(object)=="string")
appendText(object,html);
else
appendObject(object,html);}
logRow(html,className);}
function parseFormat(format)
{
var parts=[];
var reg=/((^%|[^\\]%)(\d+)?(\.)([a-zA-Z]))|((^%|[^\\]%)([a-zA-Z]))/;
var appenderMap={s:appendText,d:appendInteger,i:appendInteger,f:appendFloat};
for(var m=reg.exec(format);m;m=reg.exec(format))
{
var type=m[8]?m[8]:m[5];
var appender=type in appenderMap?appenderMap[type]:appendObject;
var precision=m[3]?parseInt(m[3]):(m[4]=="."?-1:0);
parts.push(format.substr(0,m[0][0]=="%"?m.index:m.index+1));
parts.push({appender:appender,precision:precision});
format=format.substr(m.index+m[0].length);}
parts.push(format);
return parts;}
function escapeHTML(value)
{
function replaceChars(ch)
{
switch(ch)
{
case"<":
return"&lt;";
case">":
return"&gt;";
case"&":
return"&amp;";
case"'":
return"&#39;";
case'"':
return"&quot;";}
return"?";};
return String(value).replace(/[<>&"']/g,replaceChars);}
function objectToString(object)
{
try
{
return object+"";}
catch(exc)
{
return null;}}
function appendText(object,html)
{
html.push(escapeHTML(objectToString(object)));}
function appendNull(object,html)
{
html.push('<span class="objectBox-null">',escapeHTML(objectToString(object)),'</span>');}
function appendString(object,html)
{
html.push('<span class="objectBox-string">&quot;',escapeHTML(objectToString(object)),'&quot;</span>');}
function appendInteger(object,html)
{
html.push('<span class="objectBox-number">',escapeHTML(objectToString(object)),'</span>');}
function appendFloat(object,html)
{
html.push('<span class="objectBox-number">',escapeHTML(objectToString(object)),'</span>');}
function appendFunction(object,html)
{
var reName=/function ?(.*?)\(/;
var m=reName.exec(objectToString(object));
var name=m?m[1]:"function";
html.push('<span class="objectBox-function">',escapeHTML(name),'()</span>');}
function appendObject(object,html)
{
try
{
if(object==undefined)
appendNull("undefined",html);
else if(object==null)
appendNull("null",html);
else if(typeof object=="string")
appendString(object,html);
else if(typeof object=="number")
appendInteger(object,html);
else if(typeof object=="function")
appendFunction(object,html);
else if(object.nodeType==1)
appendSelector(object,html);
else if(typeof object=="object")
appendObjectFormatted(object,html);
else
appendText(object,html);}
catch(exc)
{}}
function appendObjectFormatted(object,html)
{
var text=objectToString(object);
var reObject=/\[object (.*?)\]/;
var m=reObject.exec(text);
html.push('<span class="objectBox-object">',m?m[1]:text,'</span>')}
function appendSelector(object,html)
{
html.push('<span class="objectBox-selector">');
html.push('<span class="selectorTag">',escapeHTML(object.nodeName.toLowerCase()),'</span>');
if(object.id)
html.push('<span class="selectorId">#',escapeHTML(object.id),'</span>');
if(object.className)
html.push('<span class="selectorClass">.',escapeHTML(object.className),'</span>');
html.push('</span>');}
function appendNode(node,html)
{
if(node.nodeType==1)
{
html.push('<div class="objectBox-element">','&lt;<span class="nodeTag">',node.nodeName.toLowerCase(),'</span>');
for(var i=0;i<node.attributes.length;++i)
{
var attr=node.attributes[i];
if(!attr.specified)
continue;
html.push('&nbsp;<span class="nodeName">',attr.nodeName.toLowerCase(),'</span>=&quot;<span class="nodeValue">',escapeHTML(attr.nodeValue),'</span>&quot;')}
if(node.firstChild)
{
html.push('&gt;</div><div class="nodeChildren">');
for(var child=node.firstChild;child;child=child.nextSibling)
appendNode(child,html);
html.push('</div><div class="objectBox-element">&lt;/<span class="nodeTag">',
node.nodeName.toLowerCase(),'&gt;</span></div>');}
else
html.push('/&gt;</div>');}
else if(node.nodeType==3)
{
html.push('<div class="nodeText">',escapeHTML(node.nodeValue),'</div>');}}
function addEvent(object,name,handler)
{
if(document.all)
object.attachEvent("on"+name,handler);
else
object.addEventListener(name,handler,false);}
function removeEvent(object,name,handler)
{
if(document.all)
object.detachEvent("on"+name,handler);
else
object.removeEventListener(name,handler,false);}
function cancelEvent(event)
{
if(document.all)
event.cancelBubble=true;
else
event.stopPropagation();}
function onError(msg,href,lineNo)
{
var html=[];
var lastSlash=href.lastIndexOf("/");
var fileName=lastSlash==-1?href:href.substr(lastSlash+1);
html.push('<span class="errorMessage">',msg,'</span>','<div class="objectBox-sourceLink">',fileName,' (line ',lineNo,')</div>');
logRow(html,"error");};
function onKeyDown(event)
{
if(event.keyCode==123)
toggleConsole();
else if((event.keyCode==108||event.keyCode==76)&&event.shiftKey&&(event.metaKey||event.ctrlKey))
focusCommandLine();
else
return;
cancelEvent(event);}
function onSplitterMouseDown(event)
{
if(isSafari||isOpera)
return;
addEvent(document,"mousemove",onSplitterMouseMove);
addEvent(document,"mouseup",onSplitterMouseUp);
for(var i=0;i<frames.length;++i)
{
addEvent(frames[i].document,"mousemove",onSplitterMouseMove);
addEvent(frames[i].document,"mouseup",onSplitterMouseUp);}}
function onSplitterMouseMove(event)
{
var win=document.all?event.srcElement.ownerDocument.parentWindow:event.target.ownerDocument.defaultView;
var clientY=event.clientY;
if(win!=win.parent)
clientY+=win.frameElement?win.frameElement.offsetTop:0;
var height=consoleFrame.offsetTop+consoleFrame.clientHeight;
var y=height-clientY;
consoleFrame.style.height=y+"px";
layout();}
function onSplitterMouseUp(event)
{
removeEvent(document,"mousemove",onSplitterMouseMove);
removeEvent(document,"mouseup",onSplitterMouseUp);
for(var i=0;i<frames.length;++i)
{
removeEvent(frames[i].document,"mousemove",onSplitterMouseMove);
removeEvent(frames[i].document,"mouseup",onSplitterMouseUp);}}
function onCommandLineKeyDown(event)
{
if(event.keyCode==13)
evalCommandLine();
else if(event.keyCode==27)
commandLine.value="";}
window.onerror=onError;
addEvent(document,isIE||isSafari?"keydown":"keypress",onKeyDown);
if(document.documentElement.getAttribute("debug")=="true")
toggleConsole(true);})();};
(function(c,j){function k(a,b){var d=a.nodeName.toLowerCase();if("area"===d){b=a.parentNode;d=b.name;if(!a.href||!d||b.nodeName.toLowerCase()!=="map")return false;a=c("img[usemap=#"+d+"]")[0];return!!a&&l(a)}return(/input|select|textarea|button|object/.test(d)?!a.disabled:"a"==d?a.href||b:b)&&l(a)}function l(a){return!c(a).parents().andSelf().filter(function(){return c.curCSS(this,"visibility")==="hidden"||c.expr.filters.hidden(this)}).length}c.ui=c.ui||{};if(!c.ui.version){c.extend(c.ui,{version:"1.8.16",
keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});c.fn.extend({propAttr:c.fn.prop||c.fn.attr,_focus:c.fn.focus,focus:function(a,b){return typeof a==="number"?this.each(function(){var d=
this;setTimeout(function(){c(d).focus();b&&b.call(d)},a)}):this._focus.apply(this,arguments)},scrollParent:function(){var a;a=c.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(c.curCSS(this,"position",1))&&/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0);return/fixed/.test(this.css("position"))||!a.length?c(document):a},zIndex:function(a){if(a!==j)return this.css("zIndex",a);if(this.length){a=c(this[0]);for(var b;a.length&&a[0]!==document;){b=a.css("position");if(b==="absolute"||b==="relative"||b==="fixed"){b=parseInt(a.css("zIndex"),10);if(!isNaN(b)&&b!==0)return b}a=a.parent()}}return 0},disableSelection:function(){return this.bind((c.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});c.each(["Width","Height"],function(a,b){function d(f,g,m,n){c.each(e,function(){g-=parseFloat(c.curCSS(f,"padding"+this,true))||0;if(m)g-=parseFloat(c.curCSS(f,"border"+this+"Width",true))||0;if(n)g-=parseFloat(c.curCSS(f,"margin"+this,true))||0});return g}var e=b==="Width"?["Left","Right"]:["Top","Bottom"],h=b.toLowerCase(),i={innerWidth:c.fn.innerWidth,innerHeight:c.fn.innerHeight,
outerWidth:c.fn.outerWidth,outerHeight:c.fn.outerHeight};c.fn["inner"+b]=function(f){if(f===j)return i["inner"+b].call(this);return this.each(function(){c(this).css(h,d(this,f)+"px")})};c.fn["outer"+b]=function(f,g){if(typeof f!=="number")return i["outer"+b].call(this,f);return this.each(function(){c(this).css(h,d(this,f,true,g)+"px")})}});c.extend(c.expr[":"],{data:function(a,b,d){return!!c.data(a,d[3])},focusable:function(a){return k(a,!isNaN(c.attr(a,"tabindex")))},tabbable:function(a){var b=c.attr(a,"tabindex"),d=isNaN(b);return(d||b>=0)&&k(a,!d)}});c(function(){var a=document.body,b=a.appendChild(b=document.createElement("div"));c.extend(b.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});c.support.minHeight=b.offsetHeight===100;c.support.selectstart="onselectstart"in b;a.removeChild(b).style.display="none"});c.extend(c.ui,{plugin:{add:function(a,b,d){a=c.ui[a].prototype;for(var e in d){a.plugins[e]=a.plugins[e]||[];a.plugins[e].push([b,d[e]])}},call:function(a,b,d){if((b=a.plugins[b])&&
a.element[0].parentNode)for(var e=0;e<b.length;e++)a.options[b[e][0]]&&b[e][1].apply(a.element,d)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(a,b){if(c(a).css("overflow")==="hidden")return false;b=b&&b==="left"?"scrollLeft":"scrollTop";var d=false;if(a[b]>0)return true;a[b]=1;d=a[b]>0;a[b]=0;return d},isOverAxis:function(a,b,d){return a>b&&a<b+d},isOver:function(a,b,d,e,h,i){return c.ui.isOverAxis(a,d,h)&&
c.ui.isOverAxis(b,e,i)}})}})(jQuery);;
(function(b,j){if(b.cleanData){var k=b.cleanData;b.cleanData=function(a){for(var c=0,d;(d=a[c])!=null;c++)try{b(d).triggerHandler("remove")}catch(e){}k(a)}}else{var l=b.fn.remove;b.fn.remove=function(a,c){return this.each(function(){if(!c)if(!a||b.filter(a,[this]).length)b("*",this).add([this]).each(function(){try{b(this).triggerHandler("remove")}catch(d){}});return l.call(b(this),a,c)})}}b.widget=function(a,c,d){var e=a.split(".")[0],f;a=a.split(".")[1];f=e+"-"+a;if(!d){d=c;c=b.Widget}b.expr[":"][f]=
function(h){return!!b.data(h,a)};b[e]=b[e]||{};b[e][a]=function(h,g){arguments.length&&this._createWidget(h,g)};c=new c;c.options=b.extend(true,{},c.options);b[e][a].prototype=b.extend(true,c,{namespace:e,widgetName:a,widgetEventPrefix:b[e][a].prototype.widgetEventPrefix||a,widgetBaseClass:f},d);b.widget.bridge(a,b[e][a])};b.widget.bridge=function(a,c){b.fn[a]=function(d){var e=typeof d==="string",f=Array.prototype.slice.call(arguments,1),h=this;d=!e&&f.length?b.extend.apply(null,[true,d].concat(f)):
d;if(e&&d.charAt(0)==="_")return h;e?this.each(function(){var g=b.data(this,a),i=g&&b.isFunction(g[d])?g[d].apply(g,f):g;if(i!==g&&i!==j){h=i;return false}}):this.each(function(){var g=b.data(this,a);g?g.option(d||{})._init():b.data(this,a,new c(d,this))});return h}};b.Widget=function(a,c){arguments.length&&this._createWidget(a,c)};b.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(a,c){b.data(c,this.widgetName,this);this.element=b(c);this.options=
b.extend(true,{},this.options,this._getCreateOptions(),a);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()});this._create();this._trigger("create");this._init()},_getCreateOptions:function(){return b.metadata&&b.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled ui-state-disabled")},widget:function(){return this.element},option:function(a,c){var d=a;if(arguments.length===0)return b.extend({},this.options);if(typeof a==="string"){if(c===j)return this.options[a];d={};d[a]=c}this._setOptions(d);return this},_setOptions:function(a){var c=this;b.each(a,function(d,e){c._setOption(d,e)});return this},_setOption:function(a,c){this.options[a]=c;if(a==="disabled")this.widget()[c?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",
c);return this},enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_trigger:function(a,c,d){var e=this.options[a];c=b.Event(c);c.type=(a===this.widgetEventPrefix?a:this.widgetEventPrefix+a).toLowerCase();d=d||{};if(c.originalEvent){a=b.event.props.length;for(var f;a;){f=b.event.props[--a];c[f]=c.originalEvent[f]}}this.element.trigger(c,d);return!(b.isFunction(e)&&e.call(this.element[0],c,d)===false||c.isDefaultPrevented())}}})(jQuery);;
(function(b){var d=false;b(document).mouseup(function(){d=false});b.widget("ui.mouse",{options:{cancel:":input,option",distance:1,delay:0},_mouseInit:function(){var a=this;this.element.bind("mousedown."+this.widgetName,function(c){return a._mouseDown(c)}).bind("click."+this.widgetName,function(c){if(true===b.data(c.target,a.widgetName+".preventClickEvent")){b.removeData(c.target,a.widgetName+".preventClickEvent");c.stopImmediatePropagation();return false}});this.started=false},_mouseDestroy:function(){this.element.unbind("."+
this.widgetName)},_mouseDown:function(a){if(!d){this._mouseStarted&&this._mouseUp(a);this._mouseDownEvent=a;var c=this,f=a.which==1,g=typeof this.options.cancel=="string"&&a.target.nodeName?b(a.target).closest(this.options.cancel).length:false;if(!f||g||!this._mouseCapture(a))return true;this.mouseDelayMet=!this.options.delay;if(!this.mouseDelayMet)this._mouseDelayTimer=setTimeout(function(){c.mouseDelayMet=true},this.options.delay);if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a)){this._mouseStarted=
this._mouseStart(a)!==false;if(!this._mouseStarted){a.preventDefault();return true}}true===b.data(a.target,this.widgetName+".preventClickEvent")&&b.removeData(a.target,this.widgetName+".preventClickEvent");this._mouseMoveDelegate=function(e){return c._mouseMove(e)};this._mouseUpDelegate=function(e){return c._mouseUp(e)};b(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate);a.preventDefault();return d=true}},_mouseMove:function(a){if(b.browser.msie&&!(document.documentMode>=9)&&!a.button)return this._mouseUp(a);if(this._mouseStarted){this._mouseDrag(a);return a.preventDefault()}if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a))(this._mouseStarted=this._mouseStart(this._mouseDownEvent,a)!==false)?this._mouseDrag(a):this._mouseUp(a);return!this._mouseStarted},_mouseUp:function(a){b(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate);if(this._mouseStarted){this._mouseStarted=
false;a.target==this._mouseDownEvent.target&&b.data(a.target,this.widgetName+".preventClickEvent",true);this._mouseStop(a)}return false},_mouseDistanceMet:function(a){return Math.max(Math.abs(this._mouseDownEvent.pageX-a.pageX),Math.abs(this._mouseDownEvent.pageY-a.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return true}})})(jQuery);;
(function(c){c.ui=c.ui||{};var n=/left|center|right/,o=/top|center|bottom/,t=c.fn.position,u=c.fn.offset;c.fn.position=function(b){if(!b||!b.of)return t.apply(this,arguments);b=c.extend({},b);var a=c(b.of),d=a[0],g=(b.collision||"flip").split(" "),e=b.offset?b.offset.split(" "):[0,0],h,k,j;if(d.nodeType===9){h=a.width();k=a.height();j={top:0,left:0}}else if(d.setTimeout){h=a.width();k=a.height();j={top:a.scrollTop(),left:a.scrollLeft()}}else if(d.preventDefault){b.at="left top";h=k=0;j={top:b.of.pageY,
left:b.of.pageX}}else{h=a.outerWidth();k=a.outerHeight();j=a.offset()}c.each(["my","at"],function(){var f=(b[this]||"").split(" ");if(f.length===1)f=n.test(f[0])?f.concat(["center"]):o.test(f[0])?["center"].concat(f):["center","center"];f[0]=n.test(f[0])?f[0]:"center";f[1]=o.test(f[1])?f[1]:"center";b[this]=f});if(g.length===1)g[1]=g[0];e[0]=parseInt(e[0],10)||0;if(e.length===1)e[1]=e[0];e[1]=parseInt(e[1],10)||0;if(b.at[0]==="right")j.left+=h;else if(b.at[0]==="center")j.left+=h/2;if(b.at[1]==="bottom")j.top+=
k;else if(b.at[1]==="center")j.top+=k/2;j.left+=e[0];j.top+=e[1];return this.each(function(){var f=c(this),l=f.outerWidth(),m=f.outerHeight(),p=parseInt(c.curCSS(this,"marginLeft",true))||0,q=parseInt(c.curCSS(this,"marginTop",true))||0,v=l+p+(parseInt(c.curCSS(this,"marginRight",true))||0),w=m+q+(parseInt(c.curCSS(this,"marginBottom",true))||0),i=c.extend({},j),r;if(b.my[0]==="right")i.left-=l;else if(b.my[0]==="center")i.left-=l/2;if(b.my[1]==="bottom")i.top-=m;else if(b.my[1]==="center")i.top-=
m/2;i.left=Math.round(i.left);i.top=Math.round(i.top);r={left:i.left-p,top:i.top-q};c.each(["left","top"],function(s,x){c.ui.position[g[s]]&&c.ui.position[g[s]][x](i,{targetWidth:h,targetHeight:k,elemWidth:l,elemHeight:m,collisionPosition:r,collisionWidth:v,collisionHeight:w,offset:e,my:b.my,at:b.at})});c.fn.bgiframe&&f.bgiframe();f.offset(c.extend(i,{using:b.using}))})};c.ui.position={fit:{left:function(b,a){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();b.left=
d>0?b.left-d:Math.max(b.left-a.collisionPosition.left,b.left)},top:function(b,a){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();b.top=d>0?b.top-d:Math.max(b.top-a.collisionPosition.top,b.top)}},flip:{left:function(b,a){if(a.at[0]!=="center"){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();var g=a.my[0]==="left"?-a.elemWidth:a.my[0]==="right"?a.elemWidth:0,e=a.at[0]==="left"?a.targetWidth:-a.targetWidth,h=-2*a.offset[0];b.left+=
a.collisionPosition.left<0?g+e+h:d>0?g+e+h:0}},top:function(b,a){if(a.at[1]!=="center"){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();var g=a.my[1]==="top"?-a.elemHeight:a.my[1]==="bottom"?a.elemHeight:0,e=a.at[1]==="top"?a.targetHeight:-a.targetHeight,h=-2*a.offset[1];b.top+=a.collisionPosition.top<0?g+e+h:d>0?g+e+h:0}}}};if(!c.offset.setOffset){c.offset.setOffset=function(b,a){if(/static/.test(c.curCSS(b,"position")))b.style.position="relative";var d=c(b),
g=d.offset(),e=parseInt(c.curCSS(b,"top",true),10)||0,h=parseInt(c.curCSS(b,"left",true),10)||0;g={top:a.top-g.top+e,left:a.left-g.left+h};"using"in a?a.using.call(b,g):d.css(g)};c.fn.offset=function(b){var a=this[0];if(!a||!a.ownerDocument)return null;if(b)return this.each(function(){c.offset.setOffset(this,b)});return u.call(this)}}})(jQuery);;
(function(d){d.widget("ui.draggable",d.ui.mouse,{widgetEventPrefix:"drag",options:{addClasses:true,appendTo:"parent",axis:false,connectToSortable:false,containment:false,cursor:"auto",cursorAt:false,grid:false,handle:false,helper:"original",iframeFix:false,opacity:false,refreshPositions:false,revert:false,revertDuration:500,scope:"default",scroll:true,scrollSensitivity:20,scrollSpeed:20,snap:false,snapMode:"both",snapTolerance:20,stack:false,zIndex:false},_create:function(){if(this.options.helper=="original"&&!/^(?:r|a|f)/.test(this.element.css("position")))this.element[0].style.position="relative";this.options.addClasses&&this.element.addClass("ui-draggable");this.options.disabled&&this.element.addClass("ui-draggable-disabled");this._mouseInit()},destroy:function(){if(this.element.data("draggable")){this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");this._mouseDestroy();return this}},_mouseCapture:function(a){var b=
this.options;if(this.helper||b.disabled||d(a.target).is(".ui-resizable-handle"))return false;this.handle=this._getHandle(a);if(!this.handle)return false;if(b.iframeFix)d(b.iframeFix===true?"iframe":b.iframeFix).each(function(){d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1E3}).css(d(this).offset()).appendTo("body")});return true},_mouseStart:function(a){var b=this.options;
this.helper=this._createHelper(a);this._cacheHelperProportions();if(d.ui.ddmanager)d.ui.ddmanager.current=this;this._cacheMargins();this.cssPosition=this.helper.css("position");this.scrollParent=this.helper.scrollParent();this.offset=this.positionAbs=this.element.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};d.extend(this.offset,{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});
this.originalPosition=this.position=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);b.containment&&this._setContainment();if(this._trigger("start",a)===false){this._clear();return false}this._cacheHelperProportions();d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.helper.addClass("ui-draggable-dragging");this._mouseDrag(a,true);d.ui.ddmanager&&d.ui.ddmanager.dragStart(this,a);return true},
_mouseDrag:function(a,b){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");if(!b){b=this._uiHash();if(this._trigger("drag",a,b)===false){this._mouseUp({});return false}this.position=b.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);return false},_mouseStop:function(a){var b=
false;if(d.ui.ddmanager&&!this.options.dropBehaviour)b=d.ui.ddmanager.drop(this,a);if(this.dropped){b=this.dropped;this.dropped=false}if((!this.element[0]||!this.element[0].parentNode)&&this.options.helper=="original")return false;if(this.options.revert=="invalid"&&!b||this.options.revert=="valid"&&b||this.options.revert===true||d.isFunction(this.options.revert)&&this.options.revert.call(this.element,b)){var c=this;d(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,
10),function(){c._trigger("stop",a)!==false&&c._clear()})}else this._trigger("stop",a)!==false&&this._clear();return false},_mouseUp:function(a){this.options.iframeFix===true&&d("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)});d.ui.ddmanager&&d.ui.ddmanager.dragStop(this,a);return d.ui.mouse.prototype._mouseUp.call(this,a)},cancel:function(){this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear();return this},_getHandle:function(a){var b=!this.options.handle||!d(this.options.handle,this.element).length?true:false;d(this.options.handle,this.element).find("*").andSelf().each(function(){if(this==a.target)b=true});return b},_createHelper:function(a){var b=this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a])):b.helper=="clone"?this.element.clone().removeAttr("id"):this.element;a.parents("body").length||a.appendTo(b.appendTo=="parent"?this.element[0].parentNode:b.appendTo);a[0]!=this.element[0]&&!/(fixed|absolute)/.test(a.css("position"))&&
a.css("position","absolute");return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=
this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a={top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),
10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.element.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),
10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment=="parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[a.containment=="document"?0:d(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,a.containment=="document"?0:d(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,
(a.containment=="document"?0:d(window).scrollLeft())+d(a.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(a.containment=="document"?0:d(window).scrollTop())+(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)&&a.containment.constructor!=Array){a=d(a.containment);var b=a[0];if(b){a.offset();var c=d(b).css("overflow")!="hidden";this.containment=[(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0),(parseInt(d(b).css("borderTopWidth"),10)||0)+(parseInt(d(b).css("paddingTop"),10)||0),(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),
10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom];this.relative_container=a}}else if(a.containment.constructor==Array)this.containment=a.containment},_convertPositionTo:function(a,b){if(!b)b=this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName);return{top:b.top+
this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName),e=a.pageX,h=a.pageY;if(this.originalPosition){var g;if(this.containment){if(this.relative_container){g=this.relative_container.offset();g=[this.containment[0]+g.left,this.containment[1]+g.top,this.containment[2]+g.left,this.containment[3]+g.top]}else g=this.containment;if(a.pageX-this.offset.click.left<g[0])e=g[0]+this.offset.click.left;
if(a.pageY-this.offset.click.top<g[1])h=g[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>g[2])e=g[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>g[3])h=g[3]+this.offset.click.top}if(b.grid){h=b.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/b.grid[1])*b.grid[1]:this.originalPageY;h=g?!(h-this.offset.click.top<g[1]||h-this.offset.click.top>g[3])?h:!(h-this.offset.click.top<g[1])?h-b.grid[1]:h+b.grid[1]:h;e=b.grid[0]?this.originalPageX+Math.round((e-this.originalPageX)/
b.grid[0])*b.grid[0]:this.originalPageX;e=g?!(e-this.offset.click.left<g[0]||e-this.offset.click.left>g[2])?e:!(e-this.offset.click.left<g[0])?e-b.grid[0]:e+b.grid[0]:e}}return{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop()),left:e-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&d.browser.version<
526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging");this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove();this.helper=null;this.cancelHelperRemoval=false},_trigger:function(a,b,c){c=c||this._uiHash();d.ui.plugin.call(this,a,[b,c]);if(a=="drag")this.positionAbs=this._convertPositionTo("absolute");return d.Widget.prototype._trigger.call(this,a,b,
c)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}});d.extend(d.ui.draggable,{version:"1.8.16"});d.ui.plugin.add("draggable","connectToSortable",{start:function(a,b){var c=d(this).data("draggable"),f=c.options,e=d.extend({},b,{item:c.element});c.sortables=[];d(f.connectToSortable).each(function(){var h=d.data(this,"sortable");if(h&&!h.options.disabled){c.sortables.push({instance:h,shouldRevert:h.options.revert});
h.refreshPositions();h._trigger("activate",a,e)}})},stop:function(a,b){var c=d(this).data("draggable"),f=d.extend({},b,{item:c.element});d.each(c.sortables,function(){if(this.instance.isOver){this.instance.isOver=0;c.cancelHelperRemoval=true;this.instance.cancelHelperRemoval=false;if(this.shouldRevert)this.instance.options.revert=true;this.instance._mouseStop(a);this.instance.options.helper=this.instance.options._helper;c.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})}else{this.instance.cancelHelperRemoval=
false;this.instance._trigger("deactivate",a,f)}})},drag:function(a,b){var c=d(this).data("draggable"),f=this;d.each(c.sortables,function(){this.instance.positionAbs=c.positionAbs;this.instance.helperProportions=c.helperProportions;this.instance.offset.click=c.offset.click;if(this.instance._intersectsWith(this.instance.containerCache)){if(!this.instance.isOver){this.instance.isOver=1;this.instance.currentItem=d(f).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",true);
this.instance.options._helper=this.instance.options.helper;this.instance.options.helper=function(){return b.helper[0]};a.target=this.instance.currentItem[0];this.instance._mouseCapture(a,true);this.instance._mouseStart(a,true,true);this.instance.offset.click.top=c.offset.click.top;this.instance.offset.click.left=c.offset.click.left;this.instance.offset.parent.left-=c.offset.parent.left-this.instance.offset.parent.left;this.instance.offset.parent.top-=c.offset.parent.top-this.instance.offset.parent.top;
c._trigger("toSortable",a);c.dropped=this.instance.element;c.currentItem=c.element;this.instance.fromOutside=c}this.instance.currentItem&&this.instance._mouseDrag(a)}else if(this.instance.isOver){this.instance.isOver=0;this.instance.cancelHelperRemoval=true;this.instance.options.revert=false;this.instance._trigger("out",a,this.instance._uiHash(this.instance));this.instance._mouseStop(a,true);this.instance.options.helper=this.instance.options._helper;this.instance.currentItem.remove();this.instance.placeholder&&
this.instance.placeholder.remove();c._trigger("fromSortable",a);c.dropped=false}})}});d.ui.plugin.add("draggable","cursor",{start:function(){var a=d("body"),b=d(this).data("draggable").options;if(a.css("cursor"))b._cursor=a.css("cursor");a.css("cursor",b.cursor)},stop:function(){var a=d(this).data("draggable").options;a._cursor&&d("body").css("cursor",a._cursor)}});d.ui.plugin.add("draggable","opacity",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("opacity"))b._opacity=
a.css("opacity");a.css("opacity",b.opacity)},stop:function(a,b){a=d(this).data("draggable").options;a._opacity&&d(b.helper).css("opacity",a._opacity)}});d.ui.plugin.add("draggable","scroll",{start:function(){var a=d(this).data("draggable");if(a.scrollParent[0]!=document&&a.scrollParent[0].tagName!="HTML")a.overflowOffset=a.scrollParent.offset()},drag:function(a){var b=d(this).data("draggable"),c=b.options,f=false;if(b.scrollParent[0]!=document&&b.scrollParent[0].tagName!="HTML"){if(!c.axis||c.axis!="x")if(b.overflowOffset.top+b.scrollParent[0].offsetHeight-a.pageY<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop+c.scrollSpeed;else if(a.pageY-b.overflowOffset.top<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop-c.scrollSpeed;if(!c.axis||c.axis!="y")if(b.overflowOffset.left+b.scrollParent[0].offsetWidth-a.pageX<c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft+c.scrollSpeed;else if(a.pageX-b.overflowOffset.left<
c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft-c.scrollSpeed}else{if(!c.axis||c.axis!="x")if(a.pageY-d(document).scrollTop()<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()-c.scrollSpeed);else if(d(window).height()-(a.pageY-d(document).scrollTop())<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()+c.scrollSpeed);if(!c.axis||c.axis!="y")if(a.pageX-d(document).scrollLeft()<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()-
c.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()+c.scrollSpeed)}f!==false&&d.ui.ddmanager&&!c.dropBehaviour&&d.ui.ddmanager.prepareOffsets(b,a)}});d.ui.plugin.add("draggable","snap",{start:function(){var a=d(this).data("draggable"),b=a.options;a.snapElements=[];d(b.snap.constructor!=String?b.snap.items||":data(draggable)":b.snap).each(function(){var c=d(this),f=c.offset();this!=a.element[0]&&a.snapElements.push({item:this,
width:c.outerWidth(),height:c.outerHeight(),top:f.top,left:f.left})})},drag:function(a,b){for(var c=d(this).data("draggable"),f=c.options,e=f.snapTolerance,h=b.offset.left,g=h+c.helperProportions.width,n=b.offset.top,o=n+c.helperProportions.height,i=c.snapElements.length-1;i>=0;i--){var j=c.snapElements[i].left,l=j+c.snapElements[i].width,k=c.snapElements[i].top,m=k+c.snapElements[i].height;if(j-e<h&&h<l+e&&k-e<n&&n<m+e||j-e<h&&h<l+e&&k-e<o&&o<m+e||j-e<g&&g<l+e&&k-e<n&&n<m+e||j-e<g&&g<l+e&&k-e<o&&
o<m+e){if(f.snapMode!="inner"){var p=Math.abs(k-o)<=e,q=Math.abs(m-n)<=e,r=Math.abs(j-g)<=e,s=Math.abs(l-h)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:k-c.helperProportions.height,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:m,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:j-c.helperProportions.width}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:l}).left-c.margins.left}var t=
p||q||r||s;if(f.snapMode!="outer"){p=Math.abs(k-n)<=e;q=Math.abs(m-o)<=e;r=Math.abs(j-h)<=e;s=Math.abs(l-g)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:k,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:m-c.helperProportions.height,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:j}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:l-c.helperProportions.width}).left-c.margins.left}if(!c.snapElements[i].snapping&&
(p||q||r||s||t))c.options.snap.snap&&c.options.snap.snap.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[i].item}));c.snapElements[i].snapping=p||q||r||s||t}else{c.snapElements[i].snapping&&c.options.snap.release&&c.options.snap.release.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[i].item}));c.snapElements[i].snapping=false}}}});d.ui.plugin.add("draggable","stack",{start:function(){var a=d(this).data("draggable").options;a=d.makeArray(d(a.stack)).sort(function(c,f){return(parseInt(d(c).css("zIndex"),
10)||0)-(parseInt(d(f).css("zIndex"),10)||0)});if(a.length){var b=parseInt(a[0].style.zIndex)||0;d(a).each(function(c){this.style.zIndex=b+c});this[0].style.zIndex=b+a.length}}});d.ui.plugin.add("draggable","zIndex",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("zIndex"))b._zIndex=a.css("zIndex");a.css("zIndex",b.zIndex)},stop:function(a,b){a=d(this).data("draggable").options;a._zIndex&&d(b.helper).css("zIndex",a._zIndex)}})})(jQuery);;
(function(d){d.widget("ui.droppable",{widgetEventPrefix:"drop",options:{accept:"*",activeClass:false,addClasses:true,greedy:false,hoverClass:false,scope:"default",tolerance:"intersect"},_create:function(){var a=this.options,b=a.accept;this.isover=0;this.isout=1;this.accept=d.isFunction(b)?b:function(c){return c.is(b)};this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight};d.ui.ddmanager.droppables[a.scope]=d.ui.ddmanager.droppables[a.scope]||[];d.ui.ddmanager.droppables[a.scope].push(this);
a.addClasses&&this.element.addClass("ui-droppable")},destroy:function(){for(var a=d.ui.ddmanager.droppables[this.options.scope],b=0;b<a.length;b++)a[b]==this&&a.splice(b,1);this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");return this},_setOption:function(a,b){if(a=="accept")this.accept=d.isFunction(b)?b:function(c){return c.is(b)};d.Widget.prototype._setOption.apply(this,arguments)},_activate:function(a){var b=d.ui.ddmanager.current;this.options.activeClass&&
this.element.addClass(this.options.activeClass);b&&this._trigger("activate",a,this.ui(b))},_deactivate:function(a){var b=d.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass);b&&this._trigger("deactivate",a,this.ui(b))},_over:function(a){var b=d.ui.ddmanager.current;if(!(!b||(b.currentItem||b.element)[0]==this.element[0]))if(this.accept.call(this.element[0],b.currentItem||b.element)){this.options.hoverClass&&this.element.addClass(this.options.hoverClass);
this._trigger("over",a,this.ui(b))}},_out:function(a){var b=d.ui.ddmanager.current;if(!(!b||(b.currentItem||b.element)[0]==this.element[0]))if(this.accept.call(this.element[0],b.currentItem||b.element)){this.options.hoverClass&&this.element.removeClass(this.options.hoverClass);this._trigger("out",a,this.ui(b))}},_drop:function(a,b){var c=b||d.ui.ddmanager.current;if(!c||(c.currentItem||c.element)[0]==this.element[0])return false;var e=false;this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var g=
d.data(this,"droppable");if(g.options.greedy&&!g.options.disabled&&g.options.scope==c.options.scope&&g.accept.call(g.element[0],c.currentItem||c.element)&&d.ui.intersect(c,d.extend(g,{offset:g.element.offset()}),g.options.tolerance)){e=true;return false}});if(e)return false;if(this.accept.call(this.element[0],c.currentItem||c.element)){this.options.activeClass&&this.element.removeClass(this.options.activeClass);this.options.hoverClass&&this.element.removeClass(this.options.hoverClass);this._trigger("drop",
a,this.ui(c));return this.element}return false},ui:function(a){return{draggable:a.currentItem||a.element,helper:a.helper,position:a.position,offset:a.positionAbs}}});d.extend(d.ui.droppable,{version:"1.8.16"});d.ui.intersect=function(a,b,c){if(!b.offset)return false;var e=(a.positionAbs||a.position.absolute).left,g=e+a.helperProportions.width,f=(a.positionAbs||a.position.absolute).top,h=f+a.helperProportions.height,i=b.offset.left,k=i+b.proportions.width,j=b.offset.top,l=j+b.proportions.height;
switch(c){case"fit":return i<=e&&g<=k&&j<=f&&h<=l;case"intersect":return i<e+a.helperProportions.width/2&&g-a.helperProportions.width/2<k&&j<f+a.helperProportions.height/2&&h-a.helperProportions.height/2<l;case"pointer":return d.ui.isOver((a.positionAbs||a.position.absolute).top+(a.clickOffset||a.offset.click).top,(a.positionAbs||a.position.absolute).left+(a.clickOffset||a.offset.click).left,j,i,b.proportions.height,b.proportions.width);case"touch":return(f>=j&&f<=l||h>=j&&h<=l||f<j&&h>l)&&(e>=
i&&e<=k||g>=i&&g<=k||e<i&&g>k);default:return false}};d.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(a,b){var c=d.ui.ddmanager.droppables[a.options.scope]||[],e=b?b.type:null,g=(a.currentItem||a.element).find(":data(droppable)").andSelf(),f=0;a:for(;f<c.length;f++)if(!(c[f].options.disabled||a&&!c[f].accept.call(c[f].element[0],a.currentItem||a.element))){for(var h=0;h<g.length;h++)if(g[h]==c[f].element[0]){c[f].proportions.height=0;continue a}c[f].visible=c[f].element.css("display")!="none";if(c[f].visible){e=="mousedown"&&c[f]._activate.call(c[f],b);c[f].offset=c[f].element.offset();c[f].proportions={width:c[f].element[0].offsetWidth,height:c[f].element[0].offsetHeight}}}},drop:function(a,b){var c=false;d.each(d.ui.ddmanager.droppables[a.options.scope]||[],function(){if(this.options){if(!this.options.disabled&&this.visible&&d.ui.intersect(a,this,this.options.tolerance))c=c||this._drop.call(this,b);if(!this.options.disabled&&this.visible&&this.accept.call(this.element[0],a.currentItem||
a.element)){this.isout=1;this.isover=0;this._deactivate.call(this,b)}}});return c},dragStart:function(a,b){a.element.parents(":not(body,html)").bind("scroll.droppable",function(){a.options.refreshPositions||d.ui.ddmanager.prepareOffsets(a,b)})},drag:function(a,b){a.options.refreshPositions&&d.ui.ddmanager.prepareOffsets(a,b);d.each(d.ui.ddmanager.droppables[a.options.scope]||[],function(){if(!(this.options.disabled||this.greedyChild||!this.visible)){var c=d.ui.intersect(a,this,this.options.tolerance);
if(c=!c&&this.isover==1?"isout":c&&this.isover==0?"isover":null){var e;if(this.options.greedy){var g=this.element.parents(":data(droppable):eq(0)");if(g.length){e=d.data(g[0],"droppable");e.greedyChild=c=="isover"?1:0}}if(e&&c=="isover"){e.isover=0;e.isout=1;e._out.call(e,b)}this[c]=1;this[c=="isout"?"isover":"isout"]=0;this[c=="isover"?"_over":"_out"].call(this,b);if(e&&c=="isout"){e.isout=0;e.isover=1;e._over.call(e,b)}}}})},dragStop:function(a,b){a.element.parents(":not(body,html)").unbind("scroll.droppable");
a.options.refreshPositions||d.ui.ddmanager.prepareOffsets(a,b)}}})(jQuery);;
(function(e){e.widget("ui.resizable",e.ui.mouse,{widgetEventPrefix:"resize",options:{alsoResize:false,animate:false,animateDuration:"slow",animateEasing:"swing",aspectRatio:false,autoHide:false,containment:false,ghost:false,grid:false,handles:"e,s,se",helper:false,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1E3},_create:function(){var b=this,a=this.options;this.element.addClass("ui-resizable");e.extend(this,{_aspectRatio:!!a.aspectRatio,aspectRatio:a.aspectRatio,originalElement:this.element,
_proportionallyResizeElements:[],_helper:a.helper||a.ghost||a.animate?a.helper||"ui-resizable-helper":null});if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)){/relative/.test(this.element.css("position"))&&e.browser.opera&&this.element.css({position:"relative",top:"auto",left:"auto"});this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),
top:this.element.css("top"),left:this.element.css("left")}));this.element=this.element.parent().data("resizable",this.element.data("resizable"));this.elementIsWrapper=true;this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")});this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0});this.originalResizeStyle=
this.originalElement.css("resize");this.originalElement.css("resize","none");this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"}));this.originalElement.css({margin:this.originalElement.css("margin")});this._proportionallyResize()}this.handles=a.handles||(!e(".ui-resizable-handle",this.element).length?"e,s,se":{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",
nw:".ui-resizable-nw"});if(this.handles.constructor==String){if(this.handles=="all")this.handles="n,e,s,w,se,sw,ne,nw";var c=this.handles.split(",");this.handles={};for(var d=0;d<c.length;d++){var f=e.trim(c[d]),g=e('<div class="ui-resizable-handle '+("ui-resizable-"+f)+'"></div>');/sw|se|ne|nw/.test(f)&&g.css({zIndex:++a.zIndex});"se"==f&&g.addClass("ui-icon ui-icon-gripsmall-diagonal-se");this.handles[f]=".ui-resizable-"+f;this.element.append(g)}}this._renderAxis=function(h){h=h||this.element;for(var i in this.handles){if(this.handles[i].constructor==
String)this.handles[i]=e(this.handles[i],this.element).show();if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var j=e(this.handles[i],this.element),l=0;l=/sw|ne|nw|se|n|s/.test(i)?j.outerHeight():j.outerWidth();j=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join("");h.css(j,l);this._proportionallyResize()}e(this.handles[i])}};this._renderAxis(this.element);this._handles=e(".ui-resizable-handle",this.element).disableSelection();
this._handles.mouseover(function(){if(!b.resizing){if(this.className)var h=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);b.axis=h&&h[1]?h[1]:"se"}});if(a.autoHide){this._handles.hide();e(this.element).addClass("ui-resizable-autohide").hover(function(){if(!a.disabled){e(this).removeClass("ui-resizable-autohide");b._handles.show()}},function(){if(!a.disabled)if(!b.resizing){e(this).addClass("ui-resizable-autohide");b._handles.hide()}})}this._mouseInit()},destroy:function(){this._mouseDestroy();
var b=function(c){e(c).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){b(this.element);var a=this.element;a.after(this.originalElement.css({position:a.css("position"),width:a.outerWidth(),height:a.outerHeight(),top:a.css("top"),left:a.css("left")})).remove()}this.originalElement.css("resize",this.originalResizeStyle);b(this.originalElement);return this},_mouseCapture:function(b){var a=
false;for(var c in this.handles)if(e(this.handles[c])[0]==b.target)a=true;return!this.options.disabled&&a},_mouseStart:function(b){var a=this.options,c=this.element.position(),d=this.element;this.resizing=true;this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()};if(d.is(".ui-draggable")||/absolute/.test(d.css("position")))d.css({position:"absolute",top:c.top,left:c.left});e.browser.opera&&/relative/.test(d.css("position"))&&d.css({position:"relative",top:"auto",left:"auto"});
this._renderProxy();c=m(this.helper.css("left"));var f=m(this.helper.css("top"));if(a.containment){c+=e(a.containment).scrollLeft()||0;f+=e(a.containment).scrollTop()||0}this.offset=this.helper.offset();this.position={left:c,top:f};this.size=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalSize=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalPosition={left:c,top:f};this.sizeDiff=
{width:d.outerWidth()-d.width(),height:d.outerHeight()-d.height()};this.originalMousePosition={left:b.pageX,top:b.pageY};this.aspectRatio=typeof a.aspectRatio=="number"?a.aspectRatio:this.originalSize.width/this.originalSize.height||1;a=e(".ui-resizable-"+this.axis).css("cursor");e("body").css("cursor",a=="auto"?this.axis+"-resize":a);d.addClass("ui-resizable-resizing");this._propagate("start",b);return true},_mouseDrag:function(b){var a=this.helper,c=this.originalMousePosition,d=this._change[this.axis];
if(!d)return false;c=d.apply(this,[b,b.pageX-c.left||0,b.pageY-c.top||0]);this._updateVirtualBoundaries(b.shiftKey);if(this._aspectRatio||b.shiftKey)c=this._updateRatio(c,b);c=this._respectSize(c,b);this._propagate("resize",b);a.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"});!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize();this._updateCache(c);this._trigger("resize",b,this.ui());return false},
_mouseStop:function(b){this.resizing=false;var a=this.options,c=this;if(this._helper){var d=this._proportionallyResizeElements,f=d.length&&/textarea/i.test(d[0].nodeName);d=f&&e.ui.hasScroll(d[0],"left")?0:c.sizeDiff.height;f=f?0:c.sizeDiff.width;f={width:c.helper.width()-f,height:c.helper.height()-d};d=parseInt(c.element.css("left"),10)+(c.position.left-c.originalPosition.left)||null;var g=parseInt(c.element.css("top"),10)+(c.position.top-c.originalPosition.top)||null;a.animate||this.element.css(e.extend(f,
{top:g,left:d}));c.helper.height(c.size.height);c.helper.width(c.size.width);this._helper&&!a.animate&&this._proportionallyResize()}e("body").css("cursor","auto");this.element.removeClass("ui-resizable-resizing");this._propagate("stop",b);this._helper&&this.helper.remove();return false},_updateVirtualBoundaries:function(b){var a=this.options,c,d,f;a={minWidth:k(a.minWidth)?a.minWidth:0,maxWidth:k(a.maxWidth)?a.maxWidth:Infinity,minHeight:k(a.minHeight)?a.minHeight:0,maxHeight:k(a.maxHeight)?a.maxHeight:
Infinity};if(this._aspectRatio||b){b=a.minHeight*this.aspectRatio;d=a.minWidth/this.aspectRatio;c=a.maxHeight*this.aspectRatio;f=a.maxWidth/this.aspectRatio;if(b>a.minWidth)a.minWidth=b;if(d>a.minHeight)a.minHeight=d;if(c<a.maxWidth)a.maxWidth=c;if(f<a.maxHeight)a.maxHeight=f}this._vBoundaries=a},_updateCache:function(b){this.offset=this.helper.offset();if(k(b.left))this.position.left=b.left;if(k(b.top))this.position.top=b.top;if(k(b.height))this.size.height=b.height;if(k(b.width))this.size.width=
b.width},_updateRatio:function(b){var a=this.position,c=this.size,d=this.axis;if(k(b.height))b.width=b.height*this.aspectRatio;else if(k(b.width))b.height=b.width/this.aspectRatio;if(d=="sw"){b.left=a.left+(c.width-b.width);b.top=null}if(d=="nw"){b.top=a.top+(c.height-b.height);b.left=a.left+(c.width-b.width)}return b},_respectSize:function(b){var a=this._vBoundaries,c=this.axis,d=k(b.width)&&a.maxWidth&&a.maxWidth<b.width,f=k(b.height)&&a.maxHeight&&a.maxHeight<b.height,g=k(b.width)&&a.minWidth&&
a.minWidth>b.width,h=k(b.height)&&a.minHeight&&a.minHeight>b.height;if(g)b.width=a.minWidth;if(h)b.height=a.minHeight;if(d)b.width=a.maxWidth;if(f)b.height=a.maxHeight;var i=this.originalPosition.left+this.originalSize.width,j=this.position.top+this.size.height,l=/sw|nw|w/.test(c);c=/nw|ne|n/.test(c);if(g&&l)b.left=i-a.minWidth;if(d&&l)b.left=i-a.maxWidth;if(h&&c)b.top=j-a.minHeight;if(f&&c)b.top=j-a.maxHeight;if((a=!b.width&&!b.height)&&!b.left&&b.top)b.top=null;else if(a&&!b.top&&b.left)b.left=
null;return b},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var b=this.helper||this.element,a=0;a<this._proportionallyResizeElements.length;a++){var c=this._proportionallyResizeElements[a];if(!this.borderDif){var d=[c.css("borderTopWidth"),c.css("borderRightWidth"),c.css("borderBottomWidth"),c.css("borderLeftWidth")],f=[c.css("paddingTop"),c.css("paddingRight"),c.css("paddingBottom"),c.css("paddingLeft")];this.borderDif=e.map(d,function(g,h){g=parseInt(g,10)||
0;h=parseInt(f[h],10)||0;return g+h})}e.browser.msie&&(e(b).is(":hidden")||e(b).parents(":hidden").length)||c.css({height:b.height()-this.borderDif[0]-this.borderDif[2]||0,width:b.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var b=this.options;this.elementOffset=this.element.offset();if(this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var a=e.browser.msie&&e.browser.version<7,c=a?1:0;a=a?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+
a,height:this.element.outerHeight()+a,position:"absolute",left:this.elementOffset.left-c+"px",top:this.elementOffset.top-c+"px",zIndex:++b.zIndex});this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(b,a){return{width:this.originalSize.width+a}},w:function(b,a){return{left:this.originalPosition.left+a,width:this.originalSize.width-a}},n:function(b,a,c){return{top:this.originalPosition.top+c,height:this.originalSize.height-c}},s:function(b,a,c){return{height:this.originalSize.height+
c}},se:function(b,a,c){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[b,a,c]))},sw:function(b,a,c){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[b,a,c]))},ne:function(b,a,c){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[b,a,c]))},nw:function(b,a,c){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[b,a,c]))}},_propagate:function(b,a){e.ui.plugin.call(this,b,[a,this.ui()]);
b!="resize"&&this._trigger(b,a,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}});e.extend(e.ui.resizable,{version:"1.8.16"});e.ui.plugin.add("resizable","alsoResize",{start:function(){var b=e(this).data("resizable").options,a=function(c){e(c).each(function(){var d=e(this);d.data("resizable-alsoresize",{width:parseInt(d.width(),
10),height:parseInt(d.height(),10),left:parseInt(d.css("left"),10),top:parseInt(d.css("top"),10),position:d.css("position")})})};if(typeof b.alsoResize=="object"&&!b.alsoResize.parentNode)if(b.alsoResize.length){b.alsoResize=b.alsoResize[0];a(b.alsoResize)}else e.each(b.alsoResize,function(c){a(c)});else a(b.alsoResize)},resize:function(b,a){var c=e(this).data("resizable");b=c.options;var d=c.originalSize,f=c.originalPosition,g={height:c.size.height-d.height||0,width:c.size.width-d.width||0,top:c.position.top-
f.top||0,left:c.position.left-f.left||0},h=function(i,j){e(i).each(function(){var l=e(this),q=e(this).data("resizable-alsoresize"),p={},r=j&&j.length?j:l.parents(a.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(r,function(n,o){if((n=(q[o]||0)+(g[o]||0))&&n>=0)p[o]=n||null});if(e.browser.opera&&/relative/.test(l.css("position"))){c._revertToRelativePosition=true;l.css({position:"absolute",top:"auto",left:"auto"})}l.css(p)})};typeof b.alsoResize=="object"&&!b.alsoResize.nodeType?
e.each(b.alsoResize,function(i,j){h(i,j)}):h(b.alsoResize)},stop:function(){var b=e(this).data("resizable"),a=b.options,c=function(d){e(d).each(function(){var f=e(this);f.css({position:f.data("resizable-alsoresize").position})})};if(b._revertToRelativePosition){b._revertToRelativePosition=false;typeof a.alsoResize=="object"&&!a.alsoResize.nodeType?e.each(a.alsoResize,function(d){c(d)}):c(a.alsoResize)}e(this).removeData("resizable-alsoresize")}});e.ui.plugin.add("resizable","animate",{stop:function(b){var a=
e(this).data("resizable"),c=a.options,d=a._proportionallyResizeElements,f=d.length&&/textarea/i.test(d[0].nodeName),g=f&&e.ui.hasScroll(d[0],"left")?0:a.sizeDiff.height;f={width:a.size.width-(f?0:a.sizeDiff.width),height:a.size.height-g};g=parseInt(a.element.css("left"),10)+(a.position.left-a.originalPosition.left)||null;var h=parseInt(a.element.css("top"),10)+(a.position.top-a.originalPosition.top)||null;a.element.animate(e.extend(f,h&&g?{top:h,left:g}:{}),{duration:c.animateDuration,easing:c.animateEasing,
step:function(){var i={width:parseInt(a.element.css("width"),10),height:parseInt(a.element.css("height"),10),top:parseInt(a.element.css("top"),10),left:parseInt(a.element.css("left"),10)};d&&d.length&&e(d[0]).css({width:i.width,height:i.height});a._updateCache(i);a._propagate("resize",b)}})}});e.ui.plugin.add("resizable","containment",{start:function(){var b=e(this).data("resizable"),a=b.element,c=b.options.containment;if(a=c instanceof e?c.get(0):/parent/.test(c)?a.parent().get(0):c){b.containerElement=
e(a);if(/document/.test(c)||c==document){b.containerOffset={left:0,top:0};b.containerPosition={left:0,top:0};b.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight}}else{var d=e(a),f=[];e(["Top","Right","Left","Bottom"]).each(function(i,j){f[i]=m(d.css("padding"+j))});b.containerOffset=d.offset();b.containerPosition=d.position();b.containerSize={height:d.innerHeight()-f[3],width:d.innerWidth()-f[1]};c=b.containerOffset;
var g=b.containerSize.height,h=b.containerSize.width;h=e.ui.hasScroll(a,"left")?a.scrollWidth:h;g=e.ui.hasScroll(a)?a.scrollHeight:g;b.parentData={element:a,left:c.left,top:c.top,width:h,height:g}}}},resize:function(b){var a=e(this).data("resizable"),c=a.options,d=a.containerOffset,f=a.position;b=a._aspectRatio||b.shiftKey;var g={top:0,left:0},h=a.containerElement;if(h[0]!=document&&/static/.test(h.css("position")))g=d;if(f.left<(a._helper?d.left:0)){a.size.width+=a._helper?a.position.left-d.left:
a.position.left-g.left;if(b)a.size.height=a.size.width/c.aspectRatio;a.position.left=c.helper?d.left:0}if(f.top<(a._helper?d.top:0)){a.size.height+=a._helper?a.position.top-d.top:a.position.top;if(b)a.size.width=a.size.height*c.aspectRatio;a.position.top=a._helper?d.top:0}a.offset.left=a.parentData.left+a.position.left;a.offset.top=a.parentData.top+a.position.top;c=Math.abs((a._helper?a.offset.left-g.left:a.offset.left-g.left)+a.sizeDiff.width);d=Math.abs((a._helper?a.offset.top-g.top:a.offset.top-
d.top)+a.sizeDiff.height);f=a.containerElement.get(0)==a.element.parent().get(0);g=/relative|absolute/.test(a.containerElement.css("position"));if(f&&g)c-=a.parentData.left;if(c+a.size.width>=a.parentData.width){a.size.width=a.parentData.width-c;if(b)a.size.height=a.size.width/a.aspectRatio}if(d+a.size.height>=a.parentData.height){a.size.height=a.parentData.height-d;if(b)a.size.width=a.size.height*a.aspectRatio}},stop:function(){var b=e(this).data("resizable"),a=b.options,c=b.containerOffset,d=b.containerPosition,
f=b.containerElement,g=e(b.helper),h=g.offset(),i=g.outerWidth()-b.sizeDiff.width;g=g.outerHeight()-b.sizeDiff.height;b._helper&&!a.animate&&/relative/.test(f.css("position"))&&e(this).css({left:h.left-d.left-c.left,width:i,height:g});b._helper&&!a.animate&&/static/.test(f.css("position"))&&e(this).css({left:h.left-d.left-c.left,width:i,height:g})}});e.ui.plugin.add("resizable","ghost",{start:function(){var b=e(this).data("resizable"),a=b.options,c=b.size;b.ghost=b.originalElement.clone();b.ghost.css({opacity:0.25,
display:"block",position:"relative",height:c.height,width:c.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof a.ghost=="string"?a.ghost:"");b.ghost.appendTo(b.helper)},resize:function(){var b=e(this).data("resizable");b.ghost&&b.ghost.css({position:"relative",height:b.size.height,width:b.size.width})},stop:function(){var b=e(this).data("resizable");b.ghost&&b.helper&&b.helper.get(0).removeChild(b.ghost.get(0))}});e.ui.plugin.add("resizable","grid",{resize:function(){var b=
e(this).data("resizable"),a=b.options,c=b.size,d=b.originalSize,f=b.originalPosition,g=b.axis;a.grid=typeof a.grid=="number"?[a.grid,a.grid]:a.grid;var h=Math.round((c.width-d.width)/(a.grid[0]||1))*(a.grid[0]||1);a=Math.round((c.height-d.height)/(a.grid[1]||1))*(a.grid[1]||1);if(/^(se|s|e)$/.test(g)){b.size.width=d.width+h;b.size.height=d.height+a}else if(/^(ne)$/.test(g)){b.size.width=d.width+h;b.size.height=d.height+a;b.position.top=f.top-a}else{if(/^(sw)$/.test(g)){b.size.width=d.width+h;b.size.height=
d.height+a}else{b.size.width=d.width+h;b.size.height=d.height+a;b.position.top=f.top-a}b.position.left=f.left-h}}});var m=function(b){return parseInt(b,10)||0},k=function(b){return!isNaN(parseInt(b,10))}})(jQuery);;
(function(e){e.widget("ui.selectable",e.ui.mouse,{options:{appendTo:"body",autoRefresh:true,distance:0,filter:"*",tolerance:"touch"},_create:function(){var c=this;this.element.addClass("ui-selectable");this.dragged=false;var f;this.refresh=function(){f=e(c.options.filter,c.element[0]);f.each(function(){var d=e(this),b=d.offset();e.data(this,"selectable-item",{element:this,$element:d,left:b.left,top:b.top,right:b.left+d.outerWidth(),bottom:b.top+d.outerHeight(),startselected:false,selected:d.hasClass("ui-selected"),
selecting:d.hasClass("ui-selecting"),unselecting:d.hasClass("ui-unselecting")})})};this.refresh();this.selectees=f.addClass("ui-selectee");this._mouseInit();this.helper=e("<div class='ui-selectable-helper'></div>")},destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item");this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable");this._mouseDestroy();return this},_mouseStart:function(c){var f=this;this.opos=[c.pageX,
c.pageY];if(!this.options.disabled){var d=this.options;this.selectees=e(d.filter,this.element[0]);this._trigger("start",c);e(d.appendTo).append(this.helper);this.helper.css({left:c.clientX,top:c.clientY,width:0,height:0});d.autoRefresh&&this.refresh();this.selectees.filter(".ui-selected").each(function(){var b=e.data(this,"selectable-item");b.startselected=true;if(!c.metaKey){b.$element.removeClass("ui-selected");b.selected=false;b.$element.addClass("ui-unselecting");b.unselecting=true;f._trigger("unselecting",
c,{unselecting:b.element})}});e(c.target).parents().andSelf().each(function(){var b=e.data(this,"selectable-item");if(b){var g=!c.metaKey||!b.$element.hasClass("ui-selected");b.$element.removeClass(g?"ui-unselecting":"ui-selected").addClass(g?"ui-selecting":"ui-unselecting");b.unselecting=!g;b.selecting=g;(b.selected=g)?f._trigger("selecting",c,{selecting:b.element}):f._trigger("unselecting",c,{unselecting:b.element});return false}})}},_mouseDrag:function(c){var f=this;this.dragged=true;if(!this.options.disabled){var d=
this.options,b=this.opos[0],g=this.opos[1],h=c.pageX,i=c.pageY;if(b>h){var j=h;h=b;b=j}if(g>i){j=i;i=g;g=j}this.helper.css({left:b,top:g,width:h-b,height:i-g});this.selectees.each(function(){var a=e.data(this,"selectable-item");if(!(!a||a.element==f.element[0])){var k=false;if(d.tolerance=="touch")k=!(a.left>h||a.right<b||a.top>i||a.bottom<g);else if(d.tolerance=="fit")k=a.left>b&&a.right<h&&a.top>g&&a.bottom<i;if(k){if(a.selected){a.$element.removeClass("ui-selected");a.selected=false}if(a.unselecting){a.$element.removeClass("ui-unselecting");
a.unselecting=false}if(!a.selecting){a.$element.addClass("ui-selecting");a.selecting=true;f._trigger("selecting",c,{selecting:a.element})}}else{if(a.selecting)if(c.metaKey&&a.startselected){a.$element.removeClass("ui-selecting");a.selecting=false;a.$element.addClass("ui-selected");a.selected=true}else{a.$element.removeClass("ui-selecting");a.selecting=false;if(a.startselected){a.$element.addClass("ui-unselecting");a.unselecting=true}f._trigger("unselecting",c,{unselecting:a.element})}if(a.selected)if(!c.metaKey&&!a.startselected){a.$element.removeClass("ui-selected");a.selected=false;a.$element.addClass("ui-unselecting");a.unselecting=true;f._trigger("unselecting",c,{unselecting:a.element})}}}});return false}},_mouseStop:function(c){var f=this;this.dragged=false;e(".ui-unselecting",this.element[0]).each(function(){var d=e.data(this,"selectable-item");d.$element.removeClass("ui-unselecting");d.unselecting=false;d.startselected=false;f._trigger("unselected",c,{unselected:d.element})});e(".ui-selecting",this.element[0]).each(function(){var d=
e.data(this,"selectable-item");d.$element.removeClass("ui-selecting").addClass("ui-selected");d.selecting=false;d.selected=true;d.startselected=true;f._trigger("selected",c,{selected:d.element})});this._trigger("stop",c);this.helper.remove();return false}});e.extend(e.ui.selectable,{version:"1.8.16"})})(jQuery);;
(function(d){d.widget("ui.sortable",d.ui.mouse,{widgetEventPrefix:"sort",options:{appendTo:"parent",axis:false,connectWith:false,containment:false,cursor:"auto",cursorAt:false,dropOnEmpty:true,forcePlaceholderSize:false,forceHelperSize:false,grid:false,handle:false,helper:"original",items:"> *",opacity:false,placeholder:false,revert:false,scroll:true,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1E3},_create:function(){var a=this.options;this.containerCache={};this.element.addClass("ui-sortable");
this.refresh();this.floating=this.items.length?a.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):false;this.offset=this.element.offset();this._mouseInit()},destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");this._mouseDestroy();for(var a=this.items.length-1;a>=0;a--)this.items[a].item.removeData("sortable-item");return this},_setOption:function(a,b){if(a==="disabled"){this.options[a]=b;this.widget()[b?"addClass":"removeClass"]("ui-sortable-disabled")}else d.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(a,b){if(this.reverting)return false;if(this.options.disabled||this.options.type=="static")return false;this._refreshItems(a);var c=null,e=this;d(a.target).parents().each(function(){if(d.data(this,"sortable-item")==e){c=d(this);return false}});if(d.data(a.target,"sortable-item")==e)c=d(a.target);if(!c)return false;if(this.options.handle&&!b){var f=false;d(this.options.handle,c).find("*").andSelf().each(function(){if(this==a.target)f=true});if(!f)return false}this.currentItem=c;this._removeCurrentsFromItems();return true},_mouseStart:function(a,b,c){b=this.options;var e=this;this.currentContainer=this;this.refreshPositions();this.helper=this._createHelper(a);this._cacheHelperProportions();this._cacheMargins();this.scrollParent=this.helper.scrollParent();this.offset=this.currentItem.offset();this.offset={top:this.offset.top-this.margins.top,
left:this.offset.left-this.margins.left};this.helper.css("position","absolute");this.cssPosition=this.helper.css("position");d.extend(this.offset,{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]};
this.helper[0]!=this.currentItem[0]&&this.currentItem.hide();this._createPlaceholder();b.containment&&this._setContainment();if(b.cursor){if(d("body").css("cursor"))this._storedCursor=d("body").css("cursor");d("body").css("cursor",b.cursor)}if(b.opacity){if(this.helper.css("opacity"))this._storedOpacity=this.helper.css("opacity");this.helper.css("opacity",b.opacity)}if(b.zIndex){if(this.helper.css("zIndex"))this._storedZIndex=this.helper.css("zIndex");this.helper.css("zIndex",b.zIndex)}if(this.scrollParent[0]!=
document&&this.scrollParent[0].tagName!="HTML")this.overflowOffset=this.scrollParent.offset();this._trigger("start",a,this._uiHash());this._preserveHelperProportions||this._cacheHelperProportions();if(!c)for(c=this.containers.length-1;c>=0;c--)this.containers[c]._trigger("activate",a,e._uiHash(this));if(d.ui.ddmanager)d.ui.ddmanager.current=this;d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.dragging=true;this.helper.addClass("ui-sortable-helper");this._mouseDrag(a);
return true},_mouseDrag:function(a){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");if(!this.lastPositionAbs)this.lastPositionAbs=this.positionAbs;if(this.options.scroll){var b=this.options,c=false;if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"){if(this.overflowOffset.top+this.scrollParent[0].offsetHeight-a.pageY<b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop+b.scrollSpeed;else if(a.pageY-this.overflowOffset.top<
b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop-b.scrollSpeed;if(this.overflowOffset.left+this.scrollParent[0].offsetWidth-a.pageX<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft+b.scrollSpeed;else if(a.pageX-this.overflowOffset.left<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft-b.scrollSpeed}else{if(a.pageY-d(document).scrollTop()<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()-
b.scrollSpeed);else if(d(window).height()-(a.pageY-d(document).scrollTop())<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()+b.scrollSpeed);if(a.pageX-d(document).scrollLeft()<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()-b.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()+b.scrollSpeed)}c!==false&&d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,
a)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(b=this.items.length-1;b>=0;b--){c=this.items[b];var e=c.item[0],f=this._intersectsWithPointer(c);if(f)if(e!=this.currentItem[0]&&this.placeholder[f==1?"next":"prev"]()[0]!=e&&!d.ui.contains(this.placeholder[0],e)&&(this.options.type=="semi-dynamic"?!d.ui.contains(this.element[0],
e):true)){this.direction=f==1?"down":"up";if(this.options.tolerance=="pointer"||this._intersectsWithSides(c))this._rearrange(a,c);else break;this._trigger("change",a,this._uiHash());break}}this._contactContainers(a);d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);this._trigger("sort",a,this._uiHash());this.lastPositionAbs=this.positionAbs;return false},_mouseStop:function(a,b){if(a){d.ui.ddmanager&&!this.options.dropBehaviour&&d.ui.ddmanager.drop(this,a);if(this.options.revert){var c=this;b=c.placeholder.offset();
c.reverting=true;d(this.helper).animate({left:b.left-this.offset.parent.left-c.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:b.top-this.offset.parent.top-c.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){c._clear(a)})}else this._clear(a,b);return false}},cancel:function(){var a=this;if(this.dragging){this._mouseUp({target:null});this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):
this.currentItem.show();for(var b=this.containers.length-1;b>=0;b--){this.containers[b]._trigger("deactivate",null,a._uiHash(this));if(this.containers[b].containerCache.over){this.containers[b]._trigger("out",null,a._uiHash(this));this.containers[b].containerCache.over=0}}}if(this.placeholder){this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove();d.extend(this,{helper:null,
dragging:false,reverting:false,_noFinalSort:null});this.domPosition.prev?d(this.domPosition.prev).after(this.currentItem):d(this.domPosition.parent).prepend(this.currentItem)}return this},serialize:function(a){var b=this._getItemsAsjQuery(a&&a.connected),c=[];a=a||{};d(b).each(function(){var e=(d(a.item||this).attr(a.attribute||"id")||"").match(a.expression||/(.+)[-=_](.+)/);if(e)c.push((a.key||e[1]+"[]")+"="+(a.key&&a.expression?e[1]:e[2]))});!c.length&&a.key&&c.push(a.key+"=");return c.join("&")},
toArray:function(a){var b=this._getItemsAsjQuery(a&&a.connected),c=[];a=a||{};b.each(function(){c.push(d(a.item||this).attr(a.attribute||"id")||"")});return c},_intersectsWith:function(a){var b=this.positionAbs.left,c=b+this.helperProportions.width,e=this.positionAbs.top,f=e+this.helperProportions.height,g=a.left,h=g+a.width,i=a.top,k=i+a.height,j=this.offset.click.top,l=this.offset.click.left;j=e+j>i&&e+j<k&&b+l>g&&b+l<h;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||
this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>a[this.floating?"width":"height"]?j:g<b+this.helperProportions.width/2&&c-this.helperProportions.width/2<h&&i<e+this.helperProportions.height/2&&f-this.helperProportions.height/2<k},_intersectsWithPointer:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left,a.width);b=b&&a;a=this._getDragVerticalDirection();
var c=this._getDragHorizontalDirection();if(!b)return false;return this.floating?c&&c=="right"||a=="down"?2:1:a&&(a=="down"?2:1)},_intersectsWithSides:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top+a.height/2,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left+a.width/2,a.width);var c=this._getDragVerticalDirection(),e=this._getDragHorizontalDirection();return this.floating&&e?e=="right"&&a||e=="left"&&!a:c&&(c=="down"&&b||c=="up"&&!b)},
_getDragVerticalDirection:function(){var a=this.positionAbs.top-this.lastPositionAbs.top;return a!=0&&(a>0?"down":"up")},_getDragHorizontalDirection:function(){var a=this.positionAbs.left-this.lastPositionAbs.left;return a!=0&&(a>0?"right":"left")},refresh:function(a){this._refreshItems(a);this.refreshPositions();return this},_connectWith:function(){var a=this.options;return a.connectWith.constructor==String?[a.connectWith]:a.connectWith},_getItemsAsjQuery:function(a){var b=[],c=[],e=this._connectWith();
if(e&&a)for(a=e.length-1;a>=0;a--)for(var f=d(e[a]),g=f.length-1;g>=0;g--){var h=d.data(f[g],"sortable");if(h&&h!=this&&!h.options.disabled)c.push([d.isFunction(h.options.items)?h.options.items.call(h.element):d(h.options.items,h.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),h])}c.push([d.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):d(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),
this]);for(a=c.length-1;a>=0;a--)c[a][0].each(function(){b.push(this)});return d(b)},_removeCurrentsFromItems:function(){for(var a=this.currentItem.find(":data(sortable-item)"),b=0;b<this.items.length;b++)for(var c=0;c<a.length;c++)a[c]==this.items[b].item[0]&&this.items.splice(b,1)},_refreshItems:function(a){this.items=[];this.containers=[this];var b=this.items,c=[[d.isFunction(this.options.items)?this.options.items.call(this.element[0],a,{item:this.currentItem}):d(this.options.items,this.element),
this]],e=this._connectWith();if(e)for(var f=e.length-1;f>=0;f--)for(var g=d(e[f]),h=g.length-1;h>=0;h--){var i=d.data(g[h],"sortable");if(i&&i!=this&&!i.options.disabled){c.push([d.isFunction(i.options.items)?i.options.items.call(i.element[0],a,{item:this.currentItem}):d(i.options.items,i.element),i]);this.containers.push(i)}}for(f=c.length-1;f>=0;f--){a=c[f][1];e=c[f][0];h=0;for(g=e.length;h<g;h++){i=d(e[h]);i.data("sortable-item",a);b.push({item:i,instance:a,width:0,height:0,left:0,top:0})}}},refreshPositions:function(a){if(this.offsetParent&&
this.helper)this.offset.parent=this._getParentOffset();for(var b=this.items.length-1;b>=0;b--){var c=this.items[b];if(!(c.instance!=this.currentContainer&&this.currentContainer&&c.item[0]!=this.currentItem[0])){var e=this.options.toleranceElement?d(this.options.toleranceElement,c.item):c.item;if(!a){c.width=e.outerWidth();c.height=e.outerHeight()}e=e.offset();c.left=e.left;c.top=e.top}}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(b=
this.containers.length-1;b>=0;b--){e=this.containers[b].element.offset();this.containers[b].containerCache.left=e.left;this.containers[b].containerCache.top=e.top;this.containers[b].containerCache.width=this.containers[b].element.outerWidth();this.containers[b].containerCache.height=this.containers[b].element.outerHeight()}return this},_createPlaceholder:function(a){var b=a||this,c=b.options;if(!c.placeholder||c.placeholder.constructor==String){var e=c.placeholder;c.placeholder={element:function(){var f=
d(document.createElement(b.currentItem[0].nodeName)).addClass(e||b.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];if(!e)f.style.visibility="hidden";return f},update:function(f,g){if(!(e&&!c.forcePlaceholderSize)){g.height()||g.height(b.currentItem.innerHeight()-parseInt(b.currentItem.css("paddingTop")||0,10)-parseInt(b.currentItem.css("paddingBottom")||0,10));g.width()||g.width(b.currentItem.innerWidth()-parseInt(b.currentItem.css("paddingLeft")||0,10)-parseInt(b.currentItem.css("paddingRight")||
0,10))}}}}b.placeholder=d(c.placeholder.element.call(b.element,b.currentItem));b.currentItem.after(b.placeholder);c.placeholder.update(b,b.placeholder)},_contactContainers:function(a){for(var b=null,c=null,e=this.containers.length-1;e>=0;e--)if(!d.ui.contains(this.currentItem[0],this.containers[e].element[0]))if(this._intersectsWith(this.containers[e].containerCache)){if(!(b&&d.ui.contains(this.containers[e].element[0],b.element[0]))){b=this.containers[e];c=e}}else if(this.containers[e].containerCache.over){this.containers[e]._trigger("out",
a,this._uiHash(this));this.containers[e].containerCache.over=0}if(b)if(this.containers.length===1){this.containers[c]._trigger("over",a,this._uiHash(this));this.containers[c].containerCache.over=1}else if(this.currentContainer!=this.containers[c]){b=1E4;e=null;for(var f=this.positionAbs[this.containers[c].floating?"left":"top"],g=this.items.length-1;g>=0;g--)if(d.ui.contains(this.containers[c].element[0],this.items[g].item[0])){var h=this.items[g][this.containers[c].floating?"left":"top"];if(Math.abs(h-
f)<b){b=Math.abs(h-f);e=this.items[g]}}if(e||this.options.dropOnEmpty){this.currentContainer=this.containers[c];e?this._rearrange(a,e,null,true):this._rearrange(a,null,this.containers[c].element,true);this._trigger("change",a,this._uiHash());this.containers[c]._trigger("change",a,this._uiHash(this));this.options.placeholder.update(this.currentContainer,this.placeholder);this.containers[c]._trigger("over",a,this._uiHash(this));this.containers[c].containerCache.over=1}}},_createHelper:function(a){var b=
this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a,this.currentItem])):b.helper=="clone"?this.currentItem.clone():this.currentItem;a.parents("body").length||d(b.appendTo!="parent"?b.appendTo:this.currentItem[0].parentNode)[0].appendChild(a[0]);if(a[0]==this.currentItem[0])this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")};if(a[0].style.width==""||b.forceHelperSize)a.width(this.currentItem.width());if(a[0].style.height==""||b.forceHelperSize)a.height(this.currentItem.height());return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=
this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a=
{top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.currentItem.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),
10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment=="parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,d(a.containment=="document"?
document:window).width()-this.helperProportions.width-this.margins.left,(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)){var b=d(a.containment)[0];a=d(a.containment).offset();var c=d(b).css("overflow")!="hidden";this.containment=[a.left+(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0)-this.margins.left,a.top+(parseInt(d(b).css("borderTopWidth"),
10)||0)+(parseInt(d(b).css("paddingTop"),10)||0)-this.margins.top,a.left+(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,a.top+(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(a,b){if(!b)b=
this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);return{top:b.top+this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&
this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);if(this.cssPosition=="relative"&&!(this.scrollParent[0]!=document&&this.scrollParent[0]!=this.offsetParent[0]))this.offset.relative=this._getRelativeOffset();
var f=a.pageX,g=a.pageY;if(this.originalPosition){if(this.containment){if(a.pageX-this.offset.click.left<this.containment[0])f=this.containment[0]+this.offset.click.left;if(a.pageY-this.offset.click.top<this.containment[1])g=this.containment[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>this.containment[2])f=this.containment[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>this.containment[3])g=this.containment[3]+this.offset.click.top}if(b.grid){g=this.originalPageY+Math.round((g-
this.originalPageY)/b.grid[1])*b.grid[1];g=this.containment?!(g-this.offset.click.top<this.containment[1]||g-this.offset.click.top>this.containment[3])?g:!(g-this.offset.click.top<this.containment[1])?g-b.grid[1]:g+b.grid[1]:g;f=this.originalPageX+Math.round((f-this.originalPageX)/b.grid[0])*b.grid[0];f=this.containment?!(f-this.offset.click.left<this.containment[0]||f-this.offset.click.left>this.containment[2])?f:!(f-this.offset.click.left<this.containment[0])?f-b.grid[0]:f+b.grid[0]:f}}return{top:g-
this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:c.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:c.scrollLeft())}},_rearrange:function(a,b,c,e){c?c[0].appendChild(this.placeholder[0]):b.item[0].parentNode.insertBefore(this.placeholder[0],
this.direction=="down"?b.item[0]:b.item[0].nextSibling);this.counter=this.counter?++this.counter:1;var f=this,g=this.counter;window.setTimeout(function(){g==f.counter&&f.refreshPositions(!e)},0)},_clear:function(a,b){this.reverting=false;var c=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem);this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var e in this._storedCSS)if(this._storedCSS[e]=="auto"||this._storedCSS[e]=="static")this._storedCSS[e]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!b&&c.push(function(f){this._trigger("receive",f,this._uiHash(this.fromOutside))});if((this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!b)c.push(function(f){this._trigger("update",f,this._uiHash())});if(!d.ui.contains(this.element[0],this.currentItem[0])){b||c.push(function(f){this._trigger("remove",
f,this._uiHash())});for(e=this.containers.length-1;e>=0;e--)if(d.ui.contains(this.containers[e].element[0],this.currentItem[0])&&!b){c.push(function(f){return function(g){f._trigger("receive",g,this._uiHash(this))}}.call(this,this.containers[e]));c.push(function(f){return function(g){f._trigger("update",g,this._uiHash(this))}}.call(this,this.containers[e]))}}for(e=this.containers.length-1;e>=0;e--){b||c.push(function(f){return function(g){f._trigger("deactivate",g,this._uiHash(this))}}.call(this,
this.containers[e]));if(this.containers[e].containerCache.over){c.push(function(f){return function(g){f._trigger("out",g,this._uiHash(this))}}.call(this,this.containers[e]));this.containers[e].containerCache.over=0}}this._storedCursor&&d("body").css("cursor",this._storedCursor);this._storedOpacity&&this.helper.css("opacity",this._storedOpacity);if(this._storedZIndex)this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex);this.dragging=false;if(this.cancelHelperRemoval){if(!b){this._trigger("beforeStop",
a,this._uiHash());for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}return false}b||this._trigger("beforeStop",a,this._uiHash());this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.helper[0]!=this.currentItem[0]&&this.helper.remove();this.helper=null;if(!b){for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}this.fromOutside=false;return true},_trigger:function(){d.Widget.prototype._trigger.apply(this,arguments)===false&&this.cancel()},
_uiHash:function(a){var b=a||this;return{helper:b.helper,placeholder:b.placeholder||d([]),position:b.position,originalPosition:b.originalPosition,offset:b.positionAbs,item:b.currentItem,sender:a?a.element:null}}});d.extend(d.ui.sortable,{version:"1.8.16"})})(jQuery);;
(function(d,C){function M(){this.debug=false;this._curInst=null;this._keyEvent=false;this._disabledInputs=[];this._inDialog=this._datepickerShowing=false;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass="ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass="ui-datepicker-days-cell-over";this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:false,showMonthAfterYear:false,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:false,changeYear:false,yearRange:"c-10:c+10",showOtherMonths:false,selectOtherMonths:false,showWeek:false,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",
minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:true,showButtonPanel:false,autoSize:false,disabled:false};d.extend(this._defaults,this.regional[""]);this.dpDiv=N(d('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function N(a){return a.bind("mouseout",
function(b){b=d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");b.length&&b.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")}).bind("mouseover",function(b){b=d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");if(!(d.datepicker._isDisabledDatepicker(J.inline?a.parent()[0]:J.input[0])||!b.length)){b.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
b.addClass("ui-state-hover");b.hasClass("ui-datepicker-prev")&&b.addClass("ui-datepicker-prev-hover");b.hasClass("ui-datepicker-next")&&b.addClass("ui-datepicker-next-hover")}})}function H(a,b){d.extend(a,b);for(var c in b)if(b[c]==null||b[c]==C)a[c]=b[c];return a}d.extend(d.ui,{datepicker:{version:"1.8.16"}});var B=(new Date).getTime(),J;d.extend(M.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},
setDefaults:function(a){H(this._defaults,a||{});return this},_attachDatepicker:function(a,b){var c=null;for(var e in this._defaults){var f=a.getAttribute("date:"+e);if(f){c=c||{};try{c[e]=eval(f)}catch(h){c[e]=f}}}e=a.nodeName.toLowerCase();f=e=="div"||e=="span";if(!a.id){this.uuid+=1;a.id="dp"+this.uuid}var i=this._newInst(d(a),f);i.settings=d.extend({},b||{},c||{});if(e=="input")this._connectDatepicker(a,i);else f&&this._inlineDatepicker(a,i)},_newInst:function(a,b){return{id:a[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1"),input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:!b?this.dpDiv:N(d('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}},_connectDatepicker:function(a,b){var c=d(a);b.append=d([]);b.trigger=d([]);if(!c.hasClass(this.markerClassName)){this._attachments(c,b);c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",
function(e,f,h){b.settings[f]=h}).bind("getData.datepicker",function(e,f){return this._get(b,f)});this._autoSize(b);d.data(a,"datepicker",b);b.settings.disabled&&this._disableDatepicker(a)}},_attachments:function(a,b){var c=this._get(b,"appendText"),e=this._get(b,"isRTL");b.append&&b.append.remove();if(c){b.append=d('<span class="'+this._appendClass+'">'+c+"</span>");a[e?"before":"after"](b.append)}a.unbind("focus",this._showDatepicker);b.trigger&&b.trigger.remove();c=this._get(b,"showOn");if(c=="focus"||c=="both")a.focus(this._showDatepicker);if(c=="button"||c=="both"){c=this._get(b,"buttonText");var f=this._get(b,"buttonImage");b.trigger=d(this._get(b,"buttonImageOnly")?d("<img/>").addClass(this._triggerClass).attr({src:f,alt:c,title:c}):d('<button type="button"></button>').addClass(this._triggerClass).html(f==""?c:d("<img/>").attr({src:f,alt:c,title:c})));a[e?"before":"after"](b.trigger);b.trigger.click(function(){d.datepicker._datepickerShowing&&d.datepicker._lastInput==a[0]?d.datepicker._hideDatepicker():
d.datepicker._showDatepicker(a[0]);return false})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b=new Date(2009,11,20),c=this._get(a,"dateFormat");if(c.match(/[DM]/)){var e=function(f){for(var h=0,i=0,g=0;g<f.length;g++)if(f[g].length>h){h=f[g].length;i=g}return i};b.setMonth(e(this._get(a,c.match(/MM/)?"monthNames":"monthNamesShort")));b.setDate(e(this._get(a,c.match(/DD/)?"dayNames":"dayNamesShort"))+20-b.getDay())}a.input.attr("size",this._formatDate(a,b).length)}},_inlineDatepicker:function(a,
b){var c=d(a);if(!c.hasClass(this.markerClassName)){c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker",function(e,f,h){b.settings[f]=h}).bind("getData.datepicker",function(e,f){return this._get(b,f)});d.data(a,"datepicker",b);this._setDate(b,this._getDefaultDate(b),true);this._updateDatepicker(b);this._updateAlternate(b);b.settings.disabled&&this._disableDatepicker(a);b.dpDiv.css("display","block")}},_dialogDatepicker:function(a,b,c,e,f){a=this._dialogInst;if(!a){this.uuid+=
1;this._dialogInput=d('<input type="text" id="'+("dp"+this.uuid)+'" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>');this._dialogInput.keydown(this._doKeyDown);d("body").append(this._dialogInput);a=this._dialogInst=this._newInst(this._dialogInput,false);a.settings={};d.data(this._dialogInput[0],"datepicker",a)}H(a.settings,e||{});b=b&&b.constructor==Date?this._formatDate(a,b):b;this._dialogInput.val(b);this._pos=f?f.length?f:[f.pageX,f.pageY]:null;if(!this._pos)this._pos=[document.documentElement.clientWidth/
2-100+(document.documentElement.scrollLeft||document.body.scrollLeft),document.documentElement.clientHeight/2-150+(document.documentElement.scrollTop||document.body.scrollTop)];this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px");a.settings.onSelect=c;this._inDialog=true;this.dpDiv.addClass(this._dialogClass);this._showDatepicker(this._dialogInput[0]);d.blockUI&&d.blockUI(this.dpDiv);d.data(this._dialogInput[0],"datepicker",a);return this},_destroyDatepicker:function(a){var b=
d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();d.removeData(a,"datepicker");if(e=="input"){c.append.remove();c.trigger.remove();b.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)}else if(e=="div"||e=="span")b.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=
a.nodeName.toLowerCase();if(e=="input"){a.disabled=false;c.trigger.filter("button").each(function(){this.disabled=false}).end().filter("img").css({opacity:"1.0",cursor:""})}else if(e=="div"||e=="span"){b=b.children("."+this._inlineClass);b.children().removeClass("ui-state-disabled");b.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")}this._disabledInputs=d.map(this._disabledInputs,function(f){return f==a?null:f})}},_disableDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();if(e=="input"){a.disabled=true;c.trigger.filter("button").each(function(){this.disabled=true}).end().filter("img").css({opacity:"0.5",cursor:"default"})}else if(e=="div"||e=="span"){b=b.children("."+this._inlineClass);b.children().addClass("ui-state-disabled");b.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled","disabled")}this._disabledInputs=d.map(this._disabledInputs,function(f){return f==
a?null:f});this._disabledInputs[this._disabledInputs.length]=a}},_isDisabledDatepicker:function(a){if(!a)return false;for(var b=0;b<this._disabledInputs.length;b++)if(this._disabledInputs[b]==a)return true;return false},_getInst:function(a){try{return d.data(a,"datepicker")}catch(b){throw"Missing instance data for this datepicker";}},_optionDatepicker:function(a,b,c){var e=this._getInst(a);if(arguments.length==2&&typeof b=="string")return b=="defaults"?d.extend({},d.datepicker._defaults):e?b=="all"?
d.extend({},e.settings):this._get(e,b):null;var f=b||{};if(typeof b=="string"){f={};f[b]=c}if(e){this._curInst==e&&this._hideDatepicker();var h=this._getDateDatepicker(a,true),i=this._getMinMaxDate(e,"min"),g=this._getMinMaxDate(e,"max");H(e.settings,f);if(i!==null&&f.dateFormat!==C&&f.minDate===C)e.settings.minDate=this._formatDate(e,i);if(g!==null&&f.dateFormat!==C&&f.maxDate===C)e.settings.maxDate=this._formatDate(e,g);this._attachments(d(a),e);this._autoSize(e);this._setDate(e,h);this._updateAlternate(e);
this._updateDatepicker(e)}},_changeDatepicker:function(a,b,c){this._optionDatepicker(a,b,c)},_refreshDatepicker:function(a){(a=this._getInst(a))&&this._updateDatepicker(a)},_setDateDatepicker:function(a,b){if(a=this._getInst(a)){this._setDate(a,b);this._updateDatepicker(a);this._updateAlternate(a)}},_getDateDatepicker:function(a,b){(a=this._getInst(a))&&!a.inline&&this._setDateFromField(a,b);return a?this._getDate(a):null},_doKeyDown:function(a){var b=d.datepicker._getInst(a.target),c=true,e=b.dpDiv.is(".ui-datepicker-rtl");
b._keyEvent=true;if(d.datepicker._datepickerShowing)switch(a.keyCode){case 9:d.datepicker._hideDatepicker();c=false;break;case 13:c=d("td."+d.datepicker._dayOverClass+":not(."+d.datepicker._currentClass+")",b.dpDiv);c[0]&&d.datepicker._selectDay(a.target,b.selectedMonth,b.selectedYear,c[0]);if(a=d.datepicker._get(b,"onSelect")){c=d.datepicker._formatDate(b);a.apply(b.input?b.input[0]:null,[c,b])}else d.datepicker._hideDatepicker();return false;case 27:d.datepicker._hideDatepicker();break;case 33:d.datepicker._adjustDate(a.target,
a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 34:d.datepicker._adjustDate(a.target,a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,"stepMonths"),"M");break;case 35:if(a.ctrlKey||a.metaKey)d.datepicker._clearDate(a.target);c=a.ctrlKey||a.metaKey;break;case 36:if(a.ctrlKey||a.metaKey)d.datepicker._gotoToday(a.target);c=a.ctrlKey||a.metaKey;break;case 37:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,e?+1:-1,"D");c=
a.ctrlKey||a.metaKey;if(a.originalEvent.altKey)d.datepicker._adjustDate(a.target,a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 38:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,-7,"D");c=a.ctrlKey||a.metaKey;break;case 39:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,e?-1:+1,"D");c=a.ctrlKey||a.metaKey;if(a.originalEvent.altKey)d.datepicker._adjustDate(a.target,a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,"stepMonths"),"M");break;case 40:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,+7,"D");c=a.ctrlKey||a.metaKey;break;default:c=false}else if(a.keyCode==36&&a.ctrlKey)d.datepicker._showDatepicker(this);else c=false;if(c){a.preventDefault();a.stopPropagation()}},_doKeyPress:function(a){var b=d.datepicker._getInst(a.target);if(d.datepicker._get(b,"constrainInput")){b=d.datepicker._possibleChars(d.datepicker._get(b,"dateFormat"));var c=String.fromCharCode(a.charCode==C?a.keyCode:a.charCode);
return a.ctrlKey||a.metaKey||c<" "||!b||b.indexOf(c)>-1}},_doKeyUp:function(a){a=d.datepicker._getInst(a.target);if(a.input.val()!=a.lastVal)try{if(d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),a.input?a.input.val():null,d.datepicker._getFormatConfig(a))){d.datepicker._setDateFromField(a);d.datepicker._updateAlternate(a);d.datepicker._updateDatepicker(a)}}catch(b){d.datepicker.log(b)}return true},_showDatepicker:function(a){a=a.target||a;if(a.nodeName.toLowerCase()!="input")a=d("input",
a.parentNode)[0];if(!(d.datepicker._isDisabledDatepicker(a)||d.datepicker._lastInput==a)){var b=d.datepicker._getInst(a);if(d.datepicker._curInst&&d.datepicker._curInst!=b){d.datepicker._datepickerShowing&&d.datepicker._triggerOnClose(d.datepicker._curInst);d.datepicker._curInst.dpDiv.stop(true,true)}var c=d.datepicker._get(b,"beforeShow");c=c?c.apply(a,[a,b]):{};if(c!==false){H(b.settings,c);b.lastVal=null;d.datepicker._lastInput=a;d.datepicker._setDateFromField(b);if(d.datepicker._inDialog)a.value="";if(!d.datepicker._pos){d.datepicker._pos=d.datepicker._findPos(a);d.datepicker._pos[1]+=a.offsetHeight}var e=false;d(a).parents().each(function(){e|=d(this).css("position")=="fixed";return!e});if(e&&d.browser.opera){d.datepicker._pos[0]-=document.documentElement.scrollLeft;d.datepicker._pos[1]-=document.documentElement.scrollTop}c={left:d.datepicker._pos[0],top:d.datepicker._pos[1]};d.datepicker._pos=null;b.dpDiv.empty();b.dpDiv.css({position:"absolute",display:"block",top:"-1000px"});d.datepicker._updateDatepicker(b);
c=d.datepicker._checkOffset(b,c,e);b.dpDiv.css({position:d.datepicker._inDialog&&d.blockUI?"static":e?"fixed":"absolute",display:"none",left:c.left+"px",top:c.top+"px"});if(!b.inline){c=d.datepicker._get(b,"showAnim");var f=d.datepicker._get(b,"duration"),h=function(){var i=b.dpDiv.find("iframe.ui-datepicker-cover");if(i.length){var g=d.datepicker._getBorders(b.dpDiv);i.css({left:-g[0],top:-g[1],width:b.dpDiv.outerWidth(),height:b.dpDiv.outerHeight()})}};b.dpDiv.zIndex(d(a).zIndex()+1);d.datepicker._datepickerShowing=
true;d.effects&&d.effects[c]?b.dpDiv.show(c,d.datepicker._get(b,"showOptions"),f,h):b.dpDiv[c||"show"](c?f:null,h);if(!c||!f)h();b.input.is(":visible")&&!b.input.is(":disabled")&&b.input.focus();d.datepicker._curInst=b}}}},_updateDatepicker:function(a){this.maxRows=4;var b=d.datepicker._getBorders(a.dpDiv);J=a;a.dpDiv.empty().append(this._generateHTML(a));var c=a.dpDiv.find("iframe.ui-datepicker-cover");c.length&&c.css({left:-b[0],top:-b[1],width:a.dpDiv.outerWidth(),height:a.dpDiv.outerHeight()});
a.dpDiv.find("."+this._dayOverClass+" a").mouseover();b=this._getNumberOfMonths(a);c=b[1];a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");c>1&&a.dpDiv.addClass("ui-datepicker-multi-"+c).css("width",17*c+"em");a.dpDiv[(b[0]!=1||b[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi");a.dpDiv[(this._get(a,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");a==d.datepicker._curInst&&d.datepicker._datepickerShowing&&a.input&&a.input.is(":visible")&&!a.input.is(":disabled")&&a.input[0]!=document.activeElement&&a.input.focus();if(a.yearshtml){var e=a.yearshtml;setTimeout(function(){e===a.yearshtml&&a.yearshtml&&a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml);e=a.yearshtml=null},0)}},_getBorders:function(a){var b=function(c){return{thin:1,medium:2,thick:3}[c]||c};return[parseFloat(b(a.css("border-left-width"))),parseFloat(b(a.css("border-top-width")))]},_checkOffset:function(a,b,c){var e=a.dpDiv.outerWidth(),f=a.dpDiv.outerHeight(),
h=a.input?a.input.outerWidth():0,i=a.input?a.input.outerHeight():0,g=document.documentElement.clientWidth+d(document).scrollLeft(),j=document.documentElement.clientHeight+d(document).scrollTop();b.left-=this._get(a,"isRTL")?e-h:0;b.left-=c&&b.left==a.input.offset().left?d(document).scrollLeft():0;b.top-=c&&b.top==a.input.offset().top+i?d(document).scrollTop():0;b.left-=Math.min(b.left,b.left+e>g&&g>e?Math.abs(b.left+e-g):0);b.top-=Math.min(b.top,b.top+f>j&&j>f?Math.abs(f+i):0);return b},_findPos:function(a){for(var b=
this._get(this._getInst(a),"isRTL");a&&(a.type=="hidden"||a.nodeType!=1||d.expr.filters.hidden(a));)a=a[b?"previousSibling":"nextSibling"];a=d(a).offset();return[a.left,a.top]},_triggerOnClose:function(a){var b=this._get(a,"onClose");if(b)b.apply(a.input?a.input[0]:null,[a.input?a.input.val():"",a])},_hideDatepicker:function(a){var b=this._curInst;if(!(!b||a&&b!=d.data(a,"datepicker")))if(this._datepickerShowing){a=this._get(b,"showAnim");var c=this._get(b,"duration"),e=function(){d.datepicker._tidyDialog(b);
this._curInst=null};d.effects&&d.effects[a]?b.dpDiv.hide(a,d.datepicker._get(b,"showOptions"),c,e):b.dpDiv[a=="slideDown"?"slideUp":a=="fadeIn"?"fadeOut":"hide"](a?c:null,e);a||e();d.datepicker._triggerOnClose(b);this._datepickerShowing=false;this._lastInput=null;if(this._inDialog){this._dialogInput.css({position:"absolute",left:"0",top:"-100px"});if(d.blockUI){d.unblockUI();d("body").append(this.dpDiv)}}this._inDialog=false}},_tidyDialog:function(a){a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},
_checkExternalClick:function(a){if(d.datepicker._curInst){a=d(a.target);a[0].id!=d.datepicker._mainDivId&&a.parents("#"+d.datepicker._mainDivId).length==0&&!a.hasClass(d.datepicker.markerClassName)&&!a.hasClass(d.datepicker._triggerClass)&&d.datepicker._datepickerShowing&&!(d.datepicker._inDialog&&d.blockUI)&&d.datepicker._hideDatepicker()}},_adjustDate:function(a,b,c){a=d(a);var e=this._getInst(a[0]);if(!this._isDisabledDatepicker(a[0])){this._adjustInstDate(e,b+(c=="M"?this._get(e,"showCurrentAtPos"):
0),c);this._updateDatepicker(e)}},_gotoToday:function(a){a=d(a);var b=this._getInst(a[0]);if(this._get(b,"gotoCurrent")&&b.currentDay){b.selectedDay=b.currentDay;b.drawMonth=b.selectedMonth=b.currentMonth;b.drawYear=b.selectedYear=b.currentYear}else{var c=new Date;b.selectedDay=c.getDate();b.drawMonth=b.selectedMonth=c.getMonth();b.drawYear=b.selectedYear=c.getFullYear()}this._notifyChange(b);this._adjustDate(a)},_selectMonthYear:function(a,b,c){a=d(a);var e=this._getInst(a[0]);e["selected"+(c=="M"?"Month":"Year")]=e["draw"+(c=="M"?"Month":"Year")]=parseInt(b.options[b.selectedIndex].value,10);this._notifyChange(e);this._adjustDate(a)},_selectDay:function(a,b,c,e){var f=d(a);if(!(d(e).hasClass(this._unselectableClass)||this._isDisabledDatepicker(f[0]))){f=this._getInst(f[0]);f.selectedDay=f.currentDay=d("a",e).html();f.selectedMonth=f.currentMonth=b;f.selectedYear=f.currentYear=c;this._selectDate(a,this._formatDate(f,f.currentDay,f.currentMonth,f.currentYear))}},_clearDate:function(a){a=d(a);
this._getInst(a[0]);this._selectDate(a,"")},_selectDate:function(a,b){a=this._getInst(d(a)[0]);b=b!=null?b:this._formatDate(a);a.input&&a.input.val(b);this._updateAlternate(a);var c=this._get(a,"onSelect");if(c)c.apply(a.input?a.input[0]:null,[b,a]);else a.input&&a.input.trigger("change");if(a.inline)this._updateDatepicker(a);else{this._hideDatepicker();this._lastInput=a.input[0];typeof a.input[0]!="object"&&a.input.focus();this._lastInput=null}},_updateAlternate:function(a){var b=this._get(a,"altField");
if(b){var c=this._get(a,"altFormat")||this._get(a,"dateFormat"),e=this._getDate(a),f=this.formatDate(c,e,this._getFormatConfig(a));d(b).each(function(){d(this).val(f)})}},noWeekends:function(a){a=a.getDay();return[a>0&&a<6,""]},iso8601Week:function(a){a=new Date(a.getTime());a.setDate(a.getDate()+4-(a.getDay()||7));var b=a.getTime();a.setMonth(0);a.setDate(1);return Math.floor(Math.round((b-a)/864E5)/7)+1},parseDate:function(a,b,c){if(a==null||b==null)throw"Invalid arguments";b=typeof b=="object"?
b.toString():b+"";if(b=="")return null;var e=(c?c.shortYearCutoff:null)||this._defaults.shortYearCutoff;e=typeof e!="string"?e:(new Date).getFullYear()%100+parseInt(e,10);for(var f=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,h=(c?c.dayNames:null)||this._defaults.dayNames,i=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,g=(c?c.monthNames:null)||this._defaults.monthNames,j=c=-1,l=-1,u=-1,k=false,o=function(p){(p=A+1<a.length&&a.charAt(A+1)==p)&&A++;return p},m=function(p){var D=
o(p);p=new RegExp("^\\d{1,"+(p=="@"?14:p=="!"?20:p=="y"&&D?4:p=="o"?3:2)+"}");p=b.substring(q).match(p);if(!p)throw"Missing number at position "+q;q+=p[0].length;return parseInt(p[0],10)},n=function(p,D,K){p=d.map(o(p)?K:D,function(w,x){return[[x,w]]}).sort(function(w,x){return-(w[1].length-x[1].length)});var E=-1;d.each(p,function(w,x){w=x[1];if(b.substr(q,w.length).toLowerCase()==w.toLowerCase()){E=x[0];q+=w.length;return false}});if(E!=-1)return E+1;else throw"Unknown name at position "+q;},s=
function(){if(b.charAt(q)!=a.charAt(A))throw"Unexpected literal at position "+q;q++},q=0,A=0;A<a.length;A++)if(k)if(a.charAt(A)=="'"&&!o("'"))k=false;else s();else switch(a.charAt(A)){case"d":l=m("d");break;case"D":n("D",f,h);break;case"o":u=m("o");break;case"m":j=m("m");break;case"M":j=n("M",i,g);break;case"y":c=m("y");break;case"@":var v=new Date(m("@"));c=v.getFullYear();j=v.getMonth()+1;l=v.getDate();break;case"!":v=new Date((m("!")-this._ticksTo1970)/1E4);c=v.getFullYear();j=v.getMonth()+
1;l=v.getDate();break;case"'":if(o("'"))s();else k=true;break;default:s()}if(q<b.length)throw"Extra/unparsed characters found in date: "+b.substring(q);if(c==-1)c=(new Date).getFullYear();else if(c<100)c+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c<=e?0:-100);if(u>-1){j=1;l=u;do{e=this._getDaysInMonth(c,j-1);if(l<=e)break;j++;l-=e}while(1)}v=this._daylightSavingAdjust(new Date(c,j-1,l));if(v.getFullYear()!=c||v.getMonth()+1!=j||v.getDate()!=l)throw"Invalid date";return v},ATOM:"yy-mm-dd",
COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1E7,formatDate:function(a,b,c){if(!b)return"";var e=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,f=(c?c.dayNames:null)||this._defaults.dayNames,h=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort;c=(c?c.monthNames:
null)||this._defaults.monthNames;var i=function(o){(o=k+1<a.length&&a.charAt(k+1)==o)&&k++;return o},g=function(o,m,n){m=""+m;if(i(o))for(;m.length<n;)m="0"+m;return m},j=function(o,m,n,s){return i(o)?s[m]:n[m]},l="",u=false;if(b)for(var k=0;k<a.length;k++)if(u)if(a.charAt(k)=="'"&&!i("'"))u=false;else l+=a.charAt(k);else switch(a.charAt(k)){case"d":l+=g("d",b.getDate(),2);break;case"D":l+=j("D",b.getDay(),e,f);break;case"o":l+=g("o",Math.round(((new Date(b.getFullYear(),b.getMonth(),b.getDate())).getTime()-
(new Date(b.getFullYear(),0,0)).getTime())/864E5),3);break;case"m":l+=g("m",b.getMonth()+1,2);break;case"M":l+=j("M",b.getMonth(),h,c);break;case"y":l+=i("y")?b.getFullYear():(b.getYear()%100<10?"0":"")+b.getYear()%100;break;case"@":l+=b.getTime();break;case"!":l+=b.getTime()*1E4+this._ticksTo1970;break;case"'":if(i("'"))l+="'";else u=true;break;default:l+=a.charAt(k)}return l},_possibleChars:function(a){for(var b="",c=false,e=function(h){(h=f+1<a.length&&a.charAt(f+1)==h)&&f++;return h},f=
0;f<a.length;f++)if(c)if(a.charAt(f)=="'"&&!e("'"))c=false;else b+=a.charAt(f);else switch(a.charAt(f)){case"d":case"m":case"y":case"@":b+="0123456789";break;case"D":case"M":return null;case"'":if(e("'"))b+="'";else c=true;break;default:b+=a.charAt(f)}return b},_get:function(a,b){return a.settings[b]!==C?a.settings[b]:this._defaults[b]},_setDateFromField:function(a,b){if(a.input.val()!=a.lastVal){var c=this._get(a,"dateFormat"),e=a.lastVal=a.input?a.input.val():null,f,h;f=h=this._getDefaultDate(a);
var i=this._getFormatConfig(a);try{f=this.parseDate(c,e,i)||h}catch(g){this.log(g);e=b?"":e}a.selectedDay=f.getDate();a.drawMonth=a.selectedMonth=f.getMonth();a.drawYear=a.selectedYear=f.getFullYear();a.currentDay=e?f.getDate():0;a.currentMonth=e?f.getMonth():0;a.currentYear=e?f.getFullYear():0;this._adjustInstDate(a)}},_getDefaultDate:function(a){return this._restrictMinMax(a,this._determineDate(a,this._get(a,"defaultDate"),new Date))},_determineDate:function(a,b,c){var e=function(h){var i=new Date;
i.setDate(i.getDate()+h);return i},f=function(h){try{return d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),h,d.datepicker._getFormatConfig(a))}catch(i){}var g=(h.toLowerCase().match(/^c/)?d.datepicker._getDate(a):null)||new Date,j=g.getFullYear(),l=g.getMonth();g=g.getDate();for(var u=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,k=u.exec(h);k;){switch(k[2]||"d"){case"d":case"D":g+=parseInt(k[1],10);break;case"w":case"W":g+=parseInt(k[1],10)*7;break;case"m":case"M":l+=parseInt(k[1],10);g=
Math.min(g,d.datepicker._getDaysInMonth(j,l));break;case"y":case"Y":j+=parseInt(k[1],10);g=Math.min(g,d.datepicker._getDaysInMonth(j,l));break}k=u.exec(h)}return new Date(j,l,g)};if(b=(b=b==null||b===""?c:typeof b=="string"?f(b):typeof b=="number"?isNaN(b)?c:e(b):new Date(b.getTime()))&&b.toString()=="Invalid Date"?c:b){b.setHours(0);b.setMinutes(0);b.setSeconds(0);b.setMilliseconds(0)}return this._daylightSavingAdjust(b)},_daylightSavingAdjust:function(a){if(!a)return null;a.setHours(a.getHours()>
12?a.getHours()+2:0);return a},_setDate:function(a,b,c){var e=!b,f=a.selectedMonth,h=a.selectedYear;b=this._restrictMinMax(a,this._determineDate(a,b,new Date));a.selectedDay=a.currentDay=b.getDate();a.drawMonth=a.selectedMonth=a.currentMonth=b.getMonth();a.drawYear=a.selectedYear=a.currentYear=b.getFullYear();if((f!=a.selectedMonth||h!=a.selectedYear)&&!c)this._notifyChange(a);this._adjustInstDate(a);if(a.input)a.input.val(e?"":this._formatDate(a))},_getDate:function(a){return!a.currentYear||a.input&&
a.input.val()==""?null:this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay))},_generateHTML:function(a){var b=new Date;b=this._daylightSavingAdjust(new Date(b.getFullYear(),b.getMonth(),b.getDate()));var c=this._get(a,"isRTL"),e=this._get(a,"showButtonPanel"),f=this._get(a,"hideIfNoPrevNext"),h=this._get(a,"navigationAsDateFormat"),i=this._getNumberOfMonths(a),g=this._get(a,"showCurrentAtPos"),j=this._get(a,"stepMonths"),l=i[0]!=1||i[1]!=1,u=this._daylightSavingAdjust(!a.currentDay?
new Date(9999,9,9):new Date(a.currentYear,a.currentMonth,a.currentDay)),k=this._getMinMaxDate(a,"min"),o=this._getMinMaxDate(a,"max");g=a.drawMonth-g;var m=a.drawYear;if(g<0){g+=12;m--}if(o){var n=this._daylightSavingAdjust(new Date(o.getFullYear(),o.getMonth()-i[0]*i[1]+1,o.getDate()));for(n=k&&n<k?k:n;this._daylightSavingAdjust(new Date(m,g,1))>n;){g--;if(g<0){g=11;m--}}}a.drawMonth=g;a.drawYear=m;n=this._get(a,"prevText");n=!h?n:this.formatDate(n,this._daylightSavingAdjust(new Date(m,g-j,1)),this._getFormatConfig(a));
n=this._canAdjustMonth(a,-1,m,g)?'<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_'+B+".datepicker._adjustDate('#"+a.id+"', -"+j+", 'M');\" title=\""+n+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+n+"</span></a>":f?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+n+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+n+"</span></a>";var s=this._get(a,"nextText");s=!h?s:this.formatDate(s,this._daylightSavingAdjust(new Date(m,
g+j,1)),this._getFormatConfig(a));f=this._canAdjustMonth(a,+1,m,g)?'<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_'+B+".datepicker._adjustDate('#"+a.id+"', +"+j+", 'M');\" title=\""+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>":f?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>";j=this._get(a,"currentText");s=this._get(a,"gotoCurrent")&&
a.currentDay?u:b;j=!h?j:this.formatDate(j,s,this._getFormatConfig(a));h=!a.inline?'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_'+B+'.datepicker._hideDatepicker();">'+this._get(a,"closeText")+"</button>":"";e=e?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(c?h:"")+(this._isInRange(a,s)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_'+
B+".datepicker._gotoToday('#"+a.id+"');\">"+j+"</button>":"")+(c?"":h)+"</div>":"";h=parseInt(this._get(a,"firstDay"),10);h=isNaN(h)?0:h;j=this._get(a,"showWeek");s=this._get(a,"dayNames");this._get(a,"dayNamesShort");var q=this._get(a,"dayNamesMin"),A=this._get(a,"monthNames"),v=this._get(a,"monthNamesShort"),p=this._get(a,"beforeShowDay"),D=this._get(a,"showOtherMonths"),K=this._get(a,"selectOtherMonths");this._get(a,"calculateWeek");for(var E=this._getDefaultDate(a),w="",x=0;x<i[0];x++){var O="";this.maxRows=4;for(var G=0;G<i[1];G++){var P=this._daylightSavingAdjust(new Date(m,g,a.selectedDay)),t=" ui-corner-all",y="";if(l){y+='<div class="ui-datepicker-group';if(i[1]>1)switch(G){case 0:y+=" ui-datepicker-group-first";t=" ui-corner-"+(c?"right":"left");break;case i[1]-1:y+=" ui-datepicker-group-last";t=" ui-corner-"+(c?"left":"right");break;default:y+=" ui-datepicker-group-middle";t="";break}y+='">'}y+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+t+'">'+(/all|left/.test(t)&&
x==0?c?f:n:"")+(/all|right/.test(t)&&x==0?c?n:f:"")+this._generateMonthYearHeader(a,g,m,k,o,x>0||G>0,A,v)+'</div><table class="ui-datepicker-calendar"><thead><tr>';var z=j?'<th class="ui-datepicker-week-col">'+this._get(a,"weekHeader")+"</th>":"";for(t=0;t<7;t++){var r=(t+h)%7;z+="<th"+((t+h+6)%7>=5?' class="ui-datepicker-week-end"':"")+'><span title="'+s[r]+'">'+q[r]+"</span></th>"}y+=z+"</tr></thead><tbody>";z=this._getDaysInMonth(m,g);if(m==a.selectedYear&&g==a.selectedMonth)a.selectedDay=Math.min(a.selectedDay,
z);t=(this._getFirstDayOfMonth(m,g)-h+7)%7;z=Math.ceil((t+z)/7);this.maxRows=z=l?this.maxRows>z?this.maxRows:z:z;r=this._daylightSavingAdjust(new Date(m,g,1-t));for(var Q=0;Q<z;Q++){y+="<tr>";var R=!j?"":'<td class="ui-datepicker-week-col">'+this._get(a,"calculateWeek")(r)+"</td>";for(t=0;t<7;t++){var I=p?p.apply(a.input?a.input[0]:null,[r]):[true,""],F=r.getMonth()!=g,L=F&&!K||!I[0]||k&&r<k||o&&r>o;R+='<td class="'+((t+h+6)%7>=5?" ui-datepicker-week-end":"")+(F?" ui-datepicker-other-month":"")+(r.getTime()==
P.getTime()&&g==a.selectedMonth&&a._keyEvent||E.getTime()==r.getTime()&&E.getTime()==P.getTime()?" "+this._dayOverClass:"")+(L?" "+this._unselectableClass+" ui-state-disabled":"")+(F&&!D?"":" "+I[1]+(r.getTime()==u.getTime()?" "+this._currentClass:"")+(r.getTime()==b.getTime()?" ui-datepicker-today":""))+'"'+((!F||D)&&I[2]?' title="'+I[2]+'"':"")+(L?"":' onclick="DP_jQuery_'+B+".datepicker._selectDay('#"+a.id+"',"+r.getMonth()+","+r.getFullYear()+', this);return false;"')+">"+(F&&!D?"&#xa0;":L?'<span class="ui-state-default">'+
r.getDate()+"</span>":'<a class="ui-state-default'+(r.getTime()==b.getTime()?" ui-state-highlight":"")+(r.getTime()==u.getTime()?" ui-state-active":"")+(F?" ui-priority-secondary":"")+'" href="#">'+r.getDate()+"</a>")+"</td>";r.setDate(r.getDate()+1);r=this._daylightSavingAdjust(r)}y+=R+"</tr>"}g++;if(g>11){g=0;m++}y+="</tbody></table>"+(l?"</div>"+(i[0]>0&&G==i[1]-1?'<div class="ui-datepicker-row-break"></div>':""):"");O+=y}w+=O}w+=e+(d.browser.msie&&parseInt(d.browser.version,10)<7&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':"");a._keyEvent=false;return w},_generateMonthYearHeader:function(a,b,c,e,f,h,i,g){var j=this._get(a,"changeMonth"),l=this._get(a,"changeYear"),u=this._get(a,"showMonthAfterYear"),k='<div class="ui-datepicker-title">',o="";if(h||!j)o+='<span class="ui-datepicker-month">'+i[b]+"</span>";else{i=e&&e.getFullYear()==c;var m=f&&f.getFullYear()==c;o+='<select class="ui-datepicker-month" onchange="DP_jQuery_'+B+".datepicker._selectMonthYear('#"+a.id+"', this, 'M');\" >";for(var n=0;n<12;n++)if((!i||n>=e.getMonth())&&
(!m||n<=f.getMonth()))o+='<option value="'+n+'"'+(n==b?' selected="selected"':"")+">"+g[n]+"</option>";o+="</select>"}u||(k+=o+(h||!(j&&l)?"&#xa0;":""));if(!a.yearshtml){a.yearshtml="";if(h||!l)k+='<span class="ui-datepicker-year">'+c+"</span>";else{g=this._get(a,"yearRange").split(":");var s=(new Date).getFullYear();i=function(q){q=q.match(/c[+-].*/)?c+parseInt(q.substring(1),10):q.match(/[+-].*/)?s+parseInt(q,10):parseInt(q,10);return isNaN(q)?s:q};b=i(g[0]);g=Math.max(b,i(g[1]||""));b=e?Math.max(b,
e.getFullYear()):b;g=f?Math.min(g,f.getFullYear()):g;for(a.yearshtml+='<select class="ui-datepicker-year" onchange="DP_jQuery_'+B+".datepicker._selectMonthYear('#"+a.id+"', this, 'Y');\" >";b<=g;b++)a.yearshtml+='<option value="'+b+'"'+(b==c?' selected="selected"':"")+">"+b+"</option>";a.yearshtml+="</select>";k+=a.yearshtml;a.yearshtml=null}}k+=this._get(a,"yearSuffix");if(u)k+=(h||!(j&&l)?"&#xa0;":"")+o;k+="</div>";return k},_adjustInstDate:function(a,b,c){var e=a.drawYear+(c=="Y"?b:0),f=a.drawMonth+
(c=="M"?b:0);b=Math.min(a.selectedDay,this._getDaysInMonth(e,f))+(c=="D"?b:0);e=this._restrictMinMax(a,this._daylightSavingAdjust(new Date(e,f,b)));a.selectedDay=e.getDate();a.drawMonth=a.selectedMonth=e.getMonth();a.drawYear=a.selectedYear=e.getFullYear();if(c=="M"||c=="Y")this._notifyChange(a)},_restrictMinMax:function(a,b){var c=this._getMinMaxDate(a,"min");a=this._getMinMaxDate(a,"max");b=c&&b<c?c:b;return b=a&&b>a?a:b},_notifyChange:function(a){var b=this._get(a,"onChangeMonthYear");if(b)b.apply(a.input?
a.input[0]:null,[a.selectedYear,a.selectedMonth+1,a])},_getNumberOfMonths:function(a){a=this._get(a,"numberOfMonths");return a==null?[1,1]:typeof a=="number"?[1,a]:a},_getMinMaxDate:function(a,b){return this._determineDate(a,this._get(a,b+"Date"),null)},_getDaysInMonth:function(a,b){return 32-this._daylightSavingAdjust(new Date(a,b,32)).getDate()},_getFirstDayOfMonth:function(a,b){return(new Date(a,b,1)).getDay()},_canAdjustMonth:function(a,b,c,e){var f=this._getNumberOfMonths(a);c=this._daylightSavingAdjust(new Date(c,
e+(b<0?b:f[0]*f[1]),1));b<0&&c.setDate(this._getDaysInMonth(c.getFullYear(),c.getMonth()));return this._isInRange(a,c)},_isInRange:function(a,b){var c=this._getMinMaxDate(a,"min");a=this._getMinMaxDate(a,"max");return(!c||b.getTime()>=c.getTime())&&(!a||b.getTime()<=a.getTime())},_getFormatConfig:function(a){var b=this._get(a,"shortYearCutoff");b=typeof b!="string"?b:(new Date).getFullYear()%100+parseInt(b,10);return{shortYearCutoff:b,dayNamesShort:this._get(a,"dayNamesShort"),dayNames:this._get(a,"dayNames"),monthNamesShort:this._get(a,"monthNamesShort"),monthNames:this._get(a,"monthNames")}},_formatDate:function(a,b,c,e){if(!b){a.currentDay=a.selectedDay;a.currentMonth=a.selectedMonth;a.currentYear=a.selectedYear}b=b?typeof b=="object"?b:this._daylightSavingAdjust(new Date(e,c,b)):this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return this.formatDate(this._get(a,"dateFormat"),b,this._getFormatConfig(a))}});d.fn.datepicker=function(a){if(!this.length)return this;
if(!d.datepicker.initialized){d(document).mousedown(d.datepicker._checkExternalClick).find("body").append(d.datepicker.dpDiv);d.datepicker.initialized=true}var b=Array.prototype.slice.call(arguments,1);if(typeof a=="string"&&(a=="isDisabled"||a=="getDate"||a=="widget"))return d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this[0]].concat(b));if(a=="option"&&arguments.length==2&&typeof arguments[1]=="string")return d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this[0]].concat(b));return this.each(function(){typeof a=="string"?d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this].concat(b)):d.datepicker._attachDatepicker(this,a)})};d.datepicker=new M;d.datepicker.initialized=false;d.datepicker.uuid=(new Date).getTime();d.datepicker.version="1.8.16";window["DP_jQuery_"+B]=d})(jQuery);;;
(function($){
$.extend({
tablesorter:new function(){
var parsers=[],widgets=[];
this.defaults={
cssHeader:"header",
cssAsc:"headerSortUp",
cssDesc:"headerSortDown",
sortInitialOrder:"asc",
sortMultiSortKey:"shiftKey",
sortForce:null,
sortAppend:null,
textExtraction:"simple",
parsers:{},
widgets:[],
widgetZebra:{css:["even","odd"]},
headers:{},
widthFixed:false,
cancelSelection:true,
sortList:[],
headerList:[],
dateFormat:"us",
decimal:'.',
debug:false};
function benchmark(s,d){
log(s+","+(new Date().getTime()-d.getTime())+"ms");}
this.benchmark=benchmark;
function log(s){
if(typeof console!="undefined"&&typeof console.debug!="undefined"){
console.log(s);}else{
alert(s);}}
function buildParserCache(table,$headers){
if(table.config.debug){var parsersDebug="";}
var rows=table.tBodies[0].rows;
if(table.tBodies[0].rows[0]){
var list=[],cells=rows[0].cells,l=cells.length;
for(var i=0;i<l;i++){
var p=false;
if($.metadata&&($($headers[i]).metadata()&&$($headers[i]).metadata().sorter)){
p=getParserById($($headers[i]).metadata().sorter);}else if((table.config.headers[i]&&table.config.headers[i].sorter)){
p=getParserById(table.config.headers[i].sorter);}
if(!p){
p=detectParserForColumn(table,cells[i]);}
if(table.config.debug){parsersDebug+="column:"+i+" parser:"+p.id+"\n";}
list.push(p);}}
if(table.config.debug){log(parsersDebug);}
return list;};
function detectParserForColumn(table,node){
var l=parsers.length;
for(var i=1;i<l;i++){
if(parsers[i].is($.trim(getElementText(table.config,node)),table,node)){
return parsers[i];}}
return parsers[0];}
function getParserById(name){
var l=parsers.length;
for(var i=0;i<l;i++){
if(parsers[i].id.toLowerCase()==name.toLowerCase()){
return parsers[i];}}
return false;}
function buildCache(table){
if(table.config.debug){var cacheTime=new Date();}
var totalRows=(table.tBodies[0]&&table.tBodies[0].rows.length)||0,
totalCells=(table.tBodies[0].rows[0]&&table.tBodies[0].rows[0].cells.length)||0,
parsers=table.config.parsers,
cache={row:[],normalized:[]};
for(var i=0;i<totalRows;++i){
var c=table.tBodies[0].rows[i],cols=[];
cache.row.push($(c));
for(var j=0;j<totalCells;++j){
cols.push(parsers[j].format(getElementText(table.config,c.cells[j]),table,c.cells[j]));}
cols.push(i);
cache.normalized.push(cols);
cols=null;};
if(table.config.debug){benchmark("Building cache for "+totalRows+" rows:",cacheTime);}
return cache;};
function getElementText(config,node){
if(!node)return"";
var t="";
if(config.textExtraction=="simple"){
if(node.childNodes[0]&&node.childNodes[0].hasChildNodes()){
t=node.childNodes[0].innerHTML;}else{
t=node.innerHTML;}}else{
if(typeof(config.textExtraction)=="function"){
t=config.textExtraction(node);}else{
t=$(node).text();}}
return t;}
function appendToTable(table,cache){
if(table.config.debug){var appendTime=new Date()}
var c=cache,
r=c.row,
n=c.normalized,
totalRows=n.length,
checkCell=(n[0].length-1),
tableBody=$(table.tBodies[0]),
rows=[];
for(var i=0;i<totalRows;i++){
rows.push(r[n[i][checkCell]]);
if(!table.config.appender){
var o=r[n[i][checkCell]];
var l=o.length;
for(var j=0;j<l;j++){
tableBody[0].appendChild(o[j]);}}}
if(table.config.appender){
table.config.appender(table,rows);}
rows=null;
if(table.config.debug){benchmark("Rebuilt table:",appendTime);}
applyWidget(table);
setTimeout(function(){
$(table).trigger("sortEnd");},0);};
function buildHeaders(table){
if(table.config.debug){var time=new Date();}
var meta=($.metadata)?true:false,tableHeadersRows=[];
for(var i=0;i<table.tHead.rows.length;i++){tableHeadersRows[i]=0;};
$tableHeaders=$("thead th",table);
$tableHeaders.each(function(index){
this.count=0;
this.column=index;
this.order=formatSortingOrder(table.config.sortInitialOrder);
if(checkHeaderMetadata(this)||checkHeaderOptions(table,index))this.sortDisabled=true;
if(!this.sortDisabled){
$(this).addClass(table.config.cssHeader);}
table.config.headerList[index]=this;});
if(table.config.debug){benchmark("Built headers:",time);log($tableHeaders);}
return $tableHeaders;};
function checkCellColSpan(table,rows,row){
var arr=[],r=table.tHead.rows,c=r[row].cells;
for(var i=0;i<c.length;i++){
var cell=c[i];
if(cell.colSpan>1){
arr=arr.concat(checkCellColSpan(table,headerArr,row++));}else{
if(table.tHead.length==1||(cell.rowSpan>1||!r[row+1])){
arr.push(cell);}}}
return arr;};
function checkHeaderMetadata(cell){
if(($.metadata)&&($(cell).metadata().sorter===false)){return true;};
return false;}
function checkHeaderOptions(table,i){
if((table.config.headers[i])&&(table.config.headers[i].sorter===false)){return true;};
return false;}
function applyWidget(table){
var c=table.config.widgets;
var l=c.length;
for(var i=0;i<l;i++){
getWidgetById(c[i]).format(table);}}
function getWidgetById(name){
var l=widgets.length;
for(var i=0;i<l;i++){
if(widgets[i].id.toLowerCase()==name.toLowerCase()){
return widgets[i];}}};
function formatSortingOrder(v){
if(typeof(v)!="Number"){
i=(v.toLowerCase()=="desc")?1:0;}else{
i=(v==(0||1))?v:0;}
return i;}
function isValueInArray(v,a){
var l=a.length;
for(var i=0;i<l;i++){
if(a[i][0]==v){
return true;}}
return false;}
function setHeadersCss(table,$headers,list,css){
$headers.removeClass(css[0]).removeClass(css[1]);
var h=[];
$headers.each(function(offset){
if(!this.sortDisabled){
h[this.column]=$(this);}});
var l=list.length;
for(var i=0;i<l;i++){
h[list[i][0]].addClass(css[list[i][1]]);}}
function fixColumnWidth(table,$headers){
var c=table.config;
if(c.widthFixed){
var colgroup=$('<colgroup>');
$("tr:first td",table.tBodies[0]).each(function(){
colgroup.append($('<col>').css('width',$(this).width()));});
$(table).prepend(colgroup);};}
function updateHeaderSortCount(table,sortList){
var c=table.config,l=sortList.length;
for(var i=0;i<l;i++){
var s=sortList[i],o=c.headerList[s[0]];
o.count=s[1];
o.count++;}}
function multisort(table,sortList,cache){
if(table.config.debug){var sortTime=new Date();}
var dynamicExp="var sortWrapper = function(a,b) {",l=sortList.length;
for(var i=0;i<l;i++){
var c=sortList[i][0];
var order=sortList[i][1];
var s=(getCachedSortType(table.config.parsers,c)=="text")?((order==0)?"sortText":"sortTextDesc"):((order==0)?"sortNumeric":"sortNumericDesc");
var e="e"+i;
dynamicExp+="var "+e+" = "+s+"(a["+c+"],b["+c+"]); ";
dynamicExp+="if("+e+") { return "+e+"; } ";
dynamicExp+="else { ";}
var orgOrderCol=cache.normalized[0].length-1;
dynamicExp+="return a["+orgOrderCol+"]-b["+orgOrderCol+"];";
for(var i=0;i<l;i++){
dynamicExp+="}; ";}
dynamicExp+="return 0; ";
dynamicExp+="}; ";
eval(dynamicExp);
cache.normalized.sort(sortWrapper);
if(table.config.debug){benchmark("Sorting on "+sortList.toString()+" and dir "+order+" time:",sortTime);}
return cache;};
function sortText(a,b){
return((a<b)?-1:((a>b)?1:0));};
function sortTextDesc(a,b){
return((b<a)?-1:((b>a)?1:0));};
function sortNumeric(a,b){
return a-b;};
function sortNumericDesc(a,b){
return b-a;};
function getCachedSortType(parsers,i){
return parsers[i].type;};
this.construct=function(settings){
return this.each(function(){
if(!this.tHead||!this.tBodies)return;
var $this,$document,$headers,cache,config,shiftDown=0,sortOrder;
this.config={};
config=$.extend(this.config,$.tablesorter.defaults,settings);
$this=$(this);
$headers=buildHeaders(this);
this.config.parsers=buildParserCache(this,$headers);
cache=buildCache(this);
var sortCSS=[config.cssDesc,config.cssAsc];
fixColumnWidth(this);
$headers.click(function(e){
$this.trigger("sortStart");
var totalRows=($this[0].tBodies[0]&&$this[0].tBodies[0].rows.length)||0;
if(!this.sortDisabled&&totalRows>0){
var $cell=$(this);
var i=this.column;
this.order=this.count++%2;
if(!e[config.sortMultiSortKey]){
config.sortList=[];
if(config.sortForce!=null){
var a=config.sortForce;
for(var j=0;j<a.length;j++){
if(a[j][0]!=i){
config.sortList.push(a[j]);}}}
config.sortList.push([i,this.order]);}else{
if(isValueInArray(i,config.sortList)){
for(var j=0;j<config.sortList.length;j++){
var s=config.sortList[j],o=config.headerList[s[0]];
if(s[0]==i){
o.count=s[1];
o.count++;
s[1]=o.count%2;}}}else{
config.sortList.push([i,this.order]);}};
setTimeout(function(){
setHeadersCss($this[0],$headers,config.sortList,sortCSS);
appendToTable($this[0],multisort($this[0],config.sortList,cache));},1);
return false;}}).mousedown(function(){
if(config.cancelSelection){
this.onselectstart=function(){return false};
return false;}});
$this.bind("update",function(){
this.config.parsers=buildParserCache(this,$headers);
cache=buildCache(this);}).bind("sorton",function(e,list){
$(this).trigger("sortStart");
config.sortList=list;
var sortList=config.sortList;
updateHeaderSortCount(this,sortList);
setHeadersCss(this,$headers,sortList,sortCSS);
appendToTable(this,multisort(this,sortList,cache));}).bind("appendCache",function(){
appendToTable(this,cache);}).bind("applyWidgetId",function(e,id){
getWidgetById(id).format(this);}).bind("applyWidgets",function(){
applyWidget(this);});
if($.metadata&&($(this).metadata()&&$(this).metadata().sortlist)){
config.sortList=$(this).metadata().sortlist;}
if(config.sortList.length>0){
$this.trigger("sorton",[config.sortList]);}
applyWidget(this);});};
this.addParser=function(parser){
var l=parsers.length,a=true;
for(var i=0;i<l;i++){
if(parsers[i].id.toLowerCase()==parser.id.toLowerCase()){
a=false;}}
if(a){parsers.push(parser);};};
this.addWidget=function(widget){
widgets.push(widget);};
this.formatFloat=function(s){
var i=parseFloat(s);
return(isNaN(i))?0:i;};
this.formatInt=function(s){
var i=parseInt(s);
return(isNaN(i))?0:i;};
this.isDigit=function(s,config){
var DECIMAL='\\'+config.decimal;
var exp='/(^[+]?0('+DECIMAL+'0+)?$)|(^([-+]?[1-9][0-9]*)$)|(^([-+]?((0?|[1-9][0-9]*)'+DECIMAL+'(0*[1-9][0-9]*)))$)|(^[-+]?[1-9]+[0-9]*'+DECIMAL+'0+$)/';
return RegExp(exp).test($.trim(s));};
this.clearTableBody=function(table){
if($.browser.msie){
function empty(){
while(this.firstChild)this.removeChild(this.firstChild);}
empty.apply(table.tBodies[0]);}else{
table.tBodies[0].innerHTML="";}};}});
$.fn.extend({
tablesorter:$.tablesorter.construct});
var ts=$.tablesorter;
ts.addParser({
id:"text",
is:function(s){
return true;},
format:function(s){
return $.trim(s.toLowerCase());},
type:"text"});
ts.addParser({
id:"digit",
is:function(s,table){
var c=table.config;
return $.tablesorter.isDigit(s,c);},
format:function(s){
return $.tablesorter.formatFloat(s);},
type:"numeric"});
ts.addParser({
id:"currency",
is:function(s){
return/^[Â£$â‚¬?.]/.test(s);},
format:function(s){
return $.tablesorter.formatFloat(s.replace(new RegExp(/[^0-9.]/g),""));},
type:"numeric"});
ts.addParser({
id:"ipAddress",
is:function(s){
return/^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/.test(s);},
format:function(s){
var a=s.split("."),r="",l=a.length;
for(var i=0;i<l;i++){
var item=a[i];
if(item.length==2){
r+="0"+item;}else{
r+=item;}}
return $.tablesorter.formatFloat(r);},
type:"numeric"});
ts.addParser({
id:"url",
is:function(s){
return/^(https?|ftp|file):\/\/$/.test(s);},
format:function(s){
return jQuery.trim(s.replace(new RegExp(/(https?|ftp|file):\/\//),''));},
type:"text"});
ts.addParser({
id:"isoDate",
is:function(s){
return/^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(s);},
format:function(s){
return $.tablesorter.formatFloat((s!="")?new Date(s.replace(new RegExp(/-/g),"/")).getTime():"0");},
type:"numeric"});
ts.addParser({
id:"percent",
is:function(s){
return/\%$/.test($.trim(s));},
format:function(s){
return $.tablesorter.formatFloat(s.replace(new RegExp(/%/g),""));},
type:"numeric"});
ts.addParser({
id:"usLongDate",
is:function(s){
return s.match(new RegExp(/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/));},
format:function(s){
return $.tablesorter.formatFloat(new Date(s).getTime());},
type:"numeric"});
ts.addParser({
id:"shortDate",
is:function(s){
return(/\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4}/).test(s);},
format:function(s,table){
var c=table.config;
s=s.replace(/\-/g,"/");
if(c.dateFormat=="us"){
s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/,"$3/$1/$2");}else if(c.dateFormat=="uk"){
s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/,"$3/$2/$1");}else if(c.dateFormat=="dd/mm/yy"||c.dateFormat=="dd-mm-yy"){
s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/,"$1/$2/$3");}
return $.tablesorter.formatFloat(new Date(s).getTime());},
type:"numeric"});
ts.addParser({
id:"time",
is:function(s){
return/^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/.test(s);},
format:function(s){
return $.tablesorter.formatFloat(new Date("2000/01/01 "+s).getTime());},
type:"numeric"});
ts.addParser({
id:"metadata",
is:function(s){
return false;},
format:function(s,table,cell){
var c=table.config,p=(!c.parserMetadataName)?'sortValue':c.parserMetadataName;
return $(cell).metadata()[p];},
type:"numeric"});
ts.addWidget({
id:"zebra",
format:function(table){
if(table.config.debug){var time=new Date();}
$("tr:visible",table.tBodies[0]).filter(':even').removeClass(table.config.widgetZebra.css[1]).addClass(table.config.widgetZebra.css[0]).end().filter(':odd').removeClass(table.config.widgetZebra.css[0]).addClass(table.config.widgetZebra.css[1]);
if(table.config.debug){$.tablesorter.benchmark("Applying Zebra widget",time);}}});})(jQuery);;
(function(a){a.fn.bgiframe=(a.browser.msie&&/msie 6\.0/i.test(navigator.userAgent)?function(d){d=a.extend({top:"auto",left:"auto",width:"auto",height:"auto",opacity:true,src:"javascript:false;"},d);var c='<iframe class="bgiframe"frameborder="0"tabindex="-1"src="'+d.src+'"style="display:block;position:absolute;z-index:-1;'+(d.opacity!==false?"filter:Alpha(Opacity='0');":"")+"top:"+(d.top=="auto"?"expression(((parseInt(this.parentNode.currentStyle.borderTopWidth)||0)*-1)+'px')":b(d.top))+";left:"+(d.left=="auto"?"expression(((parseInt(this.parentNode.currentStyle.borderLeftWidth)||0)*-1)+'px')":b(d.left))+";width:"+(d.width=="auto"?"expression(this.parentNode.offsetWidth+'px')":b(d.width))+";height:"+(d.height=="auto"?"expression(this.parentNode.offsetHeight+'px')":b(d.height))+';"/>';return this.each(function(){if(a(this).children("iframe.bgiframe").length===0){this.insertBefore(document.createElement(c),this.firstChild)}})}:function(){return this});a.fn.bgIframe=a.fn.bgiframe;function b(c){return c&&c.constructor===Number?c+"px":c}})(jQuery);;
jQuery.cookie=function(name,value,options){
if(typeof value!='undefined'){
options=options||{};
if(value===null){
value='';
options.expires=-1;}
var expires='';
if(options.expires&&(typeof options.expires=='number'||options.expires.toUTCString)){
var date;
if(typeof options.expires=='number'){
date=new Date();
date.setTime(date.getTime()+(options.expires*24*60*60*1000));}else{
date=options.expires;}
expires='; expires='+date.toUTCString();}
var path=options.path?'; path='+(options.path):'';
var domain=options.domain?'; domain='+(options.domain):'';
var secure=options.secure?'; secure':'';
document.cookie=[name,'=',encodeURIComponent(value),expires,path,domain,secure].join('');}else{
var cookieValue=null;
if(document.cookie&&document.cookie!=''){
var cookies=document.cookie.split(';');
for(var i=0;i<cookies.length;i++){
var cookie=jQuery.trim(cookies[i]);
if(cookie.substring(0,name.length+1)==(name+'=')){
cookieValue=decodeURIComponent(cookie.substring(name.length+1));
break;}}}
return cookieValue;}};;;(function($){
$.fn.ajaxSubmit=function(options){
if(!this.length){
log('ajaxSubmit: skipping submit process - no element selected');
return this;}
var method,action,url,$form=this;
if(typeof options=='function'){
options={success:options};}
method=this.attr('method');
action=this.attr('action');
url=(typeof action==='string')?$.trim(action):'';
url=url||window.location.href||'';
if(url){
url=(url.match(/^([^#]+)/)||[])[1];}
options=$.extend(true,{
url:url,
success:$.ajaxSettings.success,
type:method||'GET',
iframeSrc:/^https/i.test(window.location.href||'')?'javascript:false':'about:blank'},options);
var veto={};
this.trigger('form-pre-serialize',[this,options,veto]);
if(veto.veto){
log('ajaxSubmit: submit vetoed via form-pre-serialize trigger');
return this;}
if(options.beforeSerialize&&options.beforeSerialize(this,options)===false){
log('ajaxSubmit: submit aborted via beforeSerialize callback');
return this;}
var n,v,a=this.formToArray(options.semantic);
if(options.data){
options.extraData=options.data;
for(n in options.data){
if($.isArray(options.data[n])){
for(var k in options.data[n]){
a.push({name:n,value:options.data[n][k]});}}
else{
v=options.data[n];
v=$.isFunction(v)?v():v;
a.push({name:n,value:v});}}}
if(options.beforeSubmit&&options.beforeSubmit(a,this,options)===false){
log('ajaxSubmit: submit aborted via beforeSubmit callback');
return this;}
this.trigger('form-submit-validate',[a,this,options,veto]);
if(veto.veto){
log('ajaxSubmit: submit vetoed via form-submit-validate trigger');
return this;}
var q=$.param(a);
if(options.type.toUpperCase()=='GET'){
options.url+=(options.url.indexOf('?')>=0?'&':'?')+q;
options.data=null;}
else{
options.data=q;}
var callbacks=[];
if(options.resetForm){
callbacks.push(function(){$form.resetForm();});}
if(options.clearForm){
callbacks.push(function(){$form.clearForm();});}
if(!options.dataType&&options.target){
var oldSuccess=options.success||function(){};
callbacks.push(function(data){
var fn=options.replaceTarget?'replaceWith':'html';
$(options.target)[fn](data).each(oldSuccess,arguments);});}
else if(options.success){
callbacks.push(options.success);}
options.success=function(data,status,xhr){
var context=options.context||options;
for(var i=0,max=callbacks.length;i<max;i++){
callbacks[i].apply(context,[data,status,xhr||$form,$form]);}};
var fileInputs=$('input:file',this).length>0;
var mp='multipart/form-data';
var multipart=($form.attr('enctype')==mp||$form.attr('encoding')==mp);
if(options.iframe!==false&&(fileInputs||options.iframe||multipart)){
if(options.closeKeepAlive){
$.get(options.closeKeepAlive,function(){fileUpload(a);});}
else{
fileUpload(a);}}
else{
if($.browser.msie&&method=='get'){
var ieMeth=$form[0].getAttribute('method');
if(typeof ieMeth==='string')
options.type=ieMeth;}
$.ajax(options);}
this.trigger('form-submit-notify',[this,options]);
return this;
function fileUpload(a){
var form=$form[0],el,i,s,g,id,$io,io,xhr,sub,n,timedOut,timeoutHandle;
var useProp=!!$.fn.prop;
if(a){
for(i=0;i<a.length;i++){
el=$(form[a[i].name]);
el[useProp?'prop':'attr']('disabled',false);}}
if($(':input[name=submit],:input[id=submit]',form).length){
alert('Error: Form elements must not have name or id of "submit".');
return;}
s=$.extend(true,{},$.ajaxSettings,options);
s.context=s.context||s;
id='jqFormIO'+(new Date().getTime());
if(s.iframeTarget){
$io=$(s.iframeTarget);
n=$io.attr('name');
if(n==null)
$io.attr('name',id);
else
id=n;}
else{
$io=$('<iframe name="'+id+'" src="'+s.iframeSrc+'" />');
$io.css({position:'absolute',top:'-1000px',left:'-1000px'});}
io=$io[0];
xhr={
aborted:0,
responseText:null,
responseXML:null,
status:0,
statusText:'n/a',
getAllResponseHeaders:function(){},
getResponseHeader:function(){},
setRequestHeader:function(){},
abort:function(status){
var e=(status==='timeout'?'timeout':'aborted');
log('aborting upload... '+e);
this.aborted=1;
$io.attr('src',s.iframeSrc);
xhr.error=e;
s.error&&s.error.call(s.context,xhr,e,status);
g&&$.event.trigger("ajaxError",[xhr,s,e]);
s.complete&&s.complete.call(s.context,xhr,e);}};
g=s.global;
if(g&&!$.active++){
$.event.trigger("ajaxStart");}
if(g){
$.event.trigger("ajaxSend",[xhr,s]);}
if(s.beforeSend&&s.beforeSend.call(s.context,xhr,s)===false){
if(s.global){
$.active--;}
return;}
if(xhr.aborted){
return;}
sub=form.clk;
if(sub){
n=sub.name;
if(n&&!sub.disabled){
s.extraData=s.extraData||{};
s.extraData[n]=sub.value;
if(sub.type=="image"){
s.extraData[n+'.x']=form.clk_x;
s.extraData[n+'.y']=form.clk_y;}}}
var CLIENT_TIMEOUT_ABORT=1;
var SERVER_ABORT=2;
function getDoc(frame){
var doc=frame.contentWindow?frame.contentWindow.document:frame.contentDocument?frame.contentDocument:frame.document;
return doc;}
function doSubmit(){
var t=$form.attr('target'),a=$form.attr('action');
form.setAttribute('target',id);
if(!method){
form.setAttribute('method','POST');}
if(a!=s.url){
form.setAttribute('action',s.url);}
if(!s.skipEncodingOverride&&(!method||/post/i.test(method))){
$form.attr({
encoding:'multipart/form-data',
enctype:'multipart/form-data'});}
if(s.timeout){
timeoutHandle=setTimeout(function(){timedOut=true;cb(CLIENT_TIMEOUT_ABORT);},s.timeout);}
function checkState(){
try{
var state=getDoc(io).readyState;
log('state = '+state);
if(state&&state.toLowerCase()=='uninitialized')
setTimeout(checkState,50);}
catch(e){
log('Server abort: ',e,' (',e.name,')');
cb(SERVER_ABORT);
timeoutHandle&&clearTimeout(timeoutHandle);
timeoutHandle=undefined;}}
var extraInputs=[];
try{
if(s.extraData){
for(var n in s.extraData){
extraInputs.push(
$('<input type="hidden" name="'+n+'" />').attr('value',s.extraData[n]).appendTo(form)[0]);}}
if(!s.iframeTarget){
$io.appendTo('body');
io.attachEvent?io.attachEvent('onload',cb):io.addEventListener('load',cb,false);}
setTimeout(checkState,15);
form.submit();}
finally{
form.setAttribute('action',a);
if(t){
form.setAttribute('target',t);}else{
$form.removeAttr('target');}
$(extraInputs).remove();}}
if(s.forceSync){
doSubmit();}
else{
setTimeout(doSubmit,10);}
var data,doc,domCheckCount=50,callbackProcessed;
function cb(e){
if(xhr.aborted||callbackProcessed){
return;}
try{
doc=getDoc(io);}
catch(ex){
log('cannot access response document: ',ex);
e=SERVER_ABORT;}
if(e===CLIENT_TIMEOUT_ABORT&&xhr){
xhr.abort('timeout');
return;}
else if(e==SERVER_ABORT&&xhr){
xhr.abort('server abort');
return;}
if(!doc||doc.location.href==s.iframeSrc){
if(!timedOut)
return;}
io.detachEvent?io.detachEvent('onload',cb):io.removeEventListener('load',cb,false);
var status='success',errMsg;
try{
if(timedOut){
throw'timeout';}
var isXml=s.dataType=='xml'||doc.XMLDocument||$.isXMLDoc(doc);
log('isXml='+isXml);
if(!isXml&&window.opera&&(doc.body==null||doc.body.innerHTML=='')){
if(--domCheckCount){
log('requeing onLoad callback, DOM not available');
setTimeout(cb,250);
return;}}
var docRoot=doc.body?doc.body:doc.documentElement;
xhr.responseText=docRoot?docRoot.innerHTML:null;
xhr.responseXML=doc.XMLDocument?doc.XMLDocument:doc;
if(isXml)
s.dataType='xml';
xhr.getResponseHeader=function(header){
var headers={'content-type':s.dataType};
return headers[header];};
if(docRoot){
xhr.status=Number(docRoot.getAttribute('status'))||xhr.status;
xhr.statusText=docRoot.getAttribute('statusText')||xhr.statusText;}
var dt=s.dataType||'';
var scr=/(json|script|text)/.test(dt.toLowerCase());
if(scr||s.textarea){
var ta=doc.getElementsByTagName('textarea')[0];
if(ta){
xhr.responseText=ta.value;
xhr.status=Number(ta.getAttribute('status'))||xhr.status;
xhr.statusText=ta.getAttribute('statusText')||xhr.statusText;}
else if(scr){
var pre=doc.getElementsByTagName('pre')[0];
var b=doc.getElementsByTagName('body')[0];
if(pre){
xhr.responseText=pre.textContent?pre.textContent:pre.innerHTML;}
else if(b){
xhr.responseText=b.innerHTML;}}}
else if(s.dataType=='xml'&&!xhr.responseXML&&xhr.responseText!=null){
xhr.responseXML=toXml(xhr.responseText);}
try{
data=httpData(xhr,s.dataType,s);}
catch(e){
status='parsererror';
xhr.error=errMsg=(e||status);}}
catch(e){
log('error caught: ',e);
status='error';
xhr.error=errMsg=(e||status);}
if(xhr.aborted){
log('upload aborted');
status=null;}
if(xhr.status){
status=(xhr.status>=200&&xhr.status<300||xhr.status===304)?'success':'error';}
if(status==='success'){
s.success&&s.success.call(s.context,data,'success',xhr);
g&&$.event.trigger("ajaxSuccess",[xhr,s]);}
else if(status){
if(errMsg==undefined)
errMsg=xhr.statusText;
s.error&&s.error.call(s.context,xhr,status,errMsg);
g&&$.event.trigger("ajaxError",[xhr,s,errMsg]);}
g&&$.event.trigger("ajaxComplete",[xhr,s]);
if(g&&!--$.active){
$.event.trigger("ajaxStop");}
s.complete&&s.complete.call(s.context,xhr,status);
callbackProcessed=true;
if(s.timeout)
clearTimeout(timeoutHandle);
setTimeout(function(){
if(!s.iframeTarget)
$io.remove();
xhr.responseXML=null;},100);}
var toXml=$.parseXML||function(s,doc){
if(window.ActiveXObject){
doc=new ActiveXObject('Microsoft.XMLDOM');
doc.async='false';
doc.loadXML(s);}
else{
doc=(new DOMParser()).parseFromString(s,'text/xml');}
return(doc&&doc.documentElement&&doc.documentElement.nodeName!='parsererror')?doc:null;};
var parseJSON=$.parseJSON||function(s){
return window['eval']('('+s+')');};
var httpData=function(xhr,type,s){
var ct=xhr.getResponseHeader('content-type')||'',
xml=type==='xml'||!type&&ct.indexOf('xml')>=0,
data=xml?xhr.responseXML:xhr.responseText;
if(xml&&data.documentElement.nodeName==='parsererror'){
$.error&&$.error('parsererror');}
if(s&&s.dataFilter){
data=s.dataFilter(data,type);}
if(typeof data==='string'){
if(type==='json'||!type&&ct.indexOf('json')>=0){
data=parseJSON(data);}else if(type==="script"||!type&&ct.indexOf("javascript")>=0){
$.globalEval(data);}}
return data;};}};
$.fn.ajaxForm=function(options){
if(this.length===0){
var o={s:this.selector,c:this.context};
if(!$.isReady&&o.s){
log('DOM not ready, queuing ajaxForm');
$(function(){
$(o.s,o.c).ajaxForm(options);});
return this;}
log('terminating; zero elements found by selector'+($.isReady?'':' (DOM not ready)'));
return this;}
return this.ajaxFormUnbind().bind('submit.form-plugin',function(e){
if(!e.isDefaultPrevented()){
e.preventDefault();
$(this).ajaxSubmit(options);}}).bind('click.form-plugin',function(e){
var target=e.target;
var $el=$(target);
if(!($el.is(":submit,input:image"))){
var t=$el.closest(':submit');
if(t.length==0){
return;}
target=t[0];}
var form=this;
form.clk=target;
if(target.type=='image'){
if(e.offsetX!=undefined){
form.clk_x=e.offsetX;
form.clk_y=e.offsetY;}else if(typeof $.fn.offset=='function'){
var offset=$el.offset();
form.clk_x=e.pageX-offset.left;
form.clk_y=e.pageY-offset.top;}else{
form.clk_x=e.pageX-target.offsetLeft;
form.clk_y=e.pageY-target.offsetTop;}}
setTimeout(function(){form.clk=form.clk_x=form.clk_y=null;},100);});};
$.fn.ajaxFormUnbind=function(){
return this.unbind('submit.form-plugin click.form-plugin');};
$.fn.formToArray=function(semantic){
var a=[];
if(this.length===0){
return a;}
var form=this[0];
var els=semantic?form.getElementsByTagName('*'):form.elements;
if(!els){
return a;}
var i,j,n,v,el,max,jmax;
for(i=0,max=els.length;i<max;i++){
el=els[i];
n=el.name;
if(!n){
continue;}
if(semantic&&form.clk&&el.type=="image"){
if(!el.disabled&&form.clk==el){
a.push({name:n,value:$(el).val()});
a.push({name:n+'.x',value:form.clk_x},{name:n+'.y',value:form.clk_y});}
continue;}
v=$.fieldValue(el,true);
if(v&&v.constructor==Array){
for(j=0,jmax=v.length;j<jmax;j++){
a.push({name:n,value:v[j]});}}
else if(v!==null&&typeof v!='undefined'){
a.push({name:n,value:v});}}
if(!semantic&&form.clk){
var $input=$(form.clk),input=$input[0];
n=input.name;
if(n&&!input.disabled&&input.type=='image'){
a.push({name:n,value:$input.val()});
a.push({name:n+'.x',value:form.clk_x},{name:n+'.y',value:form.clk_y});}}
return a;};
$.fn.formSerialize=function(semantic){
return $.param(this.formToArray(semantic));};
$.fn.fieldSerialize=function(successful){
var a=[];
this.each(function(){
var n=this.name;
if(!n){
return;}
var v=$.fieldValue(this,successful);
if(v&&v.constructor==Array){
for(var i=0,max=v.length;i<max;i++){
a.push({name:n,value:v[i]});}}
else if(v!==null&&typeof v!='undefined'){
a.push({name:this.name,value:v});}});
return $.param(a);};
$.fn.fieldValue=function(successful){
for(var val=[],i=0,max=this.length;i<max;i++){
var el=this[i];
var v=$.fieldValue(el,successful);
if(v===null||typeof v=='undefined'||(v.constructor==Array&&!v.length)){
continue;}
v.constructor==Array?$.merge(val,v):val.push(v);}
return val;};
$.fieldValue=function(el,successful){
var n=el.name,t=el.type,tag=el.tagName.toLowerCase();
if(successful===undefined){
successful=true;}
if(successful&&(!n||el.disabled||t=='reset'||t=='button'||
(t=='checkbox'||t=='radio')&&!el.checked||
(t=='submit'||t=='image')&&el.form&&el.form.clk!=el||
tag=='select'&&el.selectedIndex==-1)){
return null;}
if(tag=='select'){
var index=el.selectedIndex;
if(index<0){
return null;}
var a=[],ops=el.options;
var one=(t=='select-one');
var max=(one?index+1:ops.length);
for(var i=(one?index:0);i<max;i++){
var op=ops[i];
if(op.selected){
var v=op.value;
if(!v){
v=(op.attributes&&op.attributes['value']&&!(op.attributes['value'].specified))?op.text:op.value;}
if(one){
return v;}
a.push(v);}}
return a;}
return $(el).val();};
$.fn.clearForm=function(){
return this.each(function(){
$('input,select,textarea',this).clearFields();});};
$.fn.clearFields=$.fn.clearInputs=function(){
var re=/^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i;
return this.each(function(){
var t=this.type,tag=this.tagName.toLowerCase();
if(re.test(t)||tag=='textarea'){
this.value='';}
else if(t=='checkbox'||t=='radio'){
this.checked=false;}
else if(tag=='select'){
this.selectedIndex=-1;}});};
$.fn.resetForm=function(){
return this.each(function(){
if(typeof this.reset=='function'||(typeof this.reset=='object'&&!this.reset.nodeType)){
this.reset();}});};
$.fn.enable=function(b){
if(b===undefined){
b=true;}
return this.each(function(){
this.disabled=!b;});};
$.fn.selected=function(select){
if(select===undefined){
select=true;}
return this.each(function(){
var t=this.type;
if(t=='checkbox'||t=='radio'){
this.checked=select;}
else if(this.tagName.toLowerCase()=='option'){
var $sel=$(this).parent('select');
if(select&&$sel[0]&&$sel[0].type=='select-one'){
$sel.find('option').selected(false);}
this.selected=select;}});};
function log(){
var msg='[jquery.form] '+Array.prototype.join.call(arguments,'');
if(window.console&&window.console.log){
window.console.log(msg);}
else if(window.opera&&window.opera.postError){
window.opera.postError(msg);}};})(jQuery);;
(function($){
var hover='ui-state-hover',
active='ui-state-active',
namespace='.spinner',
buttonRegex=/hide|auto|fast|slow|(\d+)/,
buttonDefault='show',
uiSpinnerClasses='ui-spinner ui-state-default ui-widget ui-widget-content ui-corner-all ';
$.widget('ui.spinner',{
_init:function(){
this._initOptions();
this.value(this._parse(this.element.val()||this.options.value));
this._draw();
this._mousewheel();
if(this.options.buttons!==buttonDefault){
this.buttons.hide();}
this._aria();},
_initOptions:function(){
var self=this,
options=self.options;
var precision=parseInt(options.precision,10);
if(self._step().toString().indexOf('.')!=-1&&precision===0){
var s=self._step().toString();
precision=s.slice(s.indexOf('.')+1,s.length).length;}
if(options.currency){
precision=2;
options.radix=10;
options.groupSeparator=options.groupSeparator||(options.radixPoint===','?'':',');}
options.precision=precision;},
_draw:function(){
var self=this,
options=self.options;
var uiSpinner=self.element.addClass('ui-spinner-input').attr('autocomplete','off').wrap(self._uiSpinnerHtml()).parent().append(self._buttonHtml()).hover(function(){
if(!options.disabled){
$(this).addClass(hover);}
self.hovered=true;
self._hide(false);},function(){
$(this).removeClass(hover);
self.hovered=false;
self._hide(true);});
if(!$.support.opacity&&uiSpinner.css('display')=='inline-block'&&$.browser.version<8){
uiSpinner.css('display','inline');}
this.element.attr('id',function(){
if(this.id){
uiSpinner.attr('id','ui-spinner-'+this.id);}}).bind('keydown'+namespace,function(event){
return self._start(event)?self._keydown(event):false;}).bind('keyup'+namespace,function(event){
if(self.spinning){
self._stop(event);
self._change(event);}}).bind('focus'+namespace,function(){
uiSpinner.addClass(active);
self.focused=true;}).bind('blur'+namespace,function(event){
self._value(self.element.val());
if(!self.hovered){
uiSpinner.removeClass(active);}
self.focused=false;});
if(options.width){
this.element.width(options.width);}
if(options.disabled){
this.disable();}
this.buttons=uiSpinner.find('.ui-spinner-button').bind('mousedown',function(event){
if(self._start(event)===false){
return false;}
self._repeat(null,$(this).hasClass('ui-spinner-up')?1:-1,event);
if(!self.options.disabled){
$(this).addClass(active);
uiSpinner.addClass(active);}}).bind('mouseup',function(event){
if(self.counter==1){
self._spin(($(this).hasClass('ui-spinner-up')?1:-1)*self._step(),event);}
if(self.spinning){
self._stop(event);
self._change(event);}
$(this).removeClass(active);}).hover(function(){
if(!self.options.disabled){
$(this).addClass(hover);}},function(event){
$(this).removeClass(active+' '+hover);
if(self.timer&&self.spinning){
self._stop(event);
self._change(event);}});
self.uiSpinner=uiSpinner;},
_uiSpinnerHtml:function(){
return'<div role="spinbutton" class="'+uiSpinnerClasses+
(this.options.spinnerClass||'')+' ui-spinner-'+this.options.dir+'"></div>';},
_buttonHtml:function(){
return'<a class="ui-spinner-button ui-spinner-up ui-state-default ui-corner-t'+this.options.dir.substr(-1,1)+'"><span class="ui-icon ui-icon-triangle-1-n">&#9650;</span></a>'+'<a class="ui-spinner-button ui-spinner-down ui-state-default ui-corner-b'+this.options.dir.substr(-1,1)+'"><span class="ui-icon ui-icon-triangle-1-s">&#9660;</span></a>';},
_start:function(event){
if(!this.spinning&&this._trigger('start',event,{value:this.value()})!==false){
if(!this.counter){
this.counter=1;}
this.spinning=true;
return true;}
return false},
_spin:function(step,event){
if(this.options.disabled){
return;}
if(!this.counter){
this.counter=1;}
var newVal=this._value()+step*(this.options.incremental&&this.counter>100?this.counter>200?100:10:1);
if(this._trigger('spin',event,{value:newVal})!==false){
this._value(newVal);
this.counter++;}},
_stop:function(event){
this.counter=0;
if(this.timer){
window.clearInterval(this.timer);}
this.element[0].focus();
this.spinning=false;
this._trigger('stop',event);},
_change:function(event){
this._trigger('change',event);},
_repeat:function(i,steps,event){
var self=this;
i=i||100;
if(this.timer){
window.clearInterval(this.timer);}
this.timer=window.setInterval(function(){
self._repeat(self.options.incremental&&self.counter>20?20:i,steps,event);},i);
self._spin(steps*self._step(),event);},
_keydown:function(event){
var o=this.options,
KEYS=$.ui.keyCode;
switch(event.keyCode){
case KEYS.UP:this._repeat(null,event.shiftKey?o.page:1,event);break;
case KEYS.DOWN:this._repeat(null,event.shiftKey?-o.page:-1,event);break;
case KEYS.PAGE_UP:this._repeat(null,o.page,event);break;
case KEYS.PAGE_DOWN:this._repeat(null,-o.page,event);break;
case KEYS.HOME:this._value(this._min());break;
case KEYS.END:this._value(this._max());break;
case KEYS.TAB:
case KEYS.BACKSPACE:
case KEYS.LEFT:
case KEYS.RIGHT:
case KEYS.PERIOD:
case KEYS.NUMPAD_DECIMAL:
case KEYS.NUMPAD_SUBTRACT:
return true;
case KEYS.ENTER:
this.value(this.element.val());
return true;
default:
if((event.keyCode>=96&&event.keyCode<=105)||
(new RegExp('['+this._validChars()+']','i').test(String.fromCharCode(event.keyCode)))){
return true;};}
return false;},
_mousewheel:function(){
var self=this;
if($.fn.mousewheel&&self.options.mouseWheel){
this.element.mousewheel(function(event,delta){
delta=($.browser.opera?-delta/Math.abs(delta):delta);
if(!self._start(event)){
return false;}
self._spin((delta>0?1:-1)*self._step(),event);
if(self.timeout){
window.clearTimeout(self.timeout);}
self.timeout=window.setTimeout(function(){
if(self.spinning){
self._stop(event);
self._change(event);}},400);
event.preventDefault();});}},
_value:function(newVal){
if(!arguments.length){
return this._parse(this.element.val());}
this._setData('value',newVal);},
_getData:function(key){
switch(key){
case'min':
case'max':
case'step':
return this['_'+key]();
break;}
return $.widget.prototype._getData.call(this,key);},
_setData:function(key,value){
switch(key){
case'value':
value=this._parse(value);
if(value<this._min()){
value=this._min();}
if(value>this._max()){
value=this._max();}
break;
case'spinnerClass':
this.uiSpinner.removeClass(this.options.spinnerClass).addClass(uiSpinnerClasses+value);
break;}
$.widget.prototype._setData.call(this,key,value);
this._afterSetData(key,value);
this._aria();},
_afterSetData:function(key,value){
switch(key){
case'buttons':
this._hide('hide');
break;
case'max':
case'min':
case'step':
if(value!=null){
if(this.element.attr(key)){
this.element.attr(key,value);}}
break;
case'width':
this.element.width(value);
break;
case'precision':
case'value':
this._format(this._parse(this.options.value));
break;}},
_aria:function(){
this.uiSpinner&&this.uiSpinner.attr('aria-valuemin',this._min()).attr('aria-valuemax',this._max()).attr('aria-valuenow',this.value());},
_validChars:function(){
var radix=parseInt(this.options.radix);
return'\\-\\'+this.options.radixPoint+(this.options.groupSeparator?'\\'+this.options.groupSeparator:'')+(radix<10?'0-'+radix:'0-9'+(radix>10?'a-'+String.fromCharCode('a'.charCodeAt(0)+radix-11):''));},
_parse:function(val){
if(typeof val=='string'){
if(this.options.groupSeparator){
val=val.replace(new RegExp('\\'+this.options.groupSeparator,'g'),'');}
val=val.replace(new RegExp('[^'+this._validChars()+']','gi'),'').split(this.options.radixPoint);
result=parseInt(val[0]=='-'?0:val[0]||0,this.options.radix);
if(val.length>1){
result+=parseInt(val[1],this.options.radix)/Math.pow(this.options.radix,val[1].length)*
(val[0].substr(0,1)=='-'?-1:1);}
val=result;}
return isNaN(val)?null:val;},
_format:function(num){
var regex=/(\d+)(\d{3})/,
options=this.options,
sym=options.currency||'',
dec=options.precision,
radix=options.radix,
group=options.groupSeparator,
pt=options.radixPoint,
neg=num<0?'-':'';
for(
num=(
isNaN(num)?options.value:radix===10?parseFloat(num,radix).toFixed(dec):parseInt(num,radix)).toString(radix).replace('.',pt);
regex.test(num)&&group;
num=num.replace(regex,'$1'+group+'$2'));
result=num.replace('-','');
while(options.padding&&(result.length<options.padding)){
result='0'+result;}
this.element.val(neg+sym+result);},
_hide:function(hide){
if(this.options.buttons===buttonDefault){
this.buttons.show();
return;}
if(this.options.buttons==='hide'){
this.buttons.hide();
return;}
var self=this,
speed=this.options.buttons==='auto'?400:this.options.buttons;
if(this.timeout){
window.clearTimeout(this.timeout);}
this.timeout=window.setTimeout(function(){
self.buttons.animate({opacity:hide?'hide':'show'},speed);},200);},
_getOption:function(key,defaultValue){
return this._parse(this.options[key]!==null?this.options[key]:this.element.attr(key)?this.element.attr(key):defaultValue);},
_step:function(newVal){
if(!arguments.length){
return this._getOption('step',1);}
this._setData('step',newVal);},
_min:function(newVal){
if(!arguments.length){
return this._getOption('min',-Number.MAX_VALUE);}
this._setData('min',newVal);},
_max:function(newVal){
if(!arguments.length){
return this._getOption('max',Number.MAX_VALUE);}
this._setData('max',newVal);},
destroy:function(){
if($.fn.mousewheel){
this.element.unmousewheel();}
this.element.removeClass('ui-spinner-input').removeAttr('disabled').removeAttr('autocomplete').removeData('spinner').unbind(namespace);
if(this.uiSpinner){
if(this.uiSpinner.parent()[0]!=null){
this.uiSpinner.replaceWith(this.element);}
else{
return this.element.clone(true);}}},
enable:function(){
this.element.removeAttr('disabled').siblings().removeAttr('disabled').parent().removeClass('ui-spinner-disabled ui-state-disabled');
this.options.disabled=false;},
disable:function(){
this.element.attr('disabled',true).siblings().attr('disabled',true).parent().addClass('ui-spinner-disabled ui-state-disabled');
this.options.disabled=true;},
value:function(newVal){
if(!arguments.length){
return this._value();}
this._value(newVal);},
stepUp:function(steps){
this._spin((steps||1)*this._step(),null);
return this;},
stepDown:function(steps){
this._spin((steps||1)*-this._step(),null);
return this;},
pageUp:function(pages){
return this.stepUp((pages||1)*this.options.page);},
pageDown:function(pages){
return this.stepDown((pages||1)*this.options.page);}});
$.extend($.ui.spinner,{
version:"@VERSION",
eventPrefix:"spin",
defaults:{
buttons:buttonDefault,
currency:false,
dir:'ltr',
groupSeparator:'',
incremental:true,
max:null,
min:null,
mouseWheel:true,
padding:0,
page:5,
precision:0,
radix:10,
radixPoint:'.',
spinnerClass:null,
step:null,
value:0,
width:false}});})(jQuery);;
(function($){$.fn.tipTip=function(options){var defaults={activation:"hover",keepAlive:false,maxWidth:"200px",edgeOffset:3,defaultPosition:"bottom",delay:400,fadeIn:200,fadeOut:200,attribute:"title",content:false,enter:function(){},exit:function(){}};var opts=$.extend(defaults,options);if($("#tiptip_holder").length<=0){var tiptip_holder=$('<div id="tiptip_holder" style="max-width:'+opts.maxWidth+';"></div>');var tiptip_content=$('<div id="tiptip_content"></div>');var tiptip_arrow=$('<div id="tiptip_arrow"></div>');$("body").append(tiptip_holder.html(tiptip_content).prepend(tiptip_arrow.html('<div id="tiptip_arrow_inner"></div>')))}else{var tiptip_holder=$("#tiptip_holder");var tiptip_content=$("#tiptip_content");var tiptip_arrow=$("#tiptip_arrow")}return this.each(function(){var org_elem=$(this);if(opts.content){var org_title=opts.content}else{var org_title=org_elem.attr(opts.attribute)}if(org_title!=""){if(!opts.content){org_elem.removeAttr(opts.attribute)}var timeout=false;if(opts.activation=="hover"){org_elem.hover(function(){active_tiptip()},function(){if(!opts.keepAlive){deactive_tiptip()}});if(opts.keepAlive){tiptip_holder.hover(function(){},function(){deactive_tiptip()})}}else if(opts.activation=="focus"){org_elem.focus(function(){active_tiptip()}).blur(function(){deactive_tiptip()})}else if(opts.activation=="click"){org_elem.click(function(){active_tiptip();return false}).hover(function(){},function(){if(!opts.keepAlive){deactive_tiptip()}});if(opts.keepAlive){tiptip_holder.hover(function(){},function(){deactive_tiptip()})}}function active_tiptip(){opts.enter.call(this);tiptip_content.html(org_title);tiptip_holder.hide().removeAttr("class").css("margin","0");tiptip_arrow.removeAttr("style");var top=parseInt(org_elem.offset()['top']);var left=parseInt(org_elem.offset()['left']);var org_width=parseInt(org_elem.outerWidth());var org_height=parseInt(org_elem.outerHeight());var tip_w=tiptip_holder.outerWidth();var tip_h=tiptip_holder.outerHeight();var w_compare=Math.round((org_width-tip_w)/2);var h_compare=Math.round((org_height-tip_h)/2);var marg_left=Math.round(left+w_compare);var marg_top=Math.round(top+org_height+opts.edgeOffset);var t_class="";var arrow_top="";var arrow_left=Math.round(tip_w-12)/2;if(opts.defaultPosition=="bottom"){t_class="_bottom"}else if(opts.defaultPosition=="top"){t_class="_top"}else if(opts.defaultPosition=="left"){t_class="_left"}else if(opts.defaultPosition=="right"){t_class="_right"}var right_compare=(w_compare+left)<parseInt($(window).scrollLeft());var left_compare=(tip_w+left)>parseInt($(window).width());if((right_compare&&w_compare<0)||(t_class=="_right"&&!left_compare)||(t_class=="_left"&&left<(tip_w+opts.edgeOffset+5))){t_class="_right";arrow_top=Math.round(tip_h-13)/2;arrow_left=-12;marg_left=Math.round(left+org_width+opts.edgeOffset);marg_top=Math.round(top+h_compare)}else if((left_compare&&w_compare<0)||(t_class=="_left"&&!right_compare)){t_class="_left";arrow_top=Math.round(tip_h-13)/2;arrow_left=Math.round(tip_w);marg_left=Math.round(left-(tip_w+opts.edgeOffset+5));marg_top=Math.round(top+h_compare)}var top_compare=(top+org_height+opts.edgeOffset+tip_h+8)>parseInt($(window).height()+$(window).scrollTop());var bottom_compare=((top+org_height)-(opts.edgeOffset+tip_h+8))<0;if(top_compare||(t_class=="_bottom"&&top_compare)||(t_class=="_top"&&!bottom_compare)){if(t_class=="_top"||t_class=="_bottom"){t_class="_top"}else{t_class=t_class+"_top"}arrow_top=tip_h;marg_top=Math.round(top-(tip_h+5+opts.edgeOffset))}else if(bottom_compare|(t_class=="_top"&&bottom_compare)||(t_class=="_bottom"&&!top_compare)){if(t_class=="_top"||t_class=="_bottom"){t_class="_bottom"}else{t_class=t_class+"_bottom"}arrow_top=-12;marg_top=Math.round(top+org_height+opts.edgeOffset)}if(t_class=="_right_top"||t_class=="_left_top"){marg_top=marg_top+5}else if(t_class=="_right_bottom"||t_class=="_left_bottom"){marg_top=marg_top-5}if(t_class=="_left_top"||t_class=="_left_bottom"){marg_left=marg_left+5}tiptip_arrow.css({"margin-left":arrow_left+"px","margin-top":arrow_top+"px"});tiptip_holder.css({"margin-left":marg_left+"px","margin-top":marg_top+"px"}).attr("class","tip"+t_class);if(timeout){clearTimeout(timeout)}timeout=setTimeout(function(){tiptip_holder.stop(true,true).fadeIn(opts.fadeIn)},opts.delay)}function deactive_tiptip(){opts.exit.call(this);if(timeout){clearTimeout(timeout)}tiptip_holder.fadeOut(opts.fadeOut)}}})}})(jQuery);;;(function($,iphoneStyle){
$[iphoneStyle]=function(elem,options){
this.$elem=$(elem);
var obj=this;
$.each(options,function(key,value){
obj[key]=value;});
this.wrapCheckboxWithDivs();
this.attachEvents();
this.disableTextSelection();
if(this.resizeHandle){this.optionallyResize('handle');}
if(this.resizeContainer){this.optionallyResize('container');}
this.initialPosition();};
$.extend($[iphoneStyle].prototype,{
wrapCheckboxWithDivs:function(){
this.$elem.wrap('<div class="'+this.containerClass+'" />');
this.container=this.$elem.parent();
this.offLabel=$('<span class="'+this.labelOffClass+'">'+'<span>'+this.uncheckedLabel+'</span>'+'</span>').appendTo(this.container);
this.offSpan=this.offLabel.children('span');
this.onLabel=$('<span class="'+this.labelOnClass+'">'+'<span>'+this.checkedLabel+'</span>'+'</span>').appendTo(this.container);
this.onSpan=this.onLabel.children('span');
this.handle=$('<div class="'+this.handleClass+'">'+'<div class="'+this.handleRightClass+'">'+'<div class="'+this.handleCenterClass+'" />'+'</div>'+'</div>').appendTo(this.container);},
disableTextSelection:function(){
if(!$.browser.msie){return;}
$.each([this.handle,this.offLabel,this.onLabel,this.container],function(i,el){
$(el).attr("unselectable","on");});},
optionallyResize:function(mode){
var onLabelWidth=this.onLabel.width(),
offLabelWidth=this.offLabel.width(),
newWidth=(onLabelWidth<offLabelWidth)?onLabelWidth:offLabelWidth;
if(mode=='container'){newWidth+=this.handle.width()+15;}
this[mode].css({width:newWidth});},
attachEvents:function(){
var obj=this;
this.container.bind('mousedown touchstart',function(event){
event.preventDefault();
if(obj.$elem.is(':disabled')){return;}
var x=event.pageX||event.originalEvent.changedTouches[0].pageX;
$[iphoneStyle].currentlyClicking=obj.handle;
$[iphoneStyle].dragStartPosition=x;
$[iphoneStyle].handleLeftOffset=parseInt(obj.handle.css('left'),10)||0;}).bind('iPhoneDrag',function(event,x){
event.preventDefault();
if(obj.$elem.is(':disabled')){return;}
var p=(x+$[iphoneStyle].handleLeftOffset-$[iphoneStyle].dragStartPosition)/obj.rightSide;
if(p<0){p=0;}
if(p>1){p=1;}
obj.handle.css({left:p*obj.rightSide});
obj.onLabel.css({width:p*obj.rightSide+4});
obj.offSpan.css({marginRight:-p*obj.rightSide});
obj.onSpan.css({marginLeft:-(1-p)*obj.rightSide});}).bind('iPhoneDragEnd',function(event,x){
if(obj.$elem.is(':disabled')){return;}
if($[iphoneStyle].dragging){
var p=(x-$[iphoneStyle].dragStartPosition)/obj.rightSide;
obj.$elem.attr('checked',(p>=0.5));}else{
obj.$elem.attr('checked',!obj.$elem.attr('checked'));}
$[iphoneStyle].currentlyClicking=null;
$[iphoneStyle].dragging=null;
obj.$elem.change();});
this.$elem.change(function(){
if(obj.$elem.is(':disabled')){
obj.container.addClass(obj.disabledClass);
return false;}else{
obj.container.removeClass(obj.disabledClass);}
var new_left=obj.$elem.attr('checked')?obj.rightSide:0;
obj.handle.animate({left:new_left},obj.duration);
obj.onLabel.animate({width:new_left+4},obj.duration);
obj.offSpan.animate({marginRight:-new_left},obj.duration);
obj.onSpan.animate({marginLeft:new_left-obj.rightSide},obj.duration);});},
initialPosition:function(){
this.contWidth=(this.container.width()<=0)?63:this.container.width();
this.handleWidth=(this.handle.width()<=0)?25:this.handle.width();
this.offLabel.css({width:this.contWidth-5});
var offset=($.browser.msie&&$.browser.version<7)?3:6;
this.rightSide=this.contWidth-this.handleWidth-offset;
if(this.$elem.is(':checked')){
this.handle.css({left:this.rightSide});
this.onLabel.css({width:this.rightSide+4});
this.offSpan.css({marginRight:-this.rightSide});}else{
this.onLabel.css({width:0});
this.onSpan.css({marginLeft:-this.rightSide});}
if(this.$elem.is(':disabled')){
this.container.addClass(this.disabledClass);}}});
$.fn[iphoneStyle]=function(options){
var checkboxes=this.filter(':checkbox');
if(!checkboxes.length){return this;}
var opt=$.extend({},$[iphoneStyle].defaults,options);
checkboxes.each(function(){
$(this).data(iphoneStyle,new $[iphoneStyle](this,opt));});
if(!$[iphoneStyle].initComplete){
$(document).bind('mousemove touchmove',function(event){
if(!$[iphoneStyle].currentlyClicking){return;}
event.preventDefault();
var x=event.pageX||event.originalEvent.changedTouches[0].pageX;
if(!$[iphoneStyle].dragging&&
(Math.abs($[iphoneStyle].dragStartPosition-x)>opt.dragThreshold)){
$[iphoneStyle].dragging=true;}
$(event.target).trigger('iPhoneDrag',[x]);}).bind('mouseup touchend',function(event){
if(!$[iphoneStyle].currentlyClicking){return;}
event.preventDefault();
var x=event.pageX||event.originalEvent.changedTouches[0].pageX;
$($[iphoneStyle].currentlyClicking).trigger('iPhoneDragEnd',[x]);});
$[iphoneStyle].initComplete=true;}
return this;};
$[iphoneStyle].defaults={
duration:200,
checkedLabel:'ON',
uncheckedLabel:'OFF',
resizeHandle:true,
resizeContainer:true,
disabledClass:'iPhoneCheckDisabled',
containerClass:'iPhoneCheckContainer',
labelOnClass:'iPhoneCheckLabelOn',
labelOffClass:'iPhoneCheckLabelOff',
handleClass:'iPhoneCheckHandle',
handleCenterClass:'iPhoneCheckHandleCenter',
handleRightClass:'iPhoneCheckHandleRight',
dragThreshold:5};})(jQuery,'iphoneStyle');;
(function($){
$.widget("ui.nestedSortable",$.extend({},$.ui.sortable.prototype,{
options:{
tabSize:20,
disableNesting:'ui-nestedSortable-no-nesting',
errorClass:'ui-nestedSortable-error'},
_create:function(){
this.element.data('sortable',this.element.data('sortableTree'));
return $.ui.sortable.prototype._create.apply(this,arguments);},
_mouseDrag:function(event){
this.position=this._generatePosition(event);
this.positionAbs=this._convertPositionTo("absolute");
if(!this.lastPositionAbs){
this.lastPositionAbs=this.positionAbs;}
if(this.options.scroll){
var o=this.options,scrolled=false;
if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!='HTML'){
if((this.overflowOffset.top+this.scrollParent[0].offsetHeight)-event.pageY<o.scrollSensitivity)
this.scrollParent[0].scrollTop=scrolled=this.scrollParent[0].scrollTop+o.scrollSpeed;
else if(event.pageY-this.overflowOffset.top<o.scrollSensitivity)
this.scrollParent[0].scrollTop=scrolled=this.scrollParent[0].scrollTop-o.scrollSpeed;
if((this.overflowOffset.left+this.scrollParent[0].offsetWidth)-event.pageX<o.scrollSensitivity)
this.scrollParent[0].scrollLeft=scrolled=this.scrollParent[0].scrollLeft+o.scrollSpeed;
else if(event.pageX-this.overflowOffset.left<o.scrollSensitivity)
this.scrollParent[0].scrollLeft=scrolled=this.scrollParent[0].scrollLeft-o.scrollSpeed;}else{
if(event.pageY-$(document).scrollTop()<o.scrollSensitivity)
scrolled=$(document).scrollTop($(document).scrollTop()-o.scrollSpeed);
else if($(window).height()-(event.pageY-$(document).scrollTop())<o.scrollSensitivity)
scrolled=$(document).scrollTop($(document).scrollTop()+o.scrollSpeed);
if(event.pageX-$(document).scrollLeft()<o.scrollSensitivity)
scrolled=$(document).scrollLeft($(document).scrollLeft()-o.scrollSpeed);
else if($(window).width()-(event.pageX-$(document).scrollLeft())<o.scrollSensitivity)
scrolled=$(document).scrollLeft($(document).scrollLeft()+o.scrollSpeed);}
if(scrolled!==false&&$.ui.ddmanager&&!o.dropBehaviour)
$.ui.ddmanager.prepareOffsets(this,event);}
this.positionAbs=this._convertPositionTo("absolute");
if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+'px';
if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+'px';
for(var i=this.items.length-1;i>=0;i--){
var item=this.items[i],itemElement=item.item[0],intersection=this._intersectsWithPointer(item);
if(!intersection)continue;
if(itemElement!=this.currentItem[0]&&this.placeholder[intersection==1?"next":"prev"]()[0]!=itemElement&&!$.ui.contains(this.placeholder[0],itemElement)&&(this.options.type=='semi-dynamic'?!$.ui.contains(this.element[0],itemElement):true)){
this.direction=intersection==1?"down":"up";
if(this.options.tolerance=="pointer"||this._intersectsWithSides(item)){
this._rearrange(event,item);}else{
break;}
this._clearUls(itemElement);
this._trigger("change",event,this._uiHash());
break;}}
itemBefore=this.placeholder[0].previousSibling;
while(itemBefore!=null){
if(itemBefore.nodeType==1&&itemBefore!=this.currentItem[0]){
break;}else{
itemBefore=itemBefore.previousSibling;}}
parentItem=this.placeholder[0].parentNode.parentNode;
newUl=document.createElement('ul');
if(parentItem!=null&&parentItem.nodeName=='LI'&&this.positionAbs.left<$(parentItem).offset().left){
$(parentItem).after(this.placeholder[0]);
this._clearUls(parentItem);}else if(itemBefore!=null&&itemBefore.nodeName=='LI'&&this.positionAbs.left>$(itemBefore).offset().left+this.options.tabSize){
if(!($(itemBefore).hasClass(this.options.disableNesting))){
if($(this.placeholder[0]).hasClass(this.options.errorClass)){
$(this.placeholder[0]).css('marginLeft',0).removeClass(this.options.errorClass);}
if(itemBefore.children[1]==null){
itemBefore.appendChild(newUl);}
itemBefore.children[1].appendChild(this.placeholder[0]);}else{
$(this.placeholder[0]).addClass(this.options.errorClass).css('marginLeft',this.options.tabSize);}}else if(itemBefore!=null){
if($(this.placeholder[0]).hasClass(this.options.errorClass)){
$(this.placeholder[0]).css('marginLeft',0).removeClass(this.options.errorClass);}
$(itemBefore).after(this.placeholder[0]);}else{
if($(this.placeholder[0]).hasClass(this.options.errorClass)){
$(this.placeholder[0]).css('marginLeft',0).removeClass(this.options.errorClass);}}
this._contactContainers(event);
if($.ui.ddmanager)$.ui.ddmanager.drag(this,event);
this._trigger('sort',event,this._uiHash());
this.lastPositionAbs=this.positionAbs;
return false;},
serialize:function(o){
var items=this._getItemsAsjQuery(o&&o.connected);
var str=[];o=o||{};
$(items).each(function(){
var res=($(o.item||this).attr(o.attribute||'id')||'').match(o.expression||(/(.+)[-=_](.+)/));
var pid=($(o.item||this).parent('ul').parent('li').attr(o.attribute||'id')||'').match(o.expression||(/(.+)[-=_](.+)/));
if(res)str.push((o.key||res[1]+'['+(o.key&&o.expression?res[1]:res[2])+']')+'='+(pid?(o.key&&o.expression?pid[1]:pid[2]):'root'));});
if(!str.length&&o.key){
str.push(o.key+'=');}
return str.join('&');},
toArray:function(o){
o=o||{};
var sDepth=o.startDepthCount||0;
var ret=[];
var left=2;
ret.push({"item_id":'root',"parent_id":'none',"depth":sDepth,"left":'1',"right":($('li',this.element).length+1)*2});
$(this.element).children('li').each(function(){
left=_recursiveArray($(this),sDepth+1,left);});
return ret;
function _recursiveArray(item,depth,left){
right=left+1;
if($(item).children('ul').children('li').length>0){
depth++;
$(item).children('ul').children('li').each(function(){
right=_recursiveArray($(this),depth,right);});
depth--;}
id=$(item).attr('id').match(o.expression||(/(.+)[-=_](.+)/));
if(depth===sDepth+1)pid='root';
else{
parent=$(item).parent('ul').parent('li').attr('id').match(o.expression||(/(.+)[-=_](.+)/));
pid=parent[2];}
ret.push({"item_id":id[2],"parent_id":pid,"depth":depth,"left":left,"right":right});
return left=right+1;}},
_createPlaceholder:function(that){
var self=that||this,o=self.options;
if(!o.placeholder||o.placeholder.constructor==String){
var className=o.placeholder;
o.placeholder={
element:function(){
var el=$(document.createElement(self.currentItem[0].nodeName)).addClass(className||self.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
if(!className)
el.style.visibility="hidden";
return el;},
update:function(container,p){
if(className&&!o.forcePlaceholderSize)return;
if(!p.height()||p.css('height')=='auto'){p.height(self.currentItem.height());};
if(!p.width()){p.width(self.currentItem.width());};}};}
self.placeholder=$(o.placeholder.element.call(self.element,self.currentItem));
self.currentItem.after(self.placeholder);
o.placeholder.update(self,self.placeholder);},
_clear:function(event,noPropagation){
$.ui.sortable.prototype._clear.apply(this,arguments);
for(var i=this.items.length-1;i>=0;i--){
var item=this.items[i].item[0];
this._clearUls(item);}
return true;},
_clearUls:function(item){
if(item.children[1]&&item.children[1].children.length==0){
item.removeChild(item.children[1]);}}}));
$.ui.nestedSortable.prototype.options=$.extend({},$.ui.sortable.prototype.options,$.ui.nestedSortable.prototype.options);})(jQuery);;
(function(f,z){var e=z in document.createElement('input'),a=z in document.createElement('textarea');if(e&&a){f.fn.placeholder=function(){return this}}else{f.fn.placeholder=function(){return this.filter((e?'textarea':':input')+'['+z+']').bind('focus.'+z,b).bind('blur.'+z,d).trigger('blur.'+z).end()}}function c(h){var g={},i=/^jQuery\d+$/;f.each(h.attributes,function(k,j){if(j.specified&&!i.test(j.name)){g[j.name]=j.value}});return g}function b(){var g=f(this);if(g.val()===g.attr(z)&&g.hasClass(z)){if(g.data(z+'-password')){g.hide().next().show().focus()}else{g.val('').removeClass(z)}}}function d(g){var j,i=f(this);if(i.val()===''||i.val()===i.attr(z)){if(i.is(':password')){if(!i.data(z+'-textinput')){try{j=i.clone().attr({type:'text'})}catch(h){j=f('<input>').attr(f.extend(c(i[0]),{type:'text'}))}j.removeAttr('name').data(z+'-password',true).bind('focus.'+z,b);i.data(z+'-textinput',j).before(j)}i=i.hide().prev().show()}i.addClass(z).val(i.attr(z))}else{i.removeClass(z)}}f(function(){f('form').bind('submit.'+z,function(){var g=f('.'+z,this).each(b);setTimeout(function(){g.each(d)},10)})});f(window).bind('unload.'+z,function(){f('.'+z).val('')})})(jQuery,'placeholder');;;(function($){
$.extend($.fn,{
swapClass:function(c1,c2){
var c1Elements=this.filter('.'+c1);
this.filter('.'+c2).removeClass(c2).addClass(c1);
c1Elements.removeClass(c1).addClass(c2);
return this;},
replaceClass:function(c1,c2){
return this.filter('.'+c1).removeClass(c1).addClass(c2).end();},
hoverClass:function(className){
className=className||"hover";
return this.hover(function(){
$(this).addClass(className);},function(){
$(this).removeClass(className);});},
heightToggle:function(animated,callback){
animated?
this.animate({height:"toggle"},animated,callback):
this.each(function(){
jQuery(this)[jQuery(this).is(":hidden")?"show":"hide"]();
if(callback)
callback.apply(this,arguments);});},
heightHide:function(animated,callback){
if(animated){
this.animate({height:"hide"},animated,callback);}else{
this.hide();
if(callback)
this.each(callback);}},
prepareBranches:function(settings){
if(!settings.prerendered){
this.filter(":last-child:not(ul)").addClass(CLASSES.last);
this.filter((settings.collapsed?"":"."+CLASSES.closed)+":not(."+CLASSES.open+")").children("ul").hide();}
return this.has("ul");},
applyClasses:function(settings,toggler){
this.has('ul').children('span').unbind("click.treeview").bind("click.treeview",function(event){
if(this==event.target)
toggler.apply($(this).next());}).bind("dblclick",function(){
$('#btSubmit').click();}).add($("a",this)).hoverClass();
if(!settings.prerendered){
this.has('ul:hidden').not('.'+CLASSES.open).not('.'+CLASSES.leaf).addClass(CLASSES.expandable).replaceClass(CLASSES.last,CLASSES.lastExpandable);
this.filter('.'+CLASSES.open).addClass(CLASSES.collapsable).replaceClass(CLASSES.last,CLASSES.lastCollapsable);
var hitarea=this.find("div."+CLASSES.hitarea);
if(!hitarea.length||hitarea.length!=$('li',this).children().length)
this.not('ul').prepend("<div class=\""+CLASSES.hitarea+"\"/>");
hitarea=this.find("div."+CLASSES.hitarea);
hitarea.removeClass().addClass(CLASSES.hitarea).each(function(){
var classes="";
$.each($(this).parent().attr("class").split(" "),function(){
classes+=this+"-hitarea ";});
$(this).addClass(classes);})}
this.find("div."+CLASSES.hitarea).click(toggler);},
treeview:function(settings){
settings=$.extend({
cookieId:"treeview"},settings);
if(settings.toggle){
var callback=settings.toggle;
settings.toggle=function(){
return callback.apply($(this).parent()[0],arguments);};}
function treeController(tree,control){
function handler(filter){
return function(){
toggler.apply($("div."+CLASSES.hitarea,tree).filter(function(){
return filter?$(this).parent("."+filter).length:true;}));
return false;};}
$("a:eq(0)",control).click(handler(CLASSES.collapsable));
$("a:eq(1)",control).click(handler(CLASSES.expandable));
$("a:eq(2)",control).click(handler());}
function toggler(){
$(this).parent().children(".hitarea").swapClass(CLASSES.collapsableHitarea,CLASSES.expandableHitarea).swapClass(CLASSES.lastCollapsableHitarea,CLASSES.lastExpandableHitarea).end().swapClass(CLASSES.collapsable,CLASSES.expandable).swapClass(CLASSES.lastCollapsable,CLASSES.lastExpandable).children("ul").heightToggle(settings.animated,settings.toggle);
if(settings.unique){
$(this).parent().siblings().children(".hitarea").replaceClass(CLASSES.collapsableHitarea,CLASSES.expandableHitarea).replaceClass(CLASSES.lastCollapsableHitarea,CLASSES.lastExpandableHitarea).end().replaceClass(CLASSES.collapsable,CLASSES.expandable).replaceClass(CLASSES.lastCollapsable,CLASSES.lastExpandable).children("ul").heightHide(settings.animated,settings.toggle);}}
this.data("toggler",toggler);
function serialize(){
function binary(arg){
return arg?1:0;}
var data=[];
branches.each(function(i,e){
data[i]=$(e).is(":has(ul:visible)")?1:0;});
$.cookie(settings.cookieId,data.join(""),settings.cookieOptions);}
function deserialize(){
var stored=$.cookie(settings.cookieId);
if(stored){
var data=stored.split("");
branches.each(function(i,e){
$(e).children("ul")[parseInt(data[i])?"show":"hide"]();});}}
this.addClass("treeview");
var branches=this.find("li").prepareBranches(settings);
switch(settings.persist){
case"cookie":
var toggleCallback=settings.toggle;
settings.toggle=function(){
serialize();
if(toggleCallback){
toggleCallback.apply(this,arguments);}};
deserialize();
break;
case"location":
var current=this.find("a").filter(function(){
return this.href.toLowerCase()==location.href.toLowerCase();});
if(current.length){
var items=current.addClass("selected").parents("ul, li").add(current.next()).show();
if(settings.prerendered){
items.filter("li").swapClass(CLASSES.collapsable,CLASSES.expandable).swapClass(CLASSES.lastCollapsable,CLASSES.lastExpandable).find(".hitarea").swapClass(CLASSES.collapsableHitarea,CLASSES.expandableHitarea).swapClass(CLASSES.lastCollapsableHitarea,CLASSES.lastExpandableHitarea);}}
break;}
branches.applyClasses(settings,toggler);
if(settings.control){
treeController(this,settings.control);
$(settings.control).show();}
return this;}});
$.treeview={};
var CLASSES=($.treeview.classes={
open:"open",
closed:"closed",
expandable:"expandable",
expandableHitarea:"expandable-hitarea",
lastExpandableHitarea:"lastExpandable-hitarea",
collapsable:"collapsable",
collapsableHitarea:"collapsable-hitarea",
lastCollapsableHitarea:"lastCollapsable-hitarea",
lastCollapsable:"lastCollapsable",
lastExpandable:"lastExpandable",
last:"last",
leaf:"leaf",
hitarea:"hitarea"});})(jQuery);;(function($){
var CLASSES=$.treeview.classes;
var proxied=$.fn.treeview;
$.fn.treeview=function(settings){
settings=$.extend({},settings);
if(settings.add){
return this.trigger("add",[settings.add]);}
if(settings.remove){
return this.trigger("remove",[settings.remove]);}
return proxied.apply(this,arguments).bind("add",function(event,branches){
$(branches).prev().removeClass(CLASSES.last).removeClass(CLASSES.lastCollapsable).removeClass(CLASSES.lastExpandable).children(".hitarea").removeClass(CLASSES.lastCollapsableHitarea).removeClass(CLASSES.lastExpandableHitarea);
$(branches).find("li").andSelf().prepareBranches(settings).applyClasses(settings,
$(this).data("toggler"));}).bind("remove",function(event,branches){
var prev=$(branches).prev();
var parent=$(branches).parent();
$(branches).remove();
prev.filter(":last-child").addClass(CLASSES.last).filter("."+CLASSES.expandable).replaceClass(CLASSES.last,CLASSES.lastExpandable).end().children(".hitarea").replaceClass(CLASSES.expandableHitarea,CLASSES.lastExpandableHitarea).end().filter("."+CLASSES.collapsable).replaceClass(CLASSES.last,CLASSES.lastCollapsable).end().children(".hitarea").replaceClass(CLASSES.collapsableHitarea,CLASSES.lastCollapsableHitarea);
if(parent.children().size()==0&&parent[0]!=this){
parent.parent().removeClass(CLASSES.collapsable).removeClass(CLASSES.expandable)
parent.siblings(".hitarea").andSelf().remove();}});};})(jQuery);;;(function($){
function load(settings,root,child,container,offset){
function createNode(parent){
var current=$("<li/>").attr("id",escape(this.id||"")).append($("<span/>").text(this.text));
if(settings.separate_children&&this.hasChildren&&this.offset==undefined){
if($('.hasChildren',parent).length>0){
$('.hasChildren:last',parent).after(current);}else{
current.prependTo(parent);}}else{
current.appendTo(parent);}
if(this.classes){
current.children("span").addClass(this.classes);}
if(this.expanded){
current.addClass("open");}
if(this.offset!=undefined){
current.attr('offset',this.offset);
current.addClass('showmore')}
if(!this.selectable){
current.addClass('noSelection')}
if(this.hasChildren!=undefined&&!this.hasChildren){
current.append('<ul/>');
current.addClass('leaf');}
if(this.hasChildren||this.children&&this.children.length){
var branch=$("<ul/>").appendTo(current);
if(this.hasChildren){
current.addClass("hasChildren");
if(!this.children){
createNode.call({
classes:"placeholder",
text:"",
children:[]},branch);}}
if(this.children&&this.children.length){
$.each(this.children,createNode,[branch])}}}
root=unescape(root).replace(/&amp;/g,'&').replace(/&#39;/g,'\'').replace(/&lt;/g,'<').replace(/&gt;/g,'>');
$.ajax($.extend(true,{
url:settings.url,
dataType:"json",
cache:false,
data:{
root:root,
offset:offset},
success:function(response){
if(!response.success){
settings.showMessage(response.messages[0].message);
if(container.children.length>0){
settings.disableCurrentNode();
return;}}
$(child).find('li[id=""]').remove();
$.each(response.data,createNode,[child]);
if(response.offset+response.count<response.total){
createNode.call({'text':_('show more'),'hasChildren':'true','offset':response.offset+response.count},child);}
$(container).treeview({add:child});}},settings.ajax));}
var proxied=$.fn.treeview;
$.fn.treeview=function(settings){
var container=this;
var userToggle=settings.toggle;
if(!settings.url){
return proxied.apply(this,arguments);}
if(!container.children().size()){
load(settings,settings.startNode,this,container);}
return proxied.call(this,$.extend({},settings,{
collapsed:true,
toggle:function(){
var $this=$(this);
if($this.hasClass('showmore')){
$this.closest('ul').append($('<li id=""><span class="placeholder"></span></li>'));
load(settings,($this.parents('li:first').attr('id')||$('ul#treebody').attr('root')),$this.closest('ul'),container,offset=$this.attr('offset'));
$this.remove();}
else if($this.hasClass("hasChildren")){
var childList=$this.removeClass("hasChildren").find("ul");
load(settings,this.id,childList,container);}
if(userToggle){
userToggle.apply(this,arguments);}}}));};})(jQuery);;
(function(a){a.tools=a.tools||{version:"v1.2.5"};var b;b=a.tools.expose={conf:{maskId:"exposeMask",loadSpeed:"slow",closeSpeed:"fast",closeOnClick:!0,closeOnEsc:!0,zIndex:9998,opacity:.8,startOpacity:0,color:"#fff",onLoad:null,onClose:null}};function c(){if(a.browser.msie){var b=a(document).height(),c=a(window).height();return[window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,b-c<20?c:b]}return[a(document).width(),a(document).height()]}function d(b){if(b)return b.call(a.mask)}var e,f,g,h,i;a.mask={load:function(j,k){if(g)return this;typeof j=="string"&&(j={color:j}),j=j||h,h=j=a.extend(a.extend({},b.conf),j),e=a("#"+j.maskId),e.length||(e=a("<div/>").attr("id",j.maskId),a("body").append(e));var l=c();e.css({position:"absolute",top:0,left:0,width:l[0],height:l[1],display:"none",opacity:j.startOpacity,zIndex:j.zIndex}),j.color&&e.css("backgroundColor",j.color);if(d(j.onBeforeLoad)===!1)return this;j.closeOnEsc&&a(document).bind("keydown.mask",function(b){b.keyCode==27&&a.mask.close(b)}),j.closeOnClick&&e.bind("click.mask",function(b){a.mask.close(b)}),a(window).bind("resize.mask",function(){a.mask.fit()}),k&&k.length&&(i=k.eq(0).css("zIndex"),a.each(k,function(){var b=a(this);/relative|absolute|fixed/i.test(b.css("position"))||b.css("position","relative")}),f=k.css({zIndex:Math.max(j.zIndex+1,i=="auto"?0:i)})),e.css({display:"block"}).fadeTo(j.loadSpeed,j.opacity,function(){a.mask.fit(),d(j.onLoad),g="full"}),g=!0;return this},close:function(){if(g){if(d(h.onBeforeClose)===!1)return this;e.fadeOut(h.closeSpeed,function(){d(h.onClose),f&&f.css({zIndex:i}),g=!1}),a(document).unbind("keydown.mask"),e.unbind("click.mask"),a(window).unbind("resize.mask")}return this},fit:function(){if(g){var a=c();e.css({width:a[0],height:a[1]})}},getMask:function(){return e},isLoaded:function(a){return a?g=="full":g},getConf:function(){return h},getExposed:function(){return f}},a.fn.mask=function(b){a.mask.load(b);return this},a.fn.expose=function(b){a.mask.load(b,this);return this}})(jQuery);;
(function(){
var doT={version:'0.1.6'};
if(typeof module!=='undefined'&&module.exports){
module.exports=doT;}else{
this.doT=doT;}
doT.templateSettings={
evaluate:/\{\{([\s\S]+?)\}\}/g,
interpolate:/\{\{=([\s\S]+?)\}\}/g,
encode:/\{\{!([\s\S]+?)\}\}/g,
use:/\{\{#([\s\S]+?)\}\}/g,
define:/\{\{##\s*([\w\.$]+)\s*(\:|=)([\s\S]+?)#\}\}/g,
varname:'it',
strip:true,
append:true};
function resolveDefs(c,block,def){
return((typeof block==='string')?block:block.toString()).replace(c.define,function(match,code,assign,value){
if(code.indexOf('def.')===0){
code=code.substring(4);}
if(!(code in def))def[code]=(assign===':')?value:eval(value);
return'';}).replace(c.use,function(match,code){
var v=eval(code);
return v?resolveDefs(c,v,def):v;});}
doT.template=function(tmpl,c,def){
c=c||doT.templateSettings;
var cstart=c.append?"'+(":"';out+=(",
cend=c.append?")+'":");out+='";
var str=(c.use||c.define)?resolveDefs(c,tmpl,def||{}):tmpl;
str=("var out='"+
((c.strip)?str.replace(/\s*<!\[CDATA\[\s*|\s*\]\]>\s*|[\r\n\t]|(\/\*[\s\S]*?\*\/)/g,''):str).replace(/\\/g,'\\\\').replace(/'/g,"\\'").replace(c.interpolate,function(match,code){
return cstart+code.replace(/\\'/g,"'").replace(/\\\\/g,"\\").replace(/[\r\t\n]/g,' ')+cend;}).replace(c.encode,function(match,code){
return cstart+code.replace(/\\'/g,"'").replace(/\\\\/g,"\\").replace(/[\r\t\n]/g,' ')+").toString().replace(/&(?!\\w+;)/g, '&#38;').split('<').join('&#60;').split('>').join('&#62;').split('"+'"'+"').join('&#34;').split("+'"'+"'"+'"'+").join('&#39;').split('/').join('&#47;'"+cend;}).replace(c.evaluate,function(match,code){
return"';"+code.replace(/\\'/g,"'").replace(/\\\\/g,"\\").replace(/[\r\t\n]/g,' ')+"out+='";})
+"';return out;").replace(/\n/g,'\\n').replace(/\t/g,'\\t').replace(/\r/g,'\\r').split("out+='';").join('').split("var out='';out+=").join('var out=');
try{
return new Function(c.varname,str);}catch(e){
if(typeof console!=='undefined')console.log("Could not create a template function: "+str);
throw e;}};}());;
(function()
{
var _namespaces={};
var _imported={};
var _loading={};
var _classPaths={};
var _classInfo={};
var _classDependencyList=[];
var _mixinCount=0;
var _mixinDependencies=null;
var _evalScript=function(script)
{
var _namespaces=undefined;
var _imported=undefined;
var _loading=undefined;
var _classPaths=undefined;
var _classInfo=undefined;
var _classDependencyList=undefined;
var _mixinCount=undefined;
var _mixinDependencies=undefined;
var _evalScript=undefined;
var _appendConstructor=undefined;
arguments=undefined;
eval.call(window,script);};
var _appendConstructor=function(baseConstructor,mixinConstructor)
{
var constructor=function()
{
baseConstructor.apply(this,arguments);
mixinConstructor.call(this);};
return constructor;};
var jg_namespace=window.jg_namespace=function(path,closure)
{
if(path==null)
throw new Error("Parameter path must be non-null.");
if(typeof path!=="string")
throw new Error("Parameter path must be a string.");
if((closure!=null)&&(typeof closure!=="function"))
throw new Error("Parameter closure must be a function.");
var ns=_namespaces[path];
if(!ns)
{
var subPaths=path?path.split("."):[];
var subPath;
var scope;
ns=window;
for(var i=0,l=subPaths.length;i<l;i++)
{
subPath=subPaths[i];
scope=ns[subPath];
if(!scope)
scope=ns[subPath]={};
ns=scope;}
_namespaces[path]=ns;}
if(closure)
closure.call(ns,ns);
return ns;};
var jg_import=window.jg_import=function(path)
{
if(path==null)
throw new Error("Parameter path must be non-null.");
if(typeof path!=="string")
throw new Error("Parameter path must be a string.");
if(!path)
throw new Error("Parameter path must be non-empty.");
var c=_imported[path];
if(!c)
{
if(_loading[path])
throw new Error("Recursive dependency on class "+path+".");
var classInfo={};
var nsIndex=path.lastIndexOf(".");
var nsPath=(nsIndex<0)?"":path.substring(0,nsIndex);
var cPath=(nsIndex<0)?path:path.substring(nsIndex+1);
var ns=jg_namespace(nsPath);
c=ns[cPath];
if(!c)
{
try
{
_loading[path]=true;
var filePath=jg_import.getClassPath(path)+".js";
var script=null;
try
{
var xhr=window.ActiveXObject?new window.ActiveXObject("Microsoft.XMLHTTP"):new XMLHttpRequest();
xhr.open("GET",filePath,false);
xhr.send(null);
if((xhr.status==200)||(xhr.status==0))
script=xhr.responseText;}
catch(e)
{}
if(script==null)
throw new Error("Failed to load class "+path+".");
_evalScript(script);
c=ns[cPath];
if(!c)
throw new Error("Failed to initialize class "+path+".");
classInfo.src=filePath;
classInfo.script=script;}
finally
{
delete _loading[path];}}
classInfo.path=path;
classInfo.reference=c;
_classInfo[path]=classInfo;
_classDependencyList.push(path);
_imported[path]=c;}
return c;};
jg_import.setClassPath=function(path,dir)
{
if(path==null)
throw new Error("Parameter path must be non-null.");
if(typeof path!=="string")
throw new Error("Parameter path must be a string.");
if(dir==null)
throw new Error("Parameter dir must be non-null.");
if(typeof dir!=="string")
throw new Error("Parameter dir must be a string.");
_classPaths[path]=dir;};
jg_import.getClassPath=function(path)
{
if(path==null)
throw new Error("Parameter path must be non-null.");
if(typeof path!=="string")
throw new Error("Parameter path must be a string.");
var classPathList=[];
var classPath;
for(classPath in _classPaths)
{
if(_classPaths.hasOwnProperty(classPath))
classPathList.push(classPath);}
classPathList.sort();
for(var i=classPathList.length-1;i>=0;i--)
{
classPath=classPathList[i];
if(path.substring(0,classPath.length)===classPath)
return _classPaths[classPath]+path.substring(classPath.length).replace(/\./g,"/");}
return path.replace(/\./g,"/");};
jg_import.getClassInfo=function(path)
{
if((path!=null)&&(typeof path!=="string"))
throw new Error("Parameter path must be a string.");
if(!path)
{
var classInfoList=[];
for(var i=0,l=_classDependencyList.length;i<l;i++)
classInfoList.push(jg_import.getClassInfo(_classDependencyList[i]));
return classInfoList;}
var classInfo=_classInfo[path];
if(!classInfo)
return null;
var classInfo2={};
classInfo2.path=classInfo.path;
classInfo2.reference=classInfo.reference;
if(classInfo.src!=null)
classInfo2.src=classInfo.src;
if(classInfo.script!=null)
classInfo2.script=classInfo.script;
return classInfo2;};
var jg_extend=window.jg_extend=function(baseClass,closure)
{
if(baseClass==null)
throw new Error("Parameter baseClass must be non-null.");
if(typeof baseClass!=="function")
throw new Error("Parameter baseClass must be a class.");
if((closure!=null)&&(typeof closure!=="function"))
throw new Error("Parameter closure must be a function.");
var constructor=baseClass;
var base=baseClass.prototype;
baseClass=function(){};
baseClass.prototype=base;
var c=function()
{
constructor.apply(this,arguments);};
var proto=c.prototype=new baseClass();
proto.constructor=c;
if(closure)
{
closure.call(proto,c,base,proto);
if(c.prototype!==proto)
throw new Error("Class member \"prototype\" cannot be overridden.");
if(proto.constructor!==c)
{
if(typeof proto.constructor!=="function")
throw new Error("Instance member \"constructor\" must be a function.");
constructor=proto.constructor;
proto.constructor=c;}}
return c;};
var jg_static=window.jg_static=function(closure)
{
if((closure!=null)&&(typeof closure!=="function"))
throw new Error("Parameter closure must be a function.");
var c={};
if(closure)
closure.call(c,c);
return c;};
var jg_mixin=window.jg_mixin=function(target,source,base)
{
if(target==null)
throw new Error("Parameter target must be non-null.");
if(source==null)
throw new Error("Parameter source must be non-null.");
var id=source.__jg_mixin_id;
if(!id)
id=source.__jg_mixin_id="#"+(++_mixinCount);
id="__jg_mixin_has_"+id;
if(target[id])
return base;
var baseConstructor=((base!=null)&&base.hasOwnProperty("constructor")&&(typeof base.constructor==="function"))?base.constructor:function(){};
var baseClass=function(){};
baseClass.prototype=target.__proto__||Object.prototype;
base=new baseClass();
base.constructor=baseConstructor;
var member;
var mixin=source.mixin;
if((mixin!=null)&&(typeof mixin==="function"))
{
var mixinBase=new baseClass();
for(member in target)
{
if(target.hasOwnProperty(member))
mixinBase[member]=target[member];}
mixinBase.constructor=baseConstructor;
try
{
if(!_mixinDependencies)
_mixinDependencies=[];
_mixinDependencies.push(base);
var constructor=target.constructor;
mixin.call(target,mixinBase,target);
if(target.constructor!==constructor)
throw new Error("Target member \"constructor\" cannot be overridden.");}
finally
{
_mixinDependencies.pop();
if(_mixinDependencies.length==0)
_mixinDependencies=null;}}
for(member in source)
{
if(source.hasOwnProperty(member)&&(member!=="mixin")&&(member!=="constructor")&&(member.substring(0,2)!=="__"))
target[member]=source[member];}
for(member in target)
{
if(target.hasOwnProperty(member)&&(member!=="constructor"))
base[member]=target[member];}
var sourceConstructor=(source.hasOwnProperty("constructor")&&(typeof source.constructor==="function"))?source.constructor:null;
if(sourceConstructor)
{
base.constructor=_appendConstructor(base.constructor,sourceConstructor);
if(_mixinDependencies)
{
var dependentMixin;
for(var i=_mixinDependencies.length-1;i>=0;i--)
{
dependentMixin=_mixinDependencies[i];
dependentMixin.constructor=_appendConstructor(dependentMixin.constructor,sourceConstructor);}}}
target[id]=true;
return base;};
var jg_has_mixin=window.jg_has_mixin=function(target,source)
{
if(target==null)
throw new Error("Parameter target must be non-null.");
if(source==null)
throw new Error("Parameter source must be non-null.");
var id=source.__jg_mixin_id;
if(!id)
return false;
id="__jg_mixin_has_"+id;
return(target[id]==true);};
var jg_delegate=window.jg_delegate=function(scope,method)
{
if(method==null)
throw new Error("Parameter method must be non-null.");
var isMethodName=(typeof method==="string");
if(isMethodName)
{
if(scope==null)
throw new Error("Parameter scope must be non-null.");}
else
{
if(typeof method!=="function")
throw new Error("Parameter method must be a string or a function.");}
var f=function()
{
if(!isMethodName)
return method.apply(scope,arguments);
var m=scope[method];
if(typeof m==="function")
return m.apply(scope,arguments);
return undefined;};
return f;};})();;!function(name,definition){
this[name]=definition()}('$script',function(){
var win=this,doc=document,head=doc.getElementsByTagName('head')[0],validBase=/^https?:\/\//,old=win.$script,list={},ids={},delay={},scriptpath,scripts={},s='string',f=false,push='push',domContentLoaded='DOMContentLoaded',readyState='readyState',addEventListener='addEventListener',onreadystatechange='onreadystatechange'
function every(ar,fn,i){
for(i=0,j=ar.length;i<j;++i)if(!fn(ar[i]))return f
return 1}
function each(ar,fn){
every(ar,function(el){
return!fn(el)})}
if(!doc[readyState]&&doc[addEventListener]){
doc[addEventListener](domContentLoaded,function fn(){
doc.removeEventListener(domContentLoaded,fn,f)
doc[readyState]='complete'},f)
doc[readyState]='loading'}
function $script(paths,idOrDone,optDone){
paths=paths[push]?paths:[paths]
var idOrDoneIsDone=idOrDone&&idOrDone.call,done=idOrDoneIsDone?idOrDone:optDone,id=idOrDoneIsDone?paths.join(''):idOrDone,queue=paths.length
function loopFn(item){
return item.call?item():list[item]}
function callback(){
if(!--queue){
list[id]=1
done&&done()
for(var dset in delay){
every(dset.split('|'),loopFn)&&!each(delay[dset],loopFn)&&(delay[dset]=[])}}}
setTimeout(function(){
each(paths,function(path){
if(scripts[path]){
id&&(ids[id]=1)
return scripts[path]==2&&callback()}
scripts[path]=1
id&&(ids[id]=1)
create(!validBase.test(path)&&scriptpath?scriptpath+path+'.js':path,callback)})},0)
return $script}
function create(path,fn){
var el=doc.createElement('script'),loaded=f
el.onload=el.onerror=el[onreadystatechange]=function(){
if((el[readyState]&&!(/^c|loade/.test(el[readyState])))||loaded)return;
el.onload=el[onreadystatechange]=null
loaded=1
scripts[path]=2
fn()}
el.async=1
el.src=path
head.insertBefore(el,head.firstChild)}
$script.get=create
$script.order=function(scripts,id,done){
(function callback(s){
s=scripts.shift()
if(!scripts.length)$script(s,id,done)
else $script(s,callback)}())}
$script.path=function(p){
scriptpath=p}
$script.ready=function(deps,ready,req){
deps=deps[push]?deps:[deps]
var missing=[];!each(deps,function(dep){
list[dep]||missing[push](dep);})&&every(deps,function(dep){return list[dep]})?
ready():!function(key){
delay[key]=delay[key]||[]
delay[key][push](ready)
req&&req(missing)}(deps.join('|'))
return $script}
$script.noConflict=function(){
win.$script=old;
return this}
return $script});
Number.prototype.pad=
function(n,p){
var s=''+this;
p=p||'0';
while(s.length<n)s=p+s;
return s;};
Date.prototype.months=['January','February','March','April','May','June','July','August','September','October','November','December'];
Date.prototype.weekdays=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];
Date.prototype.dpm=[31,28,31,30,31,30,31,31,30,31,30,31];
Date.prototype.strftime_f={
A:function(d){return d.weekdays[d.getDay()]},
a:function(d){return d.weekdays[d.getDay()].substring(0,3)},
B:function(d){return d.months[d.getMonth()]},
b:function(d){return d.months[d.getMonth()].substring(0,3)},
C:function(d){return Math.floor(d.getFullYear()/100);},
c:function(d){return d.toString()},
D:function(d){
return d.strftime_f.m(d)+'/'+
d.strftime_f.d(d)+'/'+d.strftime_f.y(d);},
d:function(d){return d.getDate().pad(2,'0')},
e:function(d){return d.getDate()},
F:function(d){
return d.strftime_f.Y(d)+'-'+d.strftime_f.m(d)+'-'+
d.strftime_f.d(d);},
H:function(d){return d.getHours().pad(2,'0')},
I:function(d){return((d.getHours()%12||12).pad(2))},
j:function(d){
var t=d.getDate();
var m=d.getMonth()-1;
if(m>1){
var y=d.getYear();
if(((y%100)==0)&&((y%400)==0))++t;
else if((y%4)==0)++t;}
while(m>-1)t+=d.dpm[m--];
return t.pad(3,'0');},
k:function(d){return d.getHours().pad(2,' ')},
l:function(d){return((d.getHours()%12||12))},
M:function(d){return d.getMinutes().pad(2,'0')},
m:function(d){return(d.getMonth()+1).pad(2,'0')},
n:function(d){return"\n"},
p:function(d){return(d.getHours()>11)?'PM':'AM'},
Q:function(d){return(d.getMilliseconds()==0)?"000":d.getMilliseconds().pad(3,'0')},
R:function(d){return d.strftime_f.H(d)+':'+d.strftime_f.M(d)},
r:function(d){
return d.strftime_f.I(d)+':'+d.strftime_f.M(d)+':'+
d.strftime_f.S(d)+' '+d.strftime_f.p(d);},
S:function(d){return d.getSeconds().pad(2,'0')},
s:function(d){return Math.floor(d.getTime()/1000)},
T:function(d){
return d.strftime_f.H(d)+':'+d.strftime_f.M(d)+':'+
d.strftime_f.S(d);},
t:function(d){return"\t"},
u:function(d){return(d.getDay()||7)},
v:function(d){
return d.strftime_f.e(d)+'-'+d.strftime_f.b(d)+'-'+
d.strftime_f.Y(d);},
w:function(d){return d.getDay()},
X:function(d){return d.toTimeString()},
x:function(d){return d.toDateString()},
Y:function(d){return d.getFullYear()},
y:function(d){return(d.getYear()%100).pad(2)},
z:function(d){return''},
Z:function(d){return''},'%':function(d){return'%'}};
Date.prototype.strftime_f['+']=Date.prototype.strftime_f.c;
Date.prototype.strftime_f.h=Date.prototype.strftime_f.b;
Date.prototype.strftime=
function(fmt){
var rv;
if(rv=this[fmt])return rv;
var r=[];
var n=0;
while(n<fmt.length){
var c=fmt.charAt(n);
if(c=='%'){
c=fmt.charAt(++n);
r.push((this.strftime_f[c])?this.strftime_f[c](this):c);}else r.push(c);
++n;}
return this[fmt]=r.join('');};;
Splunk.namespace("Splunk.Logger");
Splunk.Logger.getLogger=function(fileName,mode){
var self;
mode=mode||Splunk.Logger.mode.Default;
try{
self=new(mode)(fileName);}catch(err){
self=this;
throw(new Error("Splunk.Logger mode is undefined, not callable or thrown an exception. mode="+mode+" and fileName="+fileName+". Check to make sure the mode you are defining exist (see: web.conf js_logger_mode) and is a proper closure. Stack trace:"+err));}
return self;};
Splunk.Logger.hasFirebug=function(){
return(typeof(console)!="undefined"&&console.firebug)?true:false;};
Splunk.Logger.hasConsole=function(){
return(typeof(console)!="undefined")?true:false;};
Splunk.Logger.mode={};
Splunk.Logger.mode.None=function(){
var self=this;
self.info=self.log=self.debug=self.warn=self.error=self.trace=function(){};};
Splunk.Logger.mode.Firebug=function(fileName){
var self=this;
var generateArguments=function(args){
var arr=[];
for(var i=0;i<args.length;i++){
arr.push(args[i]);}
arr.push(fileName);
return arr;};
var bindConsole=function(args,method){
var args=generateArguments(args);
if(Splunk.Logger.hasConsole()){
var method=console[method]||console.info||function(){};
if(method.apply){
method.apply(console,args);}else{
method(args.join(" "));}}};
if(Splunk.Logger.hasFirebug()&&console.firebug!='1.3.0'){
self.log=console.log;
self.info=console.info;
self.debug=console.debug;
self.warn=console.warn;
self.error=console.error;
self.trace=console.trace;}
else{
self.info=function(){
bindConsole(arguments,"info");};
self.log=function(){
bindConsole(arguments,"log");};
self.debug=function(){
bindConsole(arguments,"debug");};
self.warn=function(){
bindConsole(arguments,"warn");};
self.error=function(){
bindConsole(arguments,"error");};
self.trace=function(){
bindConsole(arguments,"trace");};}};
Splunk.Logger.mode.Server=function(fileName){
var self=this,
buffer=Splunk.Logger.mode.Server.Buffer.getInstance();
var bufferPush=function(args,level){
var message=Array.apply(null,args).join(" ");
var data={level:level,'class':fileName,message:message};
buffer.push(data);};
self.info=function(){
bufferPush(arguments,"info");};
self.log=function(){
bufferPush(arguments,"log");};
self.debug=function(){
bufferPush(arguments,"debug");};
self.warn=function(){
bufferPush(arguments,"warn");};
self.error=function(){
bufferPush(arguments,"error");};
self.trace=function(){
bufferPush(arguments,"trace");};};
Splunk.Logger.mode.Server.Buffer=function(){
var self=this,
thread,
buffer=[];
var serverPost=function(){
var data=JSON.stringify(buffer);
$.post(Splunk.Logger.mode.Server.END_POINT,{"data":data});};
var purge=function(){
serverPost();
buffer=[];};
var check=function(){
if(buffer.length>Splunk.Logger.mode.Server.MAX_BUFFER){
purge();}};
self.push=function(str){
buffer.push(str);
check();};
self.poller=function(){
if(buffer.length>0){
purge();}};
self.size=function(){
return buffer.length;};
self.Buffer=function(){
thread=setInterval(self.poller,Splunk.Logger.mode.Server.POLL_BUFFER);}();}
Splunk.Logger.mode.Server.Buffer.instance=null;
Splunk.Logger.mode.Server.Buffer.getInstance=function(){
if(Splunk.Logger.mode.Server.Buffer.instance==null){
Splunk.Logger.mode.Server.Buffer.instance=new Splunk.Logger.mode.Server.Buffer();}
return Splunk.Logger.mode.Server.Buffer.instance;};
Splunk.Logger.mode.Server.END_POINT=Splunk.util.make_url(Splunk.util.getConfigValue("JS_LOGGER_MODE_SERVER_END_POINT","util/log/js"));
Splunk.Logger.mode.Server.POLL_BUFFER=Splunk.util.getConfigValue("JS_LOGGER_MODE_SERVER_POLL_BUFFER",1000);
Splunk.Logger.mode.Server.MAX_BUFFER=Splunk.util.getConfigValue("JS_LOGGER_MODE_SERVER_MAX_BUFFER",100);
Splunk.Logger.mode.Default=Splunk.Logger.mode[Splunk.util.getConfigValue("JS_LOGGER_MODE","None")];
Splunk.log=function(msg,category,src){
Splunk.Logger.getLogger("logger.js").warn("WARNING! Splunk.log is now deprecated. See Splunk.Logger class for more details.","Original Message:",msg," Original Category:",category,"Original Source:",src);}
var D={};
D.logger=Splunk.Logger.getLogger("logger.js");
D.wrapper=function(str,level){
D.logger.warn("WARNING! D.",level,"is now deprecated. See Splunk.Logger class for more details.",str);};
D.debug=function(str){D.wrapper(str,"debug");};
D.error=function(str){D.wrapper(str,"error");};
D.warn=function(str){D.wrapper(str,"warn");};
Splunk.util.logger=Splunk.Logger.getLogger("util.js");;Splunk.namespace("Splunk.Error");
Splunk.Error.PROPAGATE=true;
Splunk.Error.loggerMode=Splunk.Logger.mode.Server;
Splunk.Error.Handler=new function(){
var self=this,
logger=Splunk.Logger.getLogger("Splunk.Error",Splunk.Error.loggerMode);
self.onerror=function(message,fileName,lineNumber){
var output=format(message,fileName,lineNumber);
logger.error(output);
return!Splunk.Error.PROPAGATE;};
self.raise=function(error){
var output=format(error.message,error.fileName,error.lineNumber);
logger.error(output);
if(Splunk.Error.PROPAGATE){
throw error;}};
var format=function(message,fileName,lineNumber){
return"lineNumber="+lineNumber+", message="+message+", fileName="+fileName;};
var jQueryHandler=function(){
var bindCopy=jQuery.fn.bind;
jQuery.fn.bind=function(type,data,fn){
if(!fn&&data&&typeof(data)=='function'){
fn=data;
data=null;}
if(fn){
var fnCopy=fn;
var handler=function(){
try{
fnCopy.apply(this,arguments);}catch(e){
self.raise(e);}};
fn=handler;}
return bindCopy.call(this,type,data,fn);};};
self.Error=function(){
if(window.chrome){
return;}
window.onerror=self.onerror;}();};;Splunk.namespace("Splunk.Session");
Splunk.Session=$.klass({
EVENT_BUFFER_TIMEOUT:1000,
UI_INACTIVITY_TIMEOUT:60,
START_EVENT:"SessionStart",
TIMEOUT_EVENT:"SessionTimeout",
UI_EVENT_TYPES:["click","keydown","mouseover","scroll"],
initialize:function(){
this.logger=Splunk.Logger.getLogger("Splunk.Session");
this.serverLogger=Splunk.Logger.getLogger("Splunk.Session",Splunk.Logger.mode.Server);
this.eventBuffer=[];
this.timeoutDelay=Splunk.util.getConfigValue("UI_INACTIVITY_TIMEOUT",this.UI_INACTIVITY_TIMEOUT);
this.timeoutDelay*=60000;
this.timeoutID=null;
$(document).bind(this.START_EVENT,this.onSessionStart.bind(this));
if(this.timeoutDelay<1){
this.logger.info("UI_INACTIVITY_TIMEOUT is zero or a negative number, no timeout event will be fired. Sessions will survive as long as the browser is open.");}else{
this.logger.info("UI_INACTIVITY_TIMEOUT is a number, a timeout event will be fired in",this.timeoutDelay,"mins. if there is no ui activity.");
$(document).bind(this.TIMEOUT_EVENT,this.onSessionTimeout.bind(this));
$(document).bind(this.UI_EVENT_TYPES.join(" "),this.onUIEvent.bind(this));
this.startTimeout();}
$(document).trigger(this.START_EVENT,new Date());},
onUIEvent:function(event){
if(this.timeoutID){
this.eventBuffer.push("");
if(this.eventBuffer.length===1){
this.resetTimeout();
setTimeout(
function(){
this.eventBuffer=[];}.bind(this),
this.EVENT_BUFFER_TIMEOUT);}}else{
this.startTimeout();
$(document).trigger(this.START_EVENT,new Date());}},
onSessionStart:function(event,date){
var serverMessage=[];
var navigator=window.navigator;
var screen=window.screen;
var flash=swfobject.getFlashPlayerVersion();
var flashInfo="flash="+flash.major+"."+flash.minor+"."+flash.release;
var genericMessage="Splunk.Session.START_EVENT fired @"+date.toString();
var documentURL="documentURL"+"="+document.URL;
var documentReferrer="documentReferrer"+"="+document.referrer;
this.logger.info(genericMessage);
for(var i in navigator){
if(typeof(navigator[i])==="string"&&navigator[i].length>0){
var navigatorInfo=i+"="+navigator[i];
serverMessage.push(navigatorInfo);}}
for(var j in screen){
var screenInfo=j+"="+screen[j];
serverMessage.push(screenInfo);}
serverMessage.push(documentURL);
serverMessage.push(documentReferrer);
serverMessage.push(flashInfo);
serverMessage.push(genericMessage);
this.serverLogger.info(serverMessage.join(", "));},
onSessionTimeout:function(event,date){
this.logger.info("Splunk.Session.TIMEOUT_EVENT fired @",date.toString());},
resetTimeout:function(){
this.stopTimeout();
this.startTimeout();},
startTimeout:function(){
this.timeoutID=window.setTimeout(this.timeoutHandler.bind(this),this.timeoutDelay);},
stopTimeout:function(){
if(this.timeoutID){
window.clearTimeout(this.timeoutID);
this.timeoutID=null;}},
timeoutHandler:function(){
this.stopTimeout();
$(document).trigger(this.TIMEOUT_EVENT,new Date());}});
Splunk.Session.instance=null;
Splunk.Session.getInstance=function(){
if(!Splunk.Session.instance){
Splunk.Session.instance=new Splunk.Session();}
return Splunk.Session.instance;};;i18n_register({"catalog":{"+-Splunk is ignoring a request to cancel a scheduled job because it is unsafe to cancel jobs that have been dispatched through an alert.":"Splunk is ignoring a request to cancel a scheduled job because it is unsafe to cancel jobs that have been dispatched through an alert."},"plural":function(n){return n==1?0:1;}});
Splunk.Job=$.klass({
_isDone:0,
_isCanceled:false,
_isPaused:false,
_isFinalized:false,
_isSaved:false,
_isPreviewEnabled:false,
_isRealTimeSearch:false,
_canBeAutoCancelled:false,
_eventCount:0,
_resultCount:0,
_resultPreviewCount:0,
_scanCount:0,
_eventAvailableCount:0,
_doneProgress:0,
_eventIsStreaming:1,
_cursorTime:false,
_sid:null,
_createTime:false,
_search:"",
_eventSearch:false,
_lastProgressEvent:0,
logger:Splunk.Logger.getLogger("job.js"),
initialize:function(search){
if(search){
this._search=search;}else{
this.logger.error("Splunk.Job - Assertion Failed. search string not supplied for Splunk.Job constructor.");}},
getSearch:function(){
return this._search;},
getEventSearch:function(){
return this._eventSearch;},
setSearchId:function(searchId){
if(this._setSearchIdHasBeenCalled)this.logger.error("Splunk.Job Assertion Failed. setSearchId can only be called once.\nold sid=",this._sid,"\nnew sid=",searchId);
this._sid=searchId;
this._setSearchIdHasBeenCalled=true;},
setSID:function(sid){
return this.setSearchId(sid);},
getSearchId:function(){return this._sid;},
getSID:function(){return this.getSearchId();},
getEventCount:function(){return this._eventCount;},
getResultCount:function(){
if(this._isPreviewEnabled&&!this._isDone&&Splunk.util.isInt(this._resultPreviewCount)){
return this._resultPreviewCount;}else{
return this._resultCount;}},
getScanCount:function(){return this._scanCount;},
getEventAvailableCount:function(){
if(this.getStatusBuckets()==0)return this.getResultCount();
return this._eventAvailableCount;},
getEventFieldCount:function(){return this._eventFieldCount;},
getCursorTime:function(){return this._cursorTime;},
getCreateTime:function(){
if(!this._createTime)return false;
var createTime=new Date();
createTime.setTime(this._createTime*1000);
return createTime;},
getTimeRange:function(){
if(!this._earliestTime||!this._latestTime){
return new Splunk.TimeRange();}
var startTime=Splunk.util.getEpochTimeFromISO(this._earliestTime);
var endTime=Splunk.util.getEpochTimeFromISO(this._latestTime);
if(isNaN(startTime)){
startTime=this._earliestTime;
endTime=this._latestTime;}
if(startTime==0)startTime=null;
if(endTime==0)endTime=null;
return new Splunk.TimeRange(startTime,endTime);},
getEventSorting:function(){return this._eventSorting},
getDoneProgress:function(){
var doneProgress=this._doneProgress;
if(doneProgress.toString().indexOf("%")!=-1){
doneProgress=doneProgress.replace("%","");}
return parseFloat(doneProgress,10);},
getStatusBuckets:function(){return this._statusBuckets;},
isDone:function(){return(this._sid)?this._isDone:false;},
isCanceled:function(){return this._isCanceled;},
isPaused:function(){return this._isPaused;},
isFinalized:function(){return this._isFinalized;},
isSaved:function(){return this._isSaved;},
isPreviewable:function(){return this._isPreviewEnabled;},
isRealTimeSearch:function(){return this._isRealTimeSearch;},
canBeAutoCancelled:function(){
if(this.isRealTimeSearch()){
return false;}
return(!this.isSaved()&&this._canBeAutoCancelled);},
isRunning:function(){
if(this._isDone||this._isPaused)return false;
return true;},
isEventStreaming:function(){return this._eventIsStreaming},
areResultsTransformed:function(){
var key="_reportSearch"
return(this.hasOwnProperty(key)&&this[key]);},
cancel:function(onSuccess,onFailure){
if(this.isCanceled())return false;
if(this.delegate){
var messenger=Splunk.Messenger.System.getInstance();
messenger.send('error','splunk.search',_("Splunk is ignoring a request to cancel a scheduled job because it is unsafe to cancel jobs that have been dispatched through an alert."));
return false;}
this.logger.debug('Canceling job',this._sid,'.');
var onSuccessOuter=function(){
this.logger.debug('Canceled job',this._sid,'successfully.');
$(document).trigger('jobCanceled',[this._sid]);
this._sid=null;
if(onSuccess)onSuccess();}.bind(this);
this._callJobEndpoint('cancel',onSuccessOuter,onFailure);
this._isCanceled=true;},
pause:function(onSuccess,onFailure){
if(this.isDone()||this.isPaused()){
this.logger.warn("Can't pause job",this._sid,"because it is done or already paused.");
return false;}
this.logger.debug('Pausing job',this._sid,'.');
this._callJobEndpoint('pause',onSuccess,onFailure);
this._isPaused=true;},
unpause:function(onSuccess,onFailure){
if(this.isDone()||!this.isPaused()){
this.logger.warn("Can't unpause job",this._sid,"because it is not paused or because it is done.");
return false;}
this.logger.debug('Unpausing job',this._sid,'.');
this._callJobEndpoint('unpause',onSuccess,onFailure);
this._isPaused=false;},
setTTL:function(onSuccess,onFailure,ttl){
this.logger.debug('Setting ttl',ttl,'for job',this._sid,'.');
var options={data:{ttl:ttl}};
this._callJobEndpoint('ttl',onSuccess,onFailure,options);},
setPreviewable:function(state){
this._isPreviewEnabled=state;
this._callJobEndpoint(this._isPreviewEnabled?'enablepreview':'disablepreview');},
setAsAutoCancellable:function(bool){
this._canBeAutoCancelled=bool;
if(bool&&this.isSaved()){
this.logger.warn("a job was set as cancellable which should be impossible because this job has been previously saved by the user.");}},
setCreateTime:function(foo){
this._createTime=foo;},
setLastProgressTime:function(){
this._lastProgressEvent=new Date();},
getTimeSinceLastProgress:function(){
return(new Date()-this._lastProgressEvent);},
finalize:function(onSuccess,onFailure){
if(this.isDone()||this.isFinalized()){
this.logger.warn("Cannot finalized a job marked as done.");
return false;}else if(this.isPaused()){
this.unpause();}
this.logger.debug('Finalizing job',this._sid,'.');
this._callJobEndpoint('finalize',onSuccess,onFailure);
this._isFinalized=true;},
touch:function(onSuccess,onFailure){
this.logger.debug('Touching job',this._sid,'.');
this._callJobEndpoint('touch',onSuccess,onFailure);},
save:function(onSuccess,onFailure){
this.setAsAutoCancellable(false);
this.logger.debug('Saving job',this._sid,'.');
this._isSaved=true;
this._callJobEndpoint('save',onSuccess,onFailure);},
unsave:function(onSuccess,onFailure){
this.logger.debug('Unsaving job',this._sid,'.');
this._isSaved=false;
this._callJobEndpoint('unsave',onSuccess,onFailure);},
makeWorldReadable:function(onSuccess,onFailure){
this.logger.debug('making job world readable',this._sid,'.');
this._callJobEndpoint('makeWorldReadable',onSuccess,onFailure);},
undoWorldReadable:function(onSuccess,onFailure){
this.logger.debug('making the job no longer world readable',this._sid,'.');
this._callJobEndpoint('undoWorldReadable',onSuccess,onFailure);},
_callJobEndpoint:function(action,onSuccess,onFailure,options){
options=options||{};
if(!action){
throw new Error("Cannot call the job endpoint without an action");}
if(!this._sid){
throw new Error("Cannot call the job endpoint if we dont have an sid yet");}
var optionsData=options.data||{};
var data=$.extend({'action':action},optionsData);
var ajaxOptions={'type':'POST','url':Splunk.util.make_url('api/search/jobs',this._sid,'control'),'data':data,'dataType':'json','success':function(data){
try{
if(data["success"]){
this.logger.info('Called',action,'on job',this._sid,'successfully.');
$(document).trigger('jobStatusChanged',[this._sid,action]);
if(onSuccess)onSuccess();
return true;}else{
this.logger.info('no success in the data');
if(onFailure)onFailure();}}
catch(error){
this.logger.error('error encountered in Job._callJobEndpoint for action=',action,' error=',error);
if(onFailure)onFailure();}
if(data.messages&&data.messages.length>0){
var messenger=Splunk.Messenger.System.getInstance();
for(var i=0,len=data.messages.length;i<len;i++){
var level=data.messages[i].type.toLowerCase();
var text=data.messages[i].message
if(level=="error"||level=="fatal"){
messenger.send(level,"splunk.search",text);}}}
this.logger.warn('Could not call',action,'on job',this._sid);}.bind(this),'error':function(xhr,status,error){
if(onFailure)onFailure(xhr,status,error,action);}}
$.ajax(ajaxOptions);},
updateByTicketValues:function(ticket){
var requiredKeys=['isDone','eventCount','resultCount','scanCount','eventAvailableCount','eventFieldCount','doneProgress'];
for(var i=0,l=requiredKeys.length;i<l;i++){
if(!ticket.hasOwnProperty(requiredKeys[i]))
this.logger.error("Failed to get required job property="+requiredKeys[i]+' for sid='+this._sid);}
for(var key in ticket){
if(!ticket.hasOwnProperty(key))continue;
this["_"+key]=ticket[key];}}});
Splunk.Job.BATCH_ACTION_ENDPOINT='api/search/jobs/control';
Splunk.Job.batchAction=function(sids,action,callback,options){
if(!sids||!action)throw new Exception("SIDs and an action must be provided to call a batchAction.");
options=options||{};
var url=Splunk.util.make_url(Splunk.Job.BATCH_ACTION_ENDPOINT);
var params={
sid:sids,
action:action};
var optionsData=options.data||{};
var data=$.extend(params,optionsData);
callback=callback||function(){};
$.post(url,data,callback);};
Splunk.Job.buildJobFromSID=function(sid,onSuccess,onFailure){
var logger=Splunk.Logger.getLogger('job.js');
var jobber=Splunk.Globals['Jobber'];
if(!jobber){
logger.warn('Cannot find Splunk.Jobber.');
onFailure();
return;}
var safelyBuildJob=function(){
var job=jobber.getJob(sid);
if(job){
onSuccess(job);}else{
onFailure();}}
if(jobber.hasJob(sid))return safelyBuildJob();
$(document).one('jobberTicketsRefreshed',safelyBuildJob);
$(document).trigger('jobDispatched',[jobber.buildJob(sid)]);};
Splunk.JobArray=function(){
var a=Array.prototype.slice.call(arguments);
a.constructor=Splunk.JobArray;
for(var i in Splunk.JobArray.prototype){
if(!Object.prototype[i])a[i]=Splunk.JobArray.prototype[i];}
return a;};
Splunk.JobArray.prototype.slice=function(start,end){
return Splunk.JobArray.apply(null,Array.prototype.slice.call(this,start,end));};
Splunk.JobArray.prototype.concat=function(){
return Splunk.JobArray.apply(null,Array.prototype.concat.apply(this,arguments));};
Splunk.JobArray.prototype.filter=function(callback){
callback=callback||function(job){if(job)return true;};
var a=new Splunk.JobArray;
for(var i=0,j=this.length;i<j;i++){
if(callback(this[i]))a.push(this[i]);}
return a;};
Splunk.JobArray.prototype.JOB_ACTIONS=['cancel','pause','unpause','finalize'];
Splunk.JobArray.prototype.setTTL=function(callback,ttl){
this._callAction('ttl',callback,{data:{ttl:ttl}});}
Splunk.JobArray.prototype._callAction=function(action,callback,options){
options=options||{};
var sids=[];
for(var i=0,j=this.length;i<j;i++){
if(this[i].getSearchId())sids.push(this[i].getSearchId());}
if(sids.length>0)return Splunk.Job.batchAction(sids,action,callback,options);
return false;};
Splunk.JobArray.prototype._generateActionMethod=function(action){
this[action]=function(callback){
return this._callAction(action,callback);}};
for(var i=0,j=Splunk.JobArray.prototype.JOB_ACTIONS.length;i<j;i++){
Splunk.JobArray.prototype._generateActionMethod(Splunk.JobArray.prototype.JOB_ACTIONS[i]);};i18n_register({"catalog":{"+-Your network connection may have been lost or Splunk web may be down.":"Your network connection may have been lost or Splunk web may be down.","+-Your session has expired.":"Your session has expired.","+-Your network connection was either restored or Splunk web was restarted.":"Your network connection was either restored or Splunk web was restarted."},"plural":function(n){return n==1?0:1;}});Splunk.namespace("Splunk.Messenger");
Splunk.Messenger.Bus=$.klass({
DATE_FORMAT:"%Y-%m-%dT%H:%M:%S",
MAX_SUBJECTS_BUFFER:100,
MAX_OBSERVERS_BUFFER:200,
initialize:function(){
this.count=1;
this.id=0;
this.logger=Splunk.Logger.getLogger("Splunk.Messenger.Bus");
this.observers=[];
this.subjects=[];
$(window).bind("unload",this.gc.bind(this));},
createObserver:function(filter,sort,callback,negate,cancel){
filter.control=filter.hasOwnProperty('control')?filter.control:true;
return{'filter':filter,'sort':sort,'callback':callback,'negate':negate,'cancel':cancel};},
createSubject:function(level,content,className,date,id,control){
return{'level':level,'control':control,'content':content,'className':className,'date':date,'id':id};},
filter:function(arrayOfObjects,kv){
var included=[];
var excluded=[];
for(i=0;i<arrayOfObjects.length;i++){
var object=arrayOfObjects[i];
var match=true;
for(var k in kv){
if(kv.hasOwnProperty(k)&&object.hasOwnProperty(k)&&
((k=='control'&&(kv[kv]||!object[k])||((kv[k]instanceof RegExp)?object[k].search(kv[k])!=-1:kv[k]==object[k])))){
continue;}else{
match=false;
break;}}
if(match){
included.push(object);}else{
excluded.push(object);}}
return{"included":included,"excluded":excluded};},
gc:function(){
this.observers=[];},
getEmptySubject:function(){
return this.createSubject("","","","","",false);},
getUniqueId:function(){
this.id++;
var paddingLength=[this.MAX_OBSERVERS_BUFFER].join("").length+1;
var zeropad=[this.id,""].join("");
while(zeropad.length<paddingLength){
zeropad=["0",zeropad].join("");}
return zeropad;},
getSubjects:function(del,filter,sort,negate){
var negate=arguments[3]||false;
var filtered=(filter&&this.hasSubjectProperty(filter))?this.filter(this.subjects,filter):{"included":this.subjects.concat([]),"excluded":[]};
var included=(negate)?filtered.excluded:filtered.included;
var excluded=(negate)?filtered.included:filtered.excluded;
if(del){
this.subjects=excluded;}
return(sort&&sort.length>0)?this.sort(included,sort):included;},
getSubjectLength:function(filter){
var negate=arguments[1]||false;
return this.getSubjects(false,filter,null,negate).length;},
hasSubjectProperty:function(object){
for(var property in object){
if(this.isValidSubjectProperty(property)){
return true;}}
return false;},
isValidSubject:function(object){
var subject=this.getEmptySubject();
for(var property in subject){
if(subject.hasOwnProperty(property)&&!object.hasOwnProperty(property)){
return false;}}
return true;},
isValidSubjectProperty:function(property){
var subject=this.getEmptySubject();
return(subject.hasOwnProperty(property))?true:false;},
notify:function(observers){
observers=observers.concat([]).sort(this.observerNotifySortby.bind(this));
var observer;
for(var j=0;j<observers.length;j++){
observer=observers[j];
var subjects=this.getSubjects(observer.cancel,observer.filter,observer.sort,observer.negate);
for(var k=0;k<subjects.length;k++){
var subject=subjects[k];
try{
observer.callback(subject);}catch(e){
setTimeout(function(e){throw e},0);}}}
for(var l=0;l<observers.length;l++){
observer=observers[l];
this.getSubjects(true,observer.filter,null,observer.negate);}},
observerNotifySortby:function(a,b){
return 0;},
receive:function(filter,sort,callback,negate,cancel){
var observer=this.createObserver(filter,sort,callback,negate,cancel);
if(this.observers.length>=this.MAX_OBSERVERS_BUFFER){
this.logger.warn("observers length exceeds MAX_OBSERVERS_BUFFER constraint of",this.MAX_OBSERVERS_BUFFER,"dropping earliest item.");
this.observers.shift();}
this.observers.push(observer);
this.notify([observer]);},
send:function(level,content,className,id,date,control){
date=date||(new Date()).strftime(this.DATE_FORMAT);
id=id||this.getUniqueId();
control=control?true:false;
var subject=this.createSubject(level,content,className,date,id,control);
if(this.subjects.length>=this.MAX_SUBJECTS_BUFFER){
this.logger.warn("subjects length exceeds MAX_SUBJECTS_BUFFER constraint of",this.MAX_SUBJECTS_BUFFER,"dropping earliest item.");
this.subjects.shift();}
this.logger.info(sprintf('MSG [%s, %s] %s',level,className,content));
this.subjects.push(subject);
this.notify(this.observers);},
sort:function(arrayOfObjects,keys){
var sortedArray=arrayOfObjects.concat([]);
for(var i=0;i<keys.length;i++){
var k=keys[i];
sortedArray.sort(function(a,b){
if(!a.hasOwnProperty(k)||!b.hasOwnProperty(k)){
this.logger.warn("Cannot sort with invalid key",k);
return 0;}else{
return([a[k],b[k]].sort()[0]!==a[k])?1:-1;}});}
return sortedArray;}});
Splunk.Messenger.System=$.klass(Splunk.Messenger.Bus,{
RECEIVE_WILD_CARD:"*",
RECEIVE_LEVELS:["persistent","info","warn","error","fatal"],
RECEIVE_LEVEL:"fatal",
REQUEST_TIMEOUT:5000,
SERVER_ENABLED:true,
SERVER_POLL_INTERVAL:60000,
SERVER_RESOURCE:Splunk.util.make_url("/api/messages/index"),
SERVER_CLASSIFIER:"splunk.services",
SERVER_SESSION_EXPIRED_MESSAGE:_("Your session has expired."),
SERVER_DOWN_MESSAGE:_("Your network connection may have been lost or Splunk web may be down."),
SERVER_BACK_UP_MESSAGE:_("Your network connection was either restored or Splunk web was restarted."),
OFFLINE_WARNING_THRESHOLD:2,
initialize:function($super){
$super();
this.logger=Splunk.Logger.getLogger("Splunk.Messenger.System");
this.intervalId=null;
this.isRequestQueued=false;
this.isServerDown=false;
this.errorCount=0;
this.abortRequests=false;
this.previousEtag="";
if(this.SERVER_ENABLED&&typeof DISABLE_MESSENGER==='undefined'){
setTimeout(this.getServerMessages.bind(this),0);
this.startPoller();}
$(document).bind("SessionTimeout",this.onSessionTimeout.bind(this));
$(document).bind("SessionStart",this.onSessionStart.bind(this));},
classNameSerialize:function(className){
var regex;
if(!className)
className=this.RECEIVE_WILD_CARD;
if(className===this.RECEIVE_WILD_CARD){
regex=/./;}else{
var classNameParts=className.split(".");
if(classNameParts.length===0){
classNameParts=[className];}
var pattern="^"+classNameParts.join("\.");
try{
regex=new RegExp(pattern);}catch(e){
this.logger.error("Could not create RegExp object for className",className);
return null;}}
return regex;},
getServerMessages:function(){
if(!this.isRequestQueued&&!this.abortRequests){
this.isRequestQueued=true;
$.ajax({
type:"GET",
url:this.SERVER_RESOURCE,
dataType:"text",
beforeSend:function(XMLHttpRequest){
try{
XMLHttpRequest.setRequestHeader("If-None-Match",this.previousEtag);}catch(e){}}.bind(this),
timeout:this.REQUEST_TIMEOUT,
error:this.onServerMessagesError.bind(this),
complete:this.onServerMessagesComplete.bind(this)});}},
observerNotifySortby:function(a,b){
var classNameA=(a.filter.className instanceof RegExp)?a.filter.className.toString():a.filter.className;
var classNameB=(b.filter.className instanceof RegExp)?b.filter.className.toString():b.filter.className;
var classNameWildCard=this.classNameSerialize(this.RECEIVE_WILD_CARD).toString();
if(classNameA===classNameWildCard){
return 1;}else if(classNameB===classNameWildCard){
return-1}else{
return([classNameA,classNameB].sort()[0]!==classNameA)?1:-1;}},
onServerMessagesError:function(){},
onServerMessagesComplete:function(data,textStatus){
this.isRequestQueued=false;
this.previousEtag=data.getResponseHeader("Etag");
switch(data.status){
case 0:
case 12029:
this.errorCount++;
this.previousEtag=new Date();
if(this.errorCount>=this.OFFLINE_WARNING_THRESHOLD){
this.isServerDown=true;
this.send("error",this.SERVER_CLASSIFIER,this.SERVER_DOWN_MESSAGE);
this.logger.warn("Server message timeout, offline");}
break;
case 304:
this.errorCount=0;
break;
case 412:
this.abortRequests=true;
this.send("error",this.SERVER_CLASSIFIER,this.SERVER_SESSION_EXPIRED_MESSAGE);
this.logger.warn("Server message session expired, abort further requests.");
break;
case 200:
this.errorCount=0;
if(this.isServerDown){
this.logger.info("Server message back online.");
this.isServerDown=false;
this.previousEtag=new Date();
this.send("persistent",this.SERVER_CLASSIFIER,this.SERVER_BACK_UP_MESSAGE);
break;}
this.processResponse(data);
break;
default:
break;}},
onSessionStart:function(event,date){
this.logger.info("Starting message poller...");
this.abortRequests=false;},
onSessionTimeout:function(event,date){
this.logger.info("Stopping message poller...");
this.abortRequests=true;},
processResponse:function(data){
try{
this.logger.info("Server message process response");
data=JSON.parse(data.responseText);}catch(e){
this.logger.warn("Could not parse server messages with error");
return;}
for(var i=0;i<data.messages.length;i++){
var dataObj=data.messages[i];
if(dataObj.hasOwnProperty("type")&&dataObj.hasOwnProperty("message")){
try{
this.send(dataObj.type.toLowerCase(),this.SERVER_CLASSIFIER,dataObj.message,dataObj.id);}catch(e){
this.logger.error("Could not send message through bus",e);}}else{
this.logger.error("Missing jsonresponse property from app server.")}}},
receive:function($super,className,callback,id,control){
if(!className)
className=this.RECEIVE_WILD_CARD;
var classNameRegExp=this.classNameSerialize(className);
if(!classNameRegExp){
return;}
for(var i=0;i<this.RECEIVE_LEVELS.length;i++){
var filter={};
filter.className=classNameRegExp;
if(id){
filter.id=id;}
if(control)
filter.control=true;
filter.level=this.RECEIVE_LEVELS[i];
var uniqueReceiver=true;
for(var j=0;j<this.observers.length;j++){
var observerFilter=this.observers[j].filter;
if((observerFilter.level&&observerFilter.level===filter.level)&&(observerFilter.className&&observerFilter.className.toString()===filter.className.toString())){
uniqueReceiver=false;
this.logger.warn("Can't add another receiver with level",filter.level,"for already observed className",className);
break;}}
if(uniqueReceiver){
$super(filter,null,callback,false,true);}
if(this.RECEIVE_LEVELS[i]===this.RECEIVE_LEVEL){
break;}}},
resetPoller:function(){
if(this.intervalId){
clearInterval(this.intervalId);}
this.startPoller();},
send:function($super,level,className,content,id,control){
id=id||null
if(jQuery.inArray(level,this.RECEIVE_LEVELS)!=-1){
if(this.SERVER_ENABLED){
this.resetPoller();}
$super(level,content,className,id,null,control);}else{
this.logger.warn("Message not sent, invalid message level -",level,"- needs to be one of",this.RECEIVE_LEVELS.join(","));}},
startPoller:function(){
this.intervalId=setInterval(this.getServerMessages.bind(this),this.SERVER_POLL_INTERVAL);},
clear:function(){
this.send('info','control','CLEAR',null,true);}});
Splunk.Messenger.System.instance=null;
Splunk.Messenger.System.getInstance=function(){
if(!Splunk.Messenger.System.instance){
Splunk.Messenger.System.instance=new Splunk.Messenger.System();}
return Splunk.Messenger.System.instance;};;
Splunk.Message=$.klass({
EXTERNAL_LINK_REX:/\[(\!?)(\w+\:\/\/[^\s]+)\s+([^\]]+)\]/g,
INTERNAL_LINK_REX:/\[\[(\!?)([^\|]+)\|([^\]]+)\]\]/g,
TARGET_BLANK_TOKEN_REX:/#~#!#~#/g,
TARGET_SAME_TOKEN_REX:/\s*#~##~#/g,
SERVER_DELETE_RESOURCE:Splunk.util.make_url("/api/messages/delete"),
initialize:function(){
this.logger=Splunk.Logger.getLogger("splunk.message");
this.displayedMessages=[];
this.allMessages=[];
this.filter='*';
if(this.filter=="*"){
this.maxQueueSize=20;
this.defaultDisplaySize=3;}else{
this.maxSize=1;
this.defaultDisplaySize=this.maxSize;
this.maxQueueSize=this.maxSize;}
this.selectedDisplaySize=this.defaultDisplaySize;
this.list=$("#adminlite_messages");
this.messenger=Splunk.Messenger.System.getInstance();
this.messenger.receive(this.filter,this.unshift.bind(this),undefined,true);
var self=this;
$("a.remove","#adminlite_messages").live('click',function(){
var message_id=$(this).attr("data-id");
if($(this).hasClass("splunkd")){
$.ajax({
type:"POST",
url:self.SERVER_DELETE_RESOURCE,
dataType:"text",
data:"message_id="+message_id,
error:function(){self.onMessageDeleted(message_id);},
success:function(){self.onMessageDeleted(message_id);}});}else{
self.onMessageDeleted(message_id);}
return false;});
$("a.showall","#adminlite_messages").live('click',function(){
self.onShowAll();});
$("a.hide","#adminlite_messages").live('click',function(){
self.onHide();});},
onServerMessagesError:function(data){
alert("Could not delete message: ");},
clear:function(){
var levels=arguments[0]||[];
var allMessages=[];
this.logger.warn("Clearing messages with the exclusion of levels",levels);
for(var i=0;i<this.allMessages.length;i++){
var message=this.allMessages[i];
if($.inArray(message.level,levels)!=-1){
allMessages.push(message);}}
this.allMessages=allMessages;
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageClear");},
handleControlMessage:function(message){
switch(message.content){
case'CLEAR':
this.clear();
break;
default:
break;}},
getHTMLTransform:function(){
var html=[];
for(var i=0;i<this.displayedMessages.length;i++){
var message=this.displayedMessages[i];
html.push('<li class="message '+message.level+'">');
html.push('<div style="float:left">');
html.push(this.getWikiTranform(message.content));
html.push('</div>');
var myClass='';
if(isNaN(message.id)){
myClass='splunkd';
html.push('<div style="float:right"><a href="#" data-id="'+Splunk.util.escapeHtml(message.id)+'" class="remove '+myClass+'">x</a></div>');}
html.push('<div style="clear:both"/>');
html.push('</li>');}
var numhiddenmessages=this.allMessages.length-this.selectedDisplaySize;
if(numhiddenmessages>0){
var content=""+numhiddenmessages+" messages not shown.";
html.push('<li class="info">');
html.push(this.getWikiTranform(content));
html.push('<a href="#" class="showall"> Show all </a>');
html.push('</li>');}
if(this.selectedDisplaySize==this.maxQueueSize&&this.allMessages.length>this.defaultDisplaySize){
html.push('<li class="info"> <a href="#" class="hide">Hide messages</a> </li>');}
return html.join('');},
getWikiTranform:function(str){
var text=Splunk.util.escapeHtml(str);
text=text.replace(this.EXTERNAL_LINK_REX,'<a href="$2" #~#$1#~#>$3</a>');
text=text.replace(this.INTERNAL_LINK_REX,this._generateInternalLink);
text=text.replace(this.TARGET_BLANK_TOKEN_REX,'target="_blank"');
text=text.replace(this.TARGET_SAME_TOKEN_REX,'');
return text;},
_generateInternalLink:function(str,blank_token,url,text){
url=Splunk.util.make_url(url);
return'<a href="'+url+'"#~#'+blank_token+'#~#>'+text+'</a>';},
onMessageDeleted:function(message_id){
for(var j=0;j<this.allMessages.length;j++){
var id=this.allMessages[j].id;
if(message_id==id){
this.allMessages.splice(j,1);
j--;}}
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);},
onShowAll:function(){
this.selectedDisplaySize=this.maxQueueSize;
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);},
onHide:function(){
this.selectedDisplaySize=this.defaultDisplaySize;
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);},
unshift:function(){
var previousMessages=[].concat(this.allMessages);
for(var i=arguments.length-1;i>-1;i--){
var message=arguments[i];
if(message.control){
this.handleControlMessage(message);
continue;}
for(var j=0;j<this.allMessages.length;j++){
var content=this.allMessages[j].content;
var level=this.allMessages[j].level;
if(message.content==content&&message.level==level){
this.allMessages.splice(j,1);
j--;}}
this.allMessages=[{level:message.level,content:message.content,id:message.id}].concat(this.allMessages);}
this.allMessages.splice(this.maxQueueSize,this.allMessages.length-this.maxQueueSize);
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
if(!Splunk.util.objectSimilarity(previousMessages,this.displayedMessages)){
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift");}
return $("li",this.list).length;}});;Splunk.Context=$.klass({
logger:Splunk.Logger.getLogger("search_context.js"),
_root:{},
initialize:function(){
this._root={};},
enforceByValue:function(value){
if(value instanceof Object){
if(typeof(value.clone)=="function"){
return value.clone();}
else if(typeof(value)=="function"){
return value;}
else if(value instanceof Array){
return $.extend([],true,value);}
else{
return $.extend({},true,value);}}
return value;},
get:function(name){
if(this.has(name)){
return this.enforceByValue(this._root[name]);}
return null;},
getAll:function(name){
if(name==""){
return this.enforceByValue(this._root);}
var hash={};
for(var key in this._root){
if(this._root.hasOwnProperty(key)){
var truncatedKey;
if(key==name){
truncatedKey=""}else if(key.indexOf(name+".")!=-1){
truncatedKey=key.replace(name+".","");}else{
continue;}
hash[truncatedKey]=this.enforceByValue(this._root[key]);}}
return hash},
has:function(name){
return this._root.hasOwnProperty(name);},
set:function(name,value){
var value=this.enforceByValue(value);
this._root[name]=value;},
clone:function(){
var clonedContext=new Splunk.Context();
for(var key in this._root){
if(this._root.hasOwnProperty(key)){
clonedContext.set(key,this.get(key));}}
return clonedContext;}});;i18n_register({"catalog":{"+-Could not get a search id for the search.":"Could not get a search id for the search.","+-Encountered an unexpected error while parsing intentions.":"Encountered an unexpected error while parsing intentions.","+-Splunk encountered an error when it tried to launch the report builder popup (or the popup was blocked by an uncommonly aggressive popup blocker).":"Splunk encountered an error when it tried to launch the report builder popup (or the popup was blocked by an uncommonly aggressive popup blocker).","+-Splunkd returned an unsuccessful response when trying to dispatch a search. Try again or contact an admin.":"Splunkd returned an unsuccessful response when trying to dispatch a search. Try again or contact an admin.","+-parser response was valid JSON but contained neither search nor messages":"parser response was valid JSON but contained neither search nor messages","+-specified maxCount (%count)s is not an integer":"specified maxCount (%count)s is not an integer","+-specified maxEvents (%count)s is not an integer":"specified maxEvents (%count)s is not an integer","+-parser response was valid JSON but contained no search.":"parser response was valid JSON but contained no search."},"plural":function(n){return n==1?0:1;}});Splunk.Search=$.klass({
_baseSearch:false,
_fullSearchWithIntentions:false,
_postProcess:false,
_range:false,
_intentions:[],
_maxTime:0,
_maxCount:false,
_maxEvents:false,
_savedSearchName:false,
_remoteServerList:[],
_selectedEventCount:-1,
_selectedEventAvailableCount:-1,
_acl:{},
_statusBuckets:0,
_requiredFieldList:[],
job:false,
logger:Splunk.Logger.getLogger("search.js"),
messenger:Splunk.Messenger.System.getInstance(),
initialize:function(searchStr,timeRange){
this._baseSearch=searchStr||"*";
if(searchStr){
this.job=new Splunk.Job(searchStr);}
this._range=timeRange||new Splunk.TimeRange();
this._intentions=[];},
clone:function(noArg){
if(noArg)this.logger.error("the preserveJobReference arg has been removed from Search.clone");
var search=new Splunk.Search(this._baseSearch,this.getTimeRange().clone());
search._fullSearchWithIntentions=this._fullSearchWithIntentions;
search._intentions=$.extend(true,[],this._intentions);
if(this.job)search.job=this.job;
search._savedSearchName=this._savedSearchName;
search._viewStateId=this._viewStateId;
search._remoteServerList=this._remoteServerList;
search._selectedEventCount=this._selectedEventCount;
search._selectedEventAvailableCount=this._selectedEventAvailableCount;
search._postProcess=this._postProcess;
search._statusBuckets=this._statusBuckets;
search._requiredFieldList=this._requiredFieldList;
search._maxTime=this._maxTime;
search._maxEvents=this._maxEvents;
search._maxCount=this._maxCount;
search._acl=this._acl;
search.decompositionFailed=this.decompositionFailed;
return search;},
equalToSearch:function(search){
if(this.job&&search.job&&this.job.getSearchId()!=search.job.getSearchId())return false;
if(this.isJobDispatched()!=search.isJobDispatched())return false;
if(this.toString()!=search.toString())return false;
if(!Splunk.util.objectSimilarity(this._intentions,search._intentions))return false;
if(!Splunk.util.objectSimilarity(this._remoteServerList,search._remoteServerList))return false;
if(!search.getTimeRange().equalToRange(this.getTimeRange()))return false;
if(search._selectedEventCount!=this._selectedEventCount)return false;
if(search._selectedEventAvailableCount!=this._selectedEventAvailableCount)return false;
if(search._postProcess!=this._postProcess)return false;
return true;},
abandonJob:function(){
this.job=null;
if(this._fullSearchWithIntentions&&this._intentions.length==0){
this._baseSearch=this._fullSearchWithIntentions;}
this._selectedEventCount=-1;
this._selectedEventAvailableCount=-1;},
isJobDispatched:function(){
return!!(this.job&&this.job.getSearchId());},
toString:function(){
return this._fullSearchWithIntentions||this._baseSearch;},
getSearch:function(){
this.logger.warn("Splunk.Search.getSearch is deprecated. use Splunk.Search.toString");
return this.toString();},
getBaseSearch:function(){
return this._baseSearch;},
setBaseSearch:function(search){
if(this.isJobDispatched()){
this.logger.error("Assertion failed - setSearchStr should not be called once a Search is running. If your intention is to abandon the running job, you can call this.abandonJob() although think hard about whether you need to cancel the running one.");}
if(this._baseSearch!=search){
this._savedSearchName=false;}
this._baseSearch=search;
this._fullSearchWithIntentions=null;},
getSavedSearchName:function(){
return this._savedSearchName;},
setSavedSearchName:function(name){
this._savedSearchName=name;},
getViewStateId:function(){
return this._viewStateId;},
setViewStateId:function(id){
this._viewStateId=id;},
getPostProcess:function(){
return this._postProcess;},
setPostProcess:function(search){
this._postProcess=search;},
getMaxCount:function(){
return this._maxCount;},
setMaxCount:function(count){
if(!Splunk.util.isInt(count)){
this.messenger.send("error","splunk.search.job",sprintf(_("specified maxCount (%count)s is not an integer"),{count:count}));}
this._maxCount=count;},
getMaxEvents:function(){
return this._maxEvents;},
setMaxEvents:function(count){
if(!Splunk.util.isInt(count)){
this.messenger.send("error","splunk.search.job",sprintf(_("specified maxEvents (%count)s is not an integer"),{count:count}));}
this._maxEvents=count;},
getDistributedServerList:function(){
return this._remoteServerList;},
setDistributedServerList:function(serverList){
this._remoteServerList=serverList;},
getMinimumStatusBuckets:function(){return this._statusBuckets;},
setMinimumStatusBuckets:function(statusBuckets){
if(statusBuckets>this._statusBuckets){
this._statusBuckets=statusBuckets;}},
getMaxTime:function(){return this._maxTime;},
setMaxTime:function(maxTime){this._maxTime=maxTime;},
getRequiredFieldList:function(){return this._requiredFieldList;},
setRequiredFields:function(requiredFieldList){
requiredFieldList=$.extend([],requiredFieldList);
if(this._requiredFieldList.indexOf("*")!=-1){
return;}
else if(requiredFieldList.indexOf("*")!=-1){
this._requiredFieldList=["*"];
return;}
else{
for(var i=0,len=this._requiredFieldList.length;i<len;i++){
var incomingIndex=requiredFieldList.indexOf(this._requiredFieldList[i]);
if(incomingIndex!=-1){
requiredFieldList.splice(incomingIndex,1);}}
this._requiredFieldList=this._requiredFieldList.concat(requiredFieldList);}},
getUrl:function(asset,optionalArgs){
var args=optionalArgs||{};
var sid=this.job.getSearchId();
if(!sid){
sid='NO_SID';
this.logger.error('getUrl called on search job without an SID');}
var base=Splunk.util.make_url('api/search/jobs',sid);
if(!asset)return base;
asset=asset.toLowerCase();
switch(asset){
case'results':
case'control':
return base+'/'+asset
case'summary':
case'events':
case'timeline':
var range=this.getTimeRange();
if(range.isSubRangeOfJob()){
args['earliest_time']=range.getEarliestTimeTerms();
args['latest_time']=range.getLatestTimeTerms();
args["output_time_format"]=Splunk.util.getConfigValue('SEARCH_RESULTS_TIME_FORMAT');}
var url=base+'/'+asset+'?'+Splunk.util.propToQueryString(args);
return url;
default:
break;}
this.logger.error('Requested unknown search job asset:',asset);
return false;},
getTimeRange:function(){
return this._range;},
clearTimeRange:function(){
this._range=new Splunk.TimeRange();
this.setSavedSearchName(false);
return this;},
setTimeRange:function(range){
if(!this._range.equalToRange(range)){
this.setSavedSearchName(false);}
this._range=range;
return this;},
getEventCount:function(){
if(this._selectedEventCount==-1){
return this.job.getEventCount();}
return this._selectedEventCount;},
getEventAvailableCount:function(){
if(this._selectedEventAvailableCount==-1){
return this.job.getEventAvailableCount();}
return this._selectedEventAvailableCount;},
setSelectedEventCount:function(count){
this._selectedEventCount=count;},
setSelectedEventAvailableCount:function(count){
this._selectedEventAvailableCount=count;},
dispatchJob:function(onSuccess,onFailure,group){
var range=this.getTimeRange();
if(range.isSubRangeOfJob()){
range.setAsSubRangeOfJob(false);
this.abandonJob();}
if(this.isJobDispatched()){
this.logger.error("Assertion Failed -- call to redispatch a search that already had a searchId="+this.job.getSearchId());
return false;}
this.absorbIntentions(function(searchStr){
this._startTransformedSearch(searchStr,onSuccess,onFailure,group);}.bind(this),
onFailure);
return true;},
_startTransformedSearch:function(searchStr,onSuccess,onFailure,group){
var autoCancelInterval=Splunk.util.getAutoCancelInterval();
if(autoCancelInterval&&Splunk.Globals['Jobber']&&(autoCancelInterval<Splunk.Globals['Jobber'].KEEP_ALIVE_INTERVAL/1000)){
this.logger.error("autoCancelInterval (",autoCancelInterval,") is set to less than the Jobber's KEEP_ALIVE_INTERVAL (",(Splunk.Globals['Jobber'].KEEP_ALIVE_INTERVAL/1000),") which can result in jobs getting cancelled if they go a long time in between progress events.");}
var args={'search':searchStr,'status_buckets':this.getMinimumStatusBuckets(),'namespace':Splunk.util.getCurrentApp(),'ui_dispatch_app':Splunk.util.getCurrentApp(),'ui_dispatch_view':Splunk.util.getCurrentDisplayView(),'auto_cancel':autoCancelInterval};
if(this.getSavedSearchName()){
args["label"]=this.getSavedSearchName();}
if(this.getMaxTime()>0){
args["max_time"]=this.getMaxTime();}
if(this.getMaxCount()){
args["max_count"]=this.getMaxCount();}
if(this.getMaxEvents()){
args["auto_finalize_ec"]=this.getMaxEvents();}
var requiredFieldList=this.getRequiredFieldList();
if(requiredFieldList.length>0){
args["required_field_list"]=requiredFieldList.join(",");}
if(this.getDistributedServerList().length>0){
args["remote_server_list"]=this.getDistributedServerList().join(",");}
var range=this.getTimeRange()
args["earliest_time"]=range.getEarliestTimeTerms();
args["latest_time"]=range.getLatestTimeTerms();
if(range.getAbsoluteEarliestTime()||range.getAbsoluteLatestTime()){
args["timeFormat"]=Splunk.util.getConfigValue('DISPATCH_TIME_FORMAT');}
this.logger.info('_dispatchNewSearch - search='+searchStr+' earliest_time='+args["earliest_time"]+" latest_time="+args["latest_time"]);
var clonedSearch=this;
if(Splunk._testHarnessMode){
clonedSearch.job.setSearchId("TEST_HARNESS_MODE_ID_"+(20000*Math.random()));
onSuccess(clonedSearch);
return;}else{
var statusMonitor=Splunk.Globals['PageStatus'].register('Search - POST to dispatch new job.');
$.post(
Splunk.Globals['Jobber'].JOB_MGMT_ENDPOINT,
args,
function(data){
if(data['success']&&data['data']){
if(!this.job){
this.job=new Splunk.Job(this.toString());}
this.job.setSearchId(data['data']);
this.job.setAsAutoCancellable(true);
onSuccess(this);
if(!this.job.getCreateTime()){
this.job.setCreateTime(new Date().getTime()/1000);}
$(document).trigger('jobDispatched',[this.job,group]);
statusMonitor.loadComplete();}else if(!data['success']){
this.logger.error("Assertion Failed: Splunkd returned an unsuccessful response when trying to dispatch a search:",data);
if(data.hasOwnProperty("messages")){
var messages=data["messages"];
for(var i=0;i<messages.length;i++){
var msg=messages[i];
var className=(msg["type"]=="FATAL")?"splunk.services":"splunk.search.job";
this.messenger.send(msg["type"].toLowerCase(),className,msg["message"]);}}else{
this.messenger.send("fatal","splunk.search.job",
_("Splunkd returned an unsuccessful response when trying to dispatch a search. Try again or contact an admin."));}
if(onFailure)onFailure(this);}else{
this.messenger.send("fatal","splunk.search.job",_("Could not get a search id for the search."));
this.logger.error("Received a successful response trying to dispatch a job but did not receive an sid:",data);
if(onFailure)onFailure(this);}
if(data.messages&&data.messages.length>0){
for(var k=0,j=data.messages.length;k<j;k+=1){
var type=data.messages[k].type;
this.logger[((type=="FATAL")?"error":type.toLowerCase())](data.messages[k].text);}}}.bind(clonedSearch),'json');}},
hasIntentions:function(){
return this._intentions.length>0;},
addIntention:function(intentionDict){
if(!intentionDict){
throw("Assertion Failed - addIntention called for null intention");}
this._fullSearchWithIntentions=null;
this._intentions.push(intentionDict);
this.setSavedSearchName(false);},
setIntentions:function(intentionsList){
if(this._intentions.length){
this.logger.error("May be an error state. Somebody is replacing intentions. If you are a developer and you dont think this is an error state anymore, change it");}
this._intentions=intentionsList;
this._fullSearchWithIntentions=null;
this.setSavedSearchName(false);},
clearIntentions:function(){
if(this.hasIntentions()){
this.setSavedSearchName(false);}
this._intentions=[];},
absorbIntentions:function(onSuccess,onFailure){
if(!this._baseSearch)throw(this._baseSearch+" is not a search");
var search;
if(this._intentions.length>0){
var clearIntention=this.getIntentionReference("clear");
if(clearIntention){
this.logger.warn("Blowing away all existing intentions and previous search string due to 'clear'! Using arg value as replacement intention.");
this._intentions=[clearIntention["arg"]];
this.setBaseSearch("*");}
search=Splunk.util.addLeadingSearchCommand(this._baseSearch);
if(this.getPostProcess()&&this.getIntentionReference("drilldown")){
search+=" | "+this.getPostProcess();
this.setPostProcess(false);}
var plotIntention=this.getIntentionReference("plot");
if(plotIntention){
plotIntention["arg"]["defer"]="False";
if(plotIntention["arg"].hasOwnProperty("splitType")){
delete plotIntention["arg"]["splitType"];}
if(!plotIntention["arg"].hasOwnProperty("mode")){
this.popIntention("plot");}}
if(Splunk._testHarnessMode){
onSuccess("search 'Search is in _testHarnessMode and all intentions parsing is disabled'");}else{
var statusMonitor=Splunk.Globals['PageStatus'].register('Search - POST to intention parser');
$.post(
Splunk.util.make_url('/parser/parse'),
{"q":search,"intentions":JSON.stringify(this._intentions),"namespace":Splunk.util.getCurrentApp()},
function(responseText){
this.parserCallback(responseText,onSuccess,onFailure);
statusMonitor.loadComplete();}.bind(this));}}
else if(this._fullSearchWithIntentions){
search=Splunk.util.addLeadingSearchCommand(this._fullSearchWithIntentions);
onSuccess(search);}else{
search=Splunk.util.addLeadingSearchCommand(this._baseSearch);
onSuccess(search);}},
getIntentionIndex:function(intentionName,secondArgKey){
for(var i=0,l=this._intentions.length;i<l;i++){
if(this._intentions[i].name==intentionName){
if(!secondArgKey){
return i;}else{
var isMatchingKeyValueIntention=this._intentions[i]["arg"].hasOwnProperty(secondArgKey);
var isMatchingSearchTermIntention=(this._intentions[i]["arg"]==secondArgKey);
if(isMatchingKeyValueIntention||isMatchingSearchTermIntention){
return i}}}}
return-1;},
popIntention:function(intentionName,secondArgKey){
var index=this.getIntentionIndex(intentionName,secondArgKey);
if(index==-1)return false;
return this._intentions.splice(index,1)[0];},
getIntentionReference:function(intentionName,secondArgKey){
var index=this.getIntentionIndex(intentionName,secondArgKey);
if(index==-1)return false;
return this._intentions[index];},
parserCallback:function(responseJSON,onSuccess,onFailure){
if(responseJSON.hasOwnProperty("search")){
this._fullSearchWithIntentions=responseJSON['search'];
this.job=new Splunk.Job(this._fullSearchWithIntentions);
this._intentions=[];
if(onSuccess)onSuccess(this._fullSearchWithIntentions);
else this.logger.debug("No success handler for dispatching "+this._fullSearchWithIntentions);}
else{
this.logger.warn(_("parser response was valid JSON but contained no search."));
if(!responseJSON.hasOwnProperty("messages")){
var msg=_("parser response was valid JSON but contained neither search nor messages");
this.messenger.send("error","splunk.search.job",msg);}else{
if(onFailure)onFailure(this.toString());
else this.logger.error('parserCallback died but no onFailure');}}
if(responseJSON.hasOwnProperty("messages")){
this.messenger.send("error","splunk.search.job",responseJSON['messages'].join('\n'));}},
sendDocumentToLocation:function(doc,loc){
doc.location=loc;},
sendToView:function(viewName,additionalArgs,dispatchBeforeRedirect,openInPopup,options,appName){
var args=additionalArgs||{};
options=options||{};
appName=appName||Splunk.util.getCurrentApp();
var urlPath=[Splunk.util.make_url("app",appName,viewName)];
if(dispatchBeforeRedirect&&this.isJobDispatched()){
this.logger.warn("sendToView was called on a dispatched search, but the 'dispatchBeforeRedirect' flag was passed. This flag will be ignored. This may be a sign of a deeper problem.");}
var windowName='_blank';
var windowFeatures=(options.hasOwnProperty("windowFeatures")&&options.windowFeatures)?options.windowFeatures:"resizable=yes,status=no,scrollbars=yes,toolbar=no";
if(options.hasOwnProperty("autosize")&&options.autosize==true){
var dimensions=Splunk.util.getWindowDimensions();
windowFeatures=windowFeatures+",height="+Math.round(dimensions.height*0.90,0)+",width="+Math.round(dimensions.width*0.90,0);}
var searchInstance=this;
var goToFinalURL=function(url){
if(openInPopup){
try{
searchInstance.sendDocumentToLocation(this._popupWindow.document,url);}catch(e){
this.logger.error(e);
this.logger.error("error setting the popups document.location directly. Switching to plan B which is to do another call to window.open with the same window name.");
try{
window.open(url,windowName,windowFeatures);}catch(e2){
this.logger.error(e2);
this.logger.error("popup opening has failed.");
this.messenger.send('error','splunk.search',_("Splunk encountered an error when it tried to launch the report builder popup (or the popup was blocked by an uncommonly aggressive popup blocker)."));}}}else{
searchInstance.sendDocumentToLocation(document,url);}}.bind(this);
if(openInPopup){
try{
this._popupWindow=window.open(urlPath,windowName,windowFeatures);}catch(e){
this.logger.error(e);
this.logger.error("failed to open the initial window");}}
if(this.isJobDispatched()){
this.job.setAsAutoCancellable(false);
args["sid"]=this.job.getSearchId();
goToFinalURL(urlPath+"?"+Splunk.util.propToQueryString(args));}
else if(dispatchBeforeRedirect){
var onSuccess=function(search){
args["sid"]=search.job.getSearchId();
search.job.setAsAutoCancellable(false);
goToFinalURL(urlPath+"?"+Splunk.util.propToQueryString(args));}.bind(this)
var onParseFailure=function(){
this.messenger.send("fatal","splunk.search",_("Encountered an unexpected error while parsing intentions."));}.bind(this);
this.dispatchJob(onSuccess,onParseFailure,0,[]);}
else{
var range=this.getTimeRange();
var successHandler=function(searchStr){
args["q"]=searchStr;
if(range.getEarliestTimeTerms()){
args["earliest"]=range.getEarliestTimeTerms();}
if(range.getLatestTimeTerms()){
args["latest"]=range.getLatestTimeTerms();}
goToFinalURL(urlPath+"?"+Splunk.util.propToQueryString(args));}
var failHandler=function(e){
this.messenger.send("fatal","splunk.search",_("Encountered an unexpected error while parsing intentions."));}.bind(this);
this.absorbIntentions(successHandler,failHandler);}
if(openInPopup){
try{
this._popupWindow.focus();}catch(e){}}},
canWrite:function(){
return Splunk.util.normalizeBoolean(this._acl.can_write);}});
Splunk.Search.resurrectFromSearchId=function(sid,q){
q=q||"*";
var search=new Splunk.Search(q);
search.job.setSearchId(sid);
return search;};
Splunk.Search.resurrect=function(paramsDict){
var q=paramsDict["baseSearch"]||"*";
var search=new Splunk.Search(q);
if(paramsDict.hasOwnProperty("intentions")){
search.setIntentions(paramsDict["intentions"]);}
if(paramsDict.hasOwnProperty("baseSearch")){
search.setBaseSearch(paramsDict["baseSearch"]);}
if(paramsDict.hasOwnProperty("acl")){
search._acl=paramsDict["acl"];}
if(paramsDict.hasOwnProperty("fullSearch")){
search._fullSearchWithIntentions=paramsDict["fullSearch"];}
if(paramsDict.hasOwnProperty("vsid")){
search.setViewStateId(paramsDict["vsid"]);}
if(paramsDict.hasOwnProperty("remote_server_list")){
search.setDistributedServerList(paramsDict["remote_server_list"]);}
if(paramsDict.hasOwnProperty("decompositionFailed")&&Splunk.util.normalizeBoolean(paramsDict["decompositionFailed"])){
if(search.hasIntentions()){
var logger=Splunk.Logger.getLogger("search.js");
logger.error("splunkWeb tells us the decomposition failed, but we received intentions somehow.");}
search.decompositionFailed=true;}
search.job.setAsAutoCancellable(true);
if(paramsDict.hasOwnProperty("job")){
jobDict=paramsDict["job"];
search.job.updateByTicketValues(jobDict)
if(jobDict.hasOwnProperty("delegate")){
search.job.delegate=jobDict["delegate"];
search.job.setAsAutoCancellable(false);}}
if(paramsDict.hasOwnProperty("next_scheduled_time")){
search.next_scheduled_time=paramsDict["next_scheduled_time"];}
var timeRangeArgs=["earliest","latest","earliestTZOffset","latestTZOffset"];
var timeRangeValues=[];
for(var i=0;i<timeRangeArgs.length;i++){
timeRangeValues[i]=(paramsDict.hasOwnProperty(timeRangeArgs[i]))?paramsDict[timeRangeArgs[i]]:null;}
search.setTimeRange(new Splunk.TimeRange(timeRangeValues[0],timeRangeValues[1],timeRangeValues[2],timeRangeValues[3]));
if(paramsDict.hasOwnProperty("s")){
search.setSavedSearchName(paramsDict["s"]);}else if(paramsDict.hasOwnProperty("job")&&paramsDict["job"].hasOwnProperty("label")&&paramsDict["job"]["label"]){
search.setSavedSearchName(paramsDict["job"]["label"]);}
for(var j=0,l=search._intentions.length;j<l;j++){
if(search._intentions[j]["name"]=="plot"){
var plotIntention=search._intentions[j];
if(plotIntention["arg"].hasOwnProperty("splitby")){
plotIntention["arg"]["splitType"]="single";}
else if(
(plotIntention["arg"].hasOwnProperty("fields"))&&
(plotIntention["arg"]["fields"].length>1)){
plotIntention["arg"]["splitType"]="multiple";}
else{
plotIntention["arg"]["splitType"]="none";}}}
if(search.isJobDispatched()){
var group=paramsDict["group"]||null;
$(document).trigger('jobResurrected',[search.job,group]);}
return search;};i18n_register({"catalog":{"+-The running job \"%(sid)s\" was canceled remotely or expired.":"The running job \"%(sid)s\" was canceled remotely or expired.","+-Jobber can only poll on search jobs that have been dispatched (jobs with SIDs).":"Jobber can only poll on search jobs that have been dispatched (jobs with SIDs).","+-There was an error requesting the job listing. Status \"%(status)s\". Error message: \"%(statusText)s\"":"There was an error requesting the job listing. Status \"%(status)s\". Error message: \"%(statusText)s\""},"plural":function(n){return n==1?0:1;}});Splunk.Jobber=$.klass({
MIN_POLLER_INTERVAL:250,
LONG_RUNNING_POLLER_INTERVAL:1500,
MAX_POLLER_INTERVAL:30000,
POLLER_CLAMP_TIME:1000,
PENALIZE_POLLER_INCREMENT:500,
PENALIZE_POLLER_MULTIPLIER:1.25,
KEEP_ALIVE_INTERVAL:60000,
JOB_MGMT_ENDPOINT:Splunk.util.make_url('api/search/jobs'),
BATCH_EDIT_ENDPOINT:Splunk.util.make_url('api/search/jobs/control'),
UI_INACTIVITY_TIMEOUT_TTL_HOURS:24,
initialize:function(){
this._jobManifest={};
this._jobManifestHash='';
this._pollTimer=null;
this._keepAlivePoller=null;
this._pollCount=0;
this._latencyHistory=[];
this._getStatusStartTime=0;
this._timedOutPollCount=0;
this._lastActiveStartTime=null;
this._stopPolling=false;
this._isGettingStatus=false;
this.ticketsLoaded=false;
this.refreshInterval=null;
this.targetInterval=this.LONG_RUNNING_POLLER_INTERVAL;
this.logger=Splunk.Logger.getLogger("jobber.js");
this.messenger=Splunk.Messenger.System.getInstance();
$(document).bind('jobDispatched.Jobber',this._receiveJob.bind(this));
$(document).bind('jobResurrected.Jobber',this._receiveJob.bind(this));
$(document).bind('jobStatusChanged.Jobber',this._onJobStatusChange.bind(this));
this._clearedForPolling=false;
$(document).bind('SessionStart.Jobber',function(){
if(this.isClearedForPolling())this.start();}.bind(this));
$(document).bind('SessionTimeout.Jobber',function(){
this.logger.info('Stopping Jobber polling...');
this.stop();
this.listJobs(function(job){
return(job.canBeAutoCancelled());}).setTTL(function(){},this.UI_INACTIVITY_TIMEOUT_TTL_HOURS*3600);}.bind(this));},
destroy:function(){
$(document).unbind('.Jobber');},
_receiveJob:function(event,job){
var sid=job.getSID();
if(!sid)
throw _("Jobber can only poll on search jobs that have been dispatched (jobs with SIDs).");
this.addJob(job);
if(!this.isClearedForPolling()){
this.logger.info(_(sprintf("Received job with an sid of %(sid)s, but can't poll yet because Jobber isn't cleared for polling.",{sid:job.getSearchId()})));
return;}
if(job.isDone()){
$(document).trigger('jobProgress',[job]);
$(document).trigger('jobDone',[job]);
return;}
this._lastActiveStartTime=new Date();
this.refresh();},
_onJobStatusChange:function(event,sid,status){
this.logger.info('Splunk.Jobber: received sid status update:',sid,',',status);
if(this.hasJob(sid)){
if(status=='unpause'){
this._lastActiveStartTime=new Date();}
else if(status=='cancel'){
if(!this.removeJob(sid)){
this.logger.warn('Splunk.Jobber: when trying to cancel, jobber could not find the job',sid);}}
this.refresh();}},
hasJob:function(sid){
return this._jobManifest.hasOwnProperty(sid);},
getJob:function(sid){
if(this.hasJob(sid))return this._jobManifest[sid];
return null;},
addJob:function(job){
var sid=job.getSID();
if(!sid){
this.logger.warn('Tried to add a job to Jobber without an sid, which is impossible.');
return false;}
this._jobManifest[sid]=job;
return true;},
buildJob:function(sid,primitive){
var job=this.getJob(sid);
if(!job){
job=new Splunk.Job('*');
job.setSearchId(sid);
this.addJob(job);}
if(primitive)job.updateByTicketValues(primitive);
return job;},
removeJob:function(sid){
if(this.hasJob(sid)){
this._jobManifest[sid]=null;
delete this._jobManifest[sid];
return true;}
return false;},
listJobs:function(callback){
callback=callback||function(job){if(job)return true;};
var jobs=new Splunk.JobArray();
for(var sid in this._jobManifest){
if(!this._jobManifest.hasOwnProperty(sid))continue;
if(callback(this._jobManifest[sid]))jobs.push(this._jobManifest[sid]);}
return jobs;},
clearForPolling:function(){
if(this.isClearedForPolling())return;
this.setClearedForPolling(true);
for(var sid in this._jobManifest){
this._receiveJob(null,this._jobManifest[sid]);}},
isClearedForPolling:function(){
return this._clearedForPolling;},
setClearedForPolling:function(flag){
this._clearedForPolling=!!(flag);},
refresh:function(){
this._pollCount=0;
this.targetInterval=this.LONG_RUNNING_POLLER_INTERVAL;
this._tuneRefreshInterval();
this.start();},
start:function(){
this.clearForPolling();
this._getStatus(null);
this._startKeepAlive();},
stop:function(){
this._stopPollTimer();
this._stopPolling=true;
this._stopKeepAlive();},
_stopPollTimer:function(){
if(!this._pollTimer)return;
clearTimeout(this._pollTimer);
this._pollTimer=null;},
penalizePoller:function(){
if(!this._lastActiveStartTime||new Date()-this._lastActiveStartTime<this.POLLER_CLAMP_TIME){
this.logger.info('not eligible for penalization');
return;}
var from=this.targetInterval;
this.targetInterval=Math.round(Math.min(this.targetInterval*this.PENALIZE_POLLER_MULTIPLIER+this.PENALIZE_POLLER_INCREMENT,this.MAX_POLLER_INTERVAL),10);
this.logger.info('penalize from:',from,'to:',this.targetInterval);},
_tuneRefreshInterval:function(forcedInterval){
if(forcedInterval){
this.refreshInterval=forcedInterval;
return;}
this.targetInterval=Math.max(this.LONG_RUNNING_POLLER_INTERVAL,this.targetInterval-this.PENALIZE_POLLER_INCREMENT);
var elapsedTime=0;
if(!this._lastActiveStartTime){
this._lastActiveStartTime=new Date();}else{
elapsedTime=new Date()-this._lastActiveStartTime;}
var desiredInterval=Splunk.util.getRetryInterval(
elapsedTime,
this.MIN_POLLER_INTERVAL,
this.targetInterval,
this.POLLER_CLAMP_TIME);
this.refreshInterval=Math.round(desiredInterval);
this.logger.info('calculated refresh interval including penalization:',this.refreshInterval);
var historySize=this._latencyHistory.length;
var avgLatency=0;
for(var i=0;i<historySize;i++){
avgLatency+=this._latencyHistory[i];}
avgLatency/=this._latencyHistory.length;
if(this._pollCount%10==0){
this.logger.info('Jobber.getStatus - average latency=',avgLatency,'ms');}},
_managePoller:function(){
this._pollCount++;
this._tuneRefreshInterval();
if(!this._stopPolling)this._pollTimer=setTimeout(this._getStatus.bind(this),this.refreshInterval);},
_getStatus:function(evt,forceRefresh){
if(this._isGettingStatus)
return;
this._stopPolling=false;
this._stopPollTimer();
var getargs={}
var beforeSend=null;
var sids=jQuery.map(
this.listJobs(function(job){
return(!job.isCanceled()&&(job.isRunning()||job.isPaused()));}),
function(job){return job.getSearchId();});
if(sids.length>0){
this.logger.info('has running job; repolling at ',this.refreshInterval);
getargs['s']=sids;
beforeSend=function(xhr){
try{
xhr.setRequestHeader('If-None-Match',this._jobManifestHash);}catch(e){}}.bind(this);}else{
this.logger.debug("Active jobs done, slowing down the poller.");
this._stopPolling=true;
return;}
this._isGettingStatus=true;
this._getStatusStartTime=new Date();
var url=this.JOB_MGMT_ENDPOINT+((Splunk.util.getConfigValue('NOCACHE',false))?"?cachebuster="+this._getStatusStartTime.getTime():"");
$.ajax({
type:'GET',
dataType:'html',
url:url,
data:getargs,
beforeSend:beforeSend,
complete:this._getStatusCompleteCallback.bind(this),
error:this._getStatusErrorCallback.bind(this)});},
_getStatusErrorCallback:function(xhr,status,error){
this._isGettingStatus=false;
this.logger.error('_getStatusErrorCallback - status='+status+' error='+error);
if(xhr.status>=400){
this.messenger.send('error','splunk.search.job.listing',sprintf(_('There was an error requesting the job listing. Status "%(status)s". Error message: "%(statusText)s"'),xhr))}},
_getStatusCompleteCallback:function(xhr,status){
this._isGettingStatus=false;
this._latencyHistory.push(new Date()-this._getStatusStartTime);
if(this._latencyHistory.length>20)this._latencyHistory.shift();
this._jobManifestHash=xhr.getResponseHeader('Etag');
if(xhr.status==304){
this.keepRealTimeSearchesProgressing();
this._managePoller();
return;}
try{
var responseJSON=JSON.parse(xhr.responseText);}catch(e){
this.logger.error("Could not parse jobber xhr.responseText within _getStatusCompleteCallback function. Error:",e);
return;}
var data=responseJSON.data;
if(!data||!(data instanceof Array)){
this.logger.warn('Upon polling, Jobber received an invalid response from the appserver.');
if(responseJSON.messages&&responseJSON.messages.length>0){
for(var i=0,j=responseJSON.messages.length;i<j;i+=1){
this.messenger.send(responseJSON.messages[i].type.toLowerCase(),'splunk.search.job',responseJSON.messages[i].message);}}
return;}
var sid,isUpdated,isPaused,isFinalized,isDone,localJob,currentTicket,deltas;
for(var k=0,l=data.length;k<l;k++){
currentTicket=data[k];
sid=currentTicket['sid'];
if(currentTicket.hasOwnProperty('__notfound__')){
this.logger.debug(sprintf("Appserver doesn't have a record of the job %s, removing it from the ticketManifest.",sid));
if(this.hasJob(sid)){
if(!this.getJob(sid).isCanceled()){
this.messenger.send('info','splunk.search.job',sprintf(_("The running job \"%(sid)s\" was canceled remotely or expired."),{'sid':sid}));
$(document).trigger('jobStatusChanged',[sid,'cancel']);
$(document).trigger('jobCanceled',[sid]);}
this.removeJob(sid);}
continue;}
if(this.hasJob(sid)){
localJob=this.getJob(sid);
isPaused=localJob.isPaused();
isFinalized=localJob.isFinalized();
isDone=localJob.isDone();
deltas={};
deltas["scanCount"]=currentTicket['scanCount']-localJob.getScanCount();
deltas["eventCount"]=currentTicket['eventCount']-localJob.getEventCount();
deltas["resultCount"]=currentTicket['resultCount']-localJob.getResultCount();
isUpdated=(
(deltas['scanCount']>0)||
(deltas['eventCount']!=0)||
(deltas['resultCount']!=0));
for(var msgSeverity in currentTicket['messages']){
if(currentTicket['messages'].hasOwnProperty(msgSeverity)){
for(var n=0,M=currentTicket['messages'][msgSeverity].length;n<M;n++){
this.messenger.send(msgSeverity,'splunk.search.job',currentTicket['messages'][msgSeverity][n]);}}}
this.buildJob(sid,currentTicket);
if(!isDone){
if(currentTicket['isPaused']&&!isPaused){
this.logger.info('Jobber.getStatus - PAUSED sid=',sid,'eventCount=',(currentTicket['eventCount']));
$(document).trigger('jobPaused',[localJob]);}
if(currentTicket['isFinalized']&&!isFinalized){
this.logger.info('Jobber.getStatus - FINALIZED sid=',sid,'eventCount=',(currentTicket['eventCount']));
$(document).trigger('jobFinalized',[localJob]);}
if(currentTicket['isDone']){
this.logger.info('Jobber.getStatus - DONE sid='+sid+' eventCount='+(currentTicket['eventCount']));
$(document).trigger('jobProgress',[localJob]);
$(document).trigger('jobDone',[localJob]);
localJob.setLastProgressTime();}else if(isUpdated){
this.logger.info('Jobber.getStatus - PROGRESS sid='+sid+' eventCount='+(currentTicket['eventCount']));
$(document).trigger('jobProgress',[localJob]);
localJob.setLastProgressTime();}}}else{
this.buildJob(sid,currentTicket);}}
this.keepRealTimeSearchesProgressing();
this._managePoller();
$(document).trigger('jobberTicketsRefreshed');
if(!this.ticketsLoaded)this.ticketsLoaded=true;},
keepRealTimeSearchesProgressing:function(){
var interval=2*this.LONG_RUNNING_POLLER_INTERVAL;
var jobs=this.listJobs(function(job){
return(
job.isRunning()&&
job.isRealTimeSearch()&&
job.getTimeSinceLastProgress()>interval);});
for(var i=0,len=jobs.length;i<len;i++){
var job=jobs[i];
$(document).trigger('jobProgress',[job]);
job.setLastProgressTime();}},
_keepAlive:function(){
var sids=jQuery.map(this.listJobs(),function(job){return job.getSID();});
if(sids.length>0){
this.logger.debug('Touching the following sids:',sids);
$.post(this.BATCH_EDIT_ENDPOINT,{action:'touch',sid:sids},this._keepAliveCallback.bind(this),'json');}
else this._stopKeepAlive();},
_keepAliveCallback:function(response){
if(response!==undefined&&response.data.length>0){
for(var i=0,j=response.data.length;i<j;i++){
if(!response.data[i]['response']){
this.removeJob(response.data[i]['sid']);}}}},
_startKeepAlive:function(){
if(this._keepAlivePoller)return;
this._keepAlivePoller=setInterval(this._keepAlive.bind(this),this.KEEP_ALIVE_INTERVAL)},
_stopKeepAlive:function(){
if(this._keepAlivePoller){
clearInterval(this._keepAlivePoller);
this._keepAlivePoller=null;}}});;
Splunk.MenuBuilder=$.klass({
_containerDiv:null,
_menuOpen:null,
_menuActivator:null,
_menuTimer:null,
_menuActivationTime:0,
_timeoutDelay:null,
_menu:null,
MAX_ITEM_LENGTH:50,
FADE_DURATION:100,
initialize:function(options){
this.logger=Splunk.Logger.getLogger("menu_builder.js");
this._menuOpen=false;
this._timeoutDelay=5000;
this._menu=false;
this._menuOpen=false;
this._options={
containerDiv:false,
menuDict:false,
activator:false,
menuOpenClass:false,
menuClasses:'',
autoInit:true,
showOnInit:false,
fadeEffects:false,
filter:false};
if(options)$.extend(this._options,options);
if(this._options['containerDiv']){
this.logger.warn('Splunk.MenuBuilder: containerDiv property depricated. property will be ignored.');}
if(this._options.autoInit)this.menuInit();},
menuInit:function(){
this._menu=this.buildMenu(this._options['menuDict'],1);
var extraClasses;
if(this._options['menuClasses']){
extraClasses=this._options['menuClasses'];}else{
extraClasses="splMenu-primary";}
this._menu.addClass('splMenu '+extraClasses);
$('body').append(this._menu);
var moduleInstance=this;
if(this._options['activator']){
this._menuActivator=$(this._options['activator']);
this._menuActivator.click(this._onActivatorClick.bind(this));}else{
this.logger.error('Splunk.MenuBuilder: No activator specified');}
this._menu.hover(function(){
clearTimeout(moduleInstance._menuTimer);},
function(){
clearTimeout(moduleInstance._menuTimer);
moduleInstance._menuTimer=setTimeout(function(){
moduleInstance.hideMenu();},moduleInstance._timeoutDelay);});
$(this._menu).bind('click',function(evt){
this.onMenuClick(evt);}.bind(this));
$('.htmlBlock',this._menu).click(function(evt){
evt.stopPropagation();});
$('li.hasSubMenu',this._menu).hover(function(){
clearTimeout(moduleInstance._menuTimer);
moduleInstance.menuOver(this);},function(){
clearTimeout(moduleInstance._menuTimer);
moduleInstance._menuTimer=setTimeout(function(){moduleInstance.menuOut(this)}.bind(this),400);});
if(this._options.showOnInit){
setTimeout(this.showMenu.bind(this),0);}
var curActivator;
$(this._menuActivator).focus(function(evt){
if(!this._menuOpen){
this._onActivatorFocus(evt);
curActivator=$(this._menuActivator);}}.bind(this));
var curFocus;
$("a").focus(function(){
curFocus=$(this);});
$(this._menuActivator).bind('keydown',function(evt){
var kc=evt.keyCode;
if(kc==9){
this.hideMenu();
return true;}else if(kc==40){
if(this._menuOpen){
$("a:first",this._menu).focus();}
return false;}}.bind(this));
$(this._menu).bind('keydown',function(evt){
var kc=evt.keyCode,
hasSubMenu=(curFocus.parent().hasClass('hasSubMenu')),
subMenuWrapper=(hasSubMenu&&kc==37)?curFocus.parents('li.hasSubMenu').slice(1,2):curFocus.parents('li.hasSubMenu:first'),
submenu=subMenuWrapper.children('div.outerMenuWrapper:first');
if(kc==9){
curActivator.focus();
this.hideMenu();
return true;}else if(kc==38){
if(curFocus.parent().prev().is("div")){
curFocus.parent().prev().prev().children("a").focus();
return false;}else{
curFocus.parent().prev().children("a").focus();
return false;}}else if(kc==40){
if(curFocus.parent().next().is("div")){
curFocus.parent().next().next().children("a").focus();
return false;}else{
curFocus.parent().next().children("a").focus();
return false;}}else if(kc==39&&hasSubMenu){
this.menuOver(subMenuWrapper);
$("li > a:first",submenu).focus();}
else if(kc==37){
subMenuWrapper.children('a:first').focus();
submenu.hide();}}.bind(this));
$(document).click(this._onDocumentClick.bind(this));
$(window).resize(this._onWindowResize.bind(this));},
onMenuClick:function(evt){
var t=evt.target;
var isA=$(t).is('a');
if(!isA||isA&&$(t).parent('li.hasSubMenu').length){
evt.stopPropagation();
return false;}else{
$('a',t).click();}},
menuOver:function(orig){
this.hideSubMenus(orig);
$(orig).addClass('sfhover');
var submenu=$(orig).children('div.outerMenuWrapper');
var hangRight=($(orig).offset().left+$(orig).width()+submenu.width()>$(window).width())
var submenuLeft=(hangRight)?-submenu.width():$(orig).parent('div').parent('ul').width();
submenu.css({left:submenuLeft});
submenu.bgiframe();
submenu.show();},
menuOut:function(orig){
$(orig).removeClass('sfhover');
$(orig).children('div.outerMenuWrapper').hide();},
buildMenu:function(menuDict,menuLevel){
var menu=$('<div class="outerMenuWrapper splShadow"><ul></ul></div>');
$.each(menuDict,function(i,menuitem){
if(this._options.filter!==false){
if(menuitem.hasOwnProperty("showInFilter")&&(menuitem.showInFilter!=undefined)){
var l=menuitem.showInFilter.length;
var hasMatch=false;
for(var i=0;i<l;i++){
if(menuitem.showInFilter[i]==this._options.filter)hasMatch=true;}
if(!hasMatch)return true;}else{
return true;}}
var itemClasses='';
if(menuitem.hasOwnProperty('style')){
itemClasses+=menuitem.style;}
if(menuitem.hasOwnProperty('divider')){
newNode=$(['<div class="',menuitem.divider,' ',itemClasses,'"></div>'].join(''));}else if(menuitem.hasOwnProperty('menuType')&&menuitem.menuType=='htmlBlock'){
if(menuitem.hasOwnProperty('element')){
newNode=$('<li class="'+itemClasses+' htmlBlock"></li>');
if(menuitem.hasOwnProperty('action')&&menuitem.action=='clone'){
$(menuitem.element).clone(true).appendTo(newNode);}else{
$(menuitem.element).appendTo(newNode);}}}else{
var label='';
if(menuitem.hasOwnProperty('menuType')&&menuitem.menuType=='grouping'){
label=$('<p class="splunkMenuGroupingHeader">').text(menuitem.label);}else{
var href='javascript:void(0);';
var attrs='';
if(menuitem.hasOwnProperty('uri')){
href=menuitem.uri;}
label=$('<a>').attr("href",href).attr("tabindex","-1").addClass("menuItemLink").text(Splunk.util.smartTrim(menuitem.label,this.MAX_ITEM_LENGTH));
if(menuitem.hasOwnProperty('attrs')){
for(var key in menuitem.attrs){
label.attr(key,menuitem.attrs[key]);}}
if(menuitem.hasOwnProperty('popup')){
label.click(function(){
Splunk.window.open(this.href,menuitem.popup);
return false;});}
if(menuitem.hasOwnProperty('remove')){
label.click(function(){
this.removeMenu();}.bind(this));}
if(menuitem.hasOwnProperty('data')){
label.data('data',menuitem.data);}}
var newNode=$('<li class="'+itemClasses+'">').append(label);
if(menuitem.hasOwnProperty('items')){
newNode.append('<span class="splIcon splIcon-triangle-4-e dropDown">Submenu</span>').addClass('hasSubMenu').append(this.buildMenu(menuitem.items));}
if(menuitem.hasOwnProperty('callback')){
newNode.click(function(event){
this.hideMenu(menuitem.callback,event);
event.stopPropagation();
return false;}.bind(this));}}
menu.children('ul').append(newNode);}.bind(this));
menu.children('ul').children('*').wrapAll('<div class="innerMenuWrapper"></div>');
return menu;},
removeMenu:function(){
this._menuActivator.unbind('click');
this._menu.unbind('click').unbind('hover');
this._menu.remove();},
updateMenu:function(menuDict){
var originalShowOnInitVal=this._options.showOnInit;
if(this._menuOpen){
this._options.showOnInit=true;}
this.removeMenu();
this._options.menuDict=menuDict;
this.menuInit();
this._options.showOnInit=originalShowOnInitVal;},
showMenu:function(){
this._menu.bgiframe();
this._menuOpen=true;
if(this._options["menuOpenClass"]){
this._menuActivator.addClass(this._options["menuOpenClass"]);}else{
this._menuActivator.addClass('menuOpen');}
this._menu.addClass('splOpenMenu');
if(this._options['fadeEffects']){
this._menu.fadeIn(this.FADE_DURATION);}else{
this._menu.show();}
this.setPosition();},
setPosition:function(){
var t=$(this._menuActivator);
var menu=this._menu;
menu.position({
of:t,
my:'left top',
at:'left bottom',
collision:'fit none'});},
hideSubMenus:function(orig){
if(typeof orig==='undefined'){
orig=this._menu;}else{
orig=$(orig).parent();}
orig.find('.hasSubMenu').each(
function(){
if(this!=orig){
$(this).children('div.outerMenuWrapper').hide();}});},
hideMenu:function(callback,event){
this._menuOpen=false;
if(this._options["menuOpenClass"]){
this._menuActivator.removeClass(this._options["menuOpenClass"]);}else{
this._menuActivator.removeClass('menuOpen');}
this.hideSubMenus();
this._menu.removeClass('splOpenMenu');
if(!this._menuOpen&&!callback){
this._menu.fadeOut(this.FADE_DURATION);
setTimeout(function(){this._menu.hide();}.bind(this),this.FADE_DURATION);}else{
this._menu.hide();
return callback(event);}},
_onDocumentClick:function(evt){
if(!this._menuOpen||!this._menuActivator||!this._menuActivator.length||
this._menuActivator.is(evt.target)||
$.contains(this._menuActivator[0],evt.target)){
return true;}
this.hideMenu();},
_onWindowResize:function(evt){
if(this._menuOpen){
this.setPosition();}},
_onActivatorFocus:function(evt){
time=new Date();
if((time-this._menuActivationTime)<250)return true;
this._menuActivationTime=time;
if(this._menuOpen){
this.hideMenu();}else{
this.showMenu();}},
_onActivatorClick:function(evt){
evt.preventDefault();
this._menuActivator.focus();
this._onActivatorFocus();},
getMenu:function(){
return this._menu;},
getActivator:function(){
return this._menuActivator;}});i18n_register({"catalog":{"+-Required field":"Required field","+-Error occurred during submission: unable to get checkbox state":"Error occurred during submission: unable to get checkbox state","+-Move Object":"Move Object","+-Must have at least %s entry":"Must have at least %s entry","+-Failed to contact server":"Failed to contact server","+-Cannot add more than %s entry":"Cannot add more than %s entry","+-Splunk failed to fetch form values for form \"%s\"":"Splunk failed to fetch form values for form \"%s\"","+-Are you sure you want to do this?":"Are you sure you want to do this?","+-Restart failed":"Restart failed","+-Restart failed: ":"Restart failed: ","+-Please correct the errors below":"Please correct the errors below","+-Are you sure you want to restart Splunk?":"Are you sure you want to restart Splunk?","+-Synch failed: ":"Synch failed: ","+-Error occurred processing form submission: ":"Error occurred processing form submission: ","+-Syncing..":"Syncing..","+-Passwords do not match":"Passwords do not match","+-Splunk failed to fetch the element from the server: ":"Splunk failed to fetch the element from the server: ","+-Timed out waiting for restart":"Timed out waiting for restart","+-Permission denied. You are not authorized to reload the authentication system":"Permission denied. You are not authorized to reload the authentication system","+-Permission Denied - You are not authorized to restart the server":"Permission Denied - You are not authorized to restart the server","+-Authentication synched successfully.":"Authentication synched successfully.","+-Move":"Move","+-Your entry was not saved.  The following error was reported: %(error)s.":"Your entry was not saved.  The following error was reported: %(error)s.","+-Please enter all required fields":"Please enter all required fields","+-Synch failed - authentication rejected - Log in again to retry.":"Synch failed - authentication rejected - Log in again to retry.","+-Restart successful - click OK to log back into Splunk":"Restart successful - click OK to log back into Splunk","+-Saving...":"Saving..."},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Splunk.EAI");
Splunk.EAI=$.klass({
elements_loaded:false,
eaicfg:null,
endpoint_base:'',
eai_attributes:null,
admin_namespace:'',
initial_form_fields:null,
entity_name:false,
saving:0,
target_has_acl:false,
success_message:false,
redirect:true,
use_messenger_on_error:true,
confirmSubmission:false,
confirmQuestion:_("Are you sure you want to do this?"),
initialize:function(){
this.logger=Splunk.Logger.getLogger("Splunk.EAI");},
setup:function(eaicfg,endpoint_base,eai_attributes){
this.eaicfg=eaicfg;
this.endpoint_base=endpoint_base;
this.eai_attributes=eai_attributes;},
elementsLoaded:function(namespace,entity_name){
this.elements_loaded=true;
this.admin_namespace=namespace;
this.entity_name=entity_name;
var f=this.getFormValues('eaiform');
this.initial_form_fields={};
for(var elname in f){
this.initial_form_fields[elname]=true;}},
doElementOnChange:function(el,element_name){
var elcfg=this.eaicfg[element_name];
if(!elcfg['onChange'])
return;
return this._execChangeAction(el,element_name,elcfg,elcfg['onChange']);},
_execChangeAction:function(el,element_name,elcfg,actions){
var actions=actions instanceof Array?actions:[actions];
for(var i=0;i<actions.length;i++){
if(this.elements_loaded||actions[i]['_triggerOnLoad']!=false){
var action=this['action_'+actions[i]['_action']];
if(!action){
this.logger.error("Invalid manager onChange action configured: "+actions[i]['_action']);
return;}
action.call(this,el,element_name,elcfg,actions[i]);}}},
action_showonly:function(el,element_name,elcfg,occfg){
var type=elcfg['type'];
if(!occfg['_groupset'])
return;
var groupset=occfg['_groupset']instanceof Array?occfg['_groupset']:[occfg['_groupset']];
var use_regex=occfg['_matchtype']&&occfg['_matchtype']=='regex';
var selected;
if(type=='select')
selected=$(el).children('[selected]').val();
else if(type=='checkbox')
selected=$(el).prop('checked')?1:0;
else
selected=$(el).val();
var show;
if(use_regex){
var matchre=/^\/(.+)\/(\w*)$/,
key,fallback,pattern,patternre;
for(key in occfg){
if(!occfg.hasOwnProperty(key)){
continue;}
if(key=='//'){
fallback=occfg[key];}else if(key.substr(0,1)=='/'&&(pattern=matchre.exec(key))){
patternre=new RegExp(pattern[1],pattern[2]);
if(patternre.test(selected)){
show=occfg[key];
break;}}}
if(!show&&fallback){
show=fallback;}}else{
show=occfg[selected];}
if(!show){
show=['ALL'];}else{
show=show.split(/ +/);}
for(var i=0;i<groupset.length;i++){
var elname=groupset[i];
if($('[id="item-'+elname+'"][type="hidden"]').length){
continue;}
if(show[0]=='ALL'){
$('[id="item-'+elname+'"]').show();}else if(show.indexOf(elname)==-1){
$('[id="item-'+elname+'"]').hide();}}
for(i=0;i<show.length;i++){
if($('[id="item-'+show[i]+'"][type="hidden"]').length){
continue;}
$('[id="item-'+show[i]+'"]').show();}},
action_updateDisabled:function(el,element_name,elcfg,occfg){
var modifylist=occfg['value_map'];
if(!modifylist){
return;}
var current=$(el).val();
if(!current in modifylist){
this.logger.error('updateRequired onChange handler does not define a value in the value_map for '+current);
return;}
modifylist=modifylist[current].split(/ +/);
for(var i=0;i<modifylist.length;i++){
if(!modifylist[i])
continue;
var op=modifylist[i].substr(0,1);
var field=modifylist[i].substr(1);
var target_el;
switch(op){
case'+':
target_el=$('[id="item-'+field+'"]').find('input[name="'+field+'"]');
target_el.prop("disabled",true);
break;
case'-':
target_el=$('[id="item-'+field+'"]').find('input[name="'+field+'"]');
target_el.prop("disabled",false);
break;
default:
this.logger.error('Field "'+op+field+'" present in updateDisabled onChange handler that is not prefixed with + or -');
break;}}},
action_updateRequired:function(el,element_name,elcfg,occfg){
var modifylist=occfg['value_map'];
if(!modifylist){
this.eai_required=undefined;
return;}
var req={};
for(var i=0,fc=this.eai_attributes.requiredFields.length;i<fc;i++){
req[this.eai_attributes.requiredFields[i]]=1;}
var current=$(el).val();
if(!current in modifylist){
this.logger.error('updateRequired onChange handler does not define a value in the value_map for '+current);
return;}
modifylist=modifylist[current].split(/ +/);
for(var j=0;j<modifylist.length;j++){
if(!modifylist[j])
continue;
var op=modifylist[j].substr(0,1);
var field=modifylist[j].substr(1);
switch(op){
case'+':
req[field]=1;
break;
case'-':
delete req[field];
break;
default:
this.logger.error('Field "'+op+field+'" present in updateRequired onChange handler that is not prefixed with + or -');
break;}}
this.eai_required=[];
for(var req_field in req)
this.eai_required.push(req_field);},
action_triggerChangeHandler:function(el,element_name,elcfg,occfg){
target=$('[id="item-'+occfg['target']+'"]');
if(occfg['makeVisible'])
target.show();
if(target.is('input[type="hidden"]')){
doElementOnChange(target,occfg['target']);}else{
$('*[onchange]',target).trigger('onchange');
$('input[type="radio"][onclick][checked]',target).trigger('onclick');
$('input[type="checkbox"][onclick]',target).trigger('onclick');}},
_triggerElementRefresh_active_count:0,
action_triggerElementRefresh:function(el,element_name,elcfg,occfg){
var self=this;
var target=occfg['target'];
var makeVisible=occfg['makeVisible']?true:false;
var element_overlay=occfg['updateElement']?occfg['updateElement']:{};
if(!this._triggerElementRefresh_active_count++){
$('.splOverlay-white').show();
$('#loadingmessage').show();}
var xhr=$.ajax({
type:'POST',
url:Splunk.util.make_url('manager',self.admin_namespace,self.endpoint_base,'_element',target),
data:{
form_defaults:JSON.stringify(self.getFormValues('eaiform')),
eai_attributes:JSON.stringify(self.eai_attributes),
element_overlay:JSON.stringify(element_overlay),
entity_name:JSON.stringify(self.entity_name)},
dataType:'html',
success:function(htmlresult,textStatus){
if(!--self._triggerElementRefresh_active_count){
$('.splOverlay-white').hide();
$('#loadingmessage').hide();}
var newel=$('[id="item-'+target+'"]').replaceWith(htmlresult);
if($('[id="item-'+target+'"]').hasClass('accumulator'))
self.initAccumulators('item-'+target);
if(occfg['_triggerOnRefresh']){
newel=$('[id="item-'+target+'"]');
$('*[onchange]',newel).trigger('onchange');
$('input[type="radio"][onclick][checked]',newel).trigger('onclick');
$('input[type="checkbox"][onclick]',newel).trigger('onclick');}
if(occfg['_chained_action']){
self._execChangeAction(el,element_name,elcfg,occfg['_chained_action']);}
if(makeVisible)
$('[id="item-'+target+'"]').show();},
error:function(xhr,textStatus,errorThrown){
if(!--self._triggerElementRefresh_active_count){
$('.splOverlay-white').hide();
$('#loadingmessage').hide();}
Splunk.Messenger.System.getInstance().send('error','elementRefresh',sprintf(_('Splunk failed to fetch the element from the server: ')+textStatus));}});},
action_setElementValue:function(el,element_name,elcfg,occfg){
var target=occfg['target'];
var value=occfg['value'];
var makeVisible=occfg['makeVisible']?true:false;
var value_map=occfg['value_map'];
if(value_map){
var current;
switch(el.type){
case'checkbox':
current=$(el).filter(':checked').val();
break;
case'select':
current=$(el).filter(':selected').val();
break;
default:
current=$(el).val();
break;}
if(!(current in value_map)){
return;}
value=value_map[current];}
var targetcfg=this.eaicfg[target];
var target_el;
switch(targetcfg.type){
case'radio':
target_el=$('[id="item-'+target+'"]').find('input[type="radio"][value="'+value+'"]');
target_el.val(1);
break;
case'checkbox':
target_el=$('[id="item-'+target+'"]').find('input[type="checkbox"][value="'+value+'"]');
target_el.val(1);
break;
case'select':
case'multiselect':
target_el=$('[id="item-'+target+'"]').find('select[name="'+target+'"]');
target_el.val(value);
break;
case'textfield':
target_el=$('[id="item-'+target+'"]').find('input[name="'+target+'"]');
target_el.val(value);
break;
case'textarea':
target_el=$('[id="item-'+target+'"]').find('textarea[name="'+target+'"]');
target_el.val(value);
break;
case'hidden':
target_el=$('[id="item-'+target+'"]');
target_el.val(value);
break;
default:
break;}
if(makeVisible){
$('[id="item-'+target+'"]').show();}
this.doElementOnChange(target_el,target);},
action_showTreeView:function(el,element_name,elcfg,occfg){
var elTarget='input#'+element_name+'_id';
var title=_('Treeview');
var style='wizardPopup';
var data={"eai_path":occfg['eaiPath'],"selected_text":occfg['selectedText']+": ","start_node":escape($(elTarget).val())};
if(occfg['extraDataFields']){
var dataFields=occfg['extraDataFields'].split(',');
for(var i=0;i<dataFields.length;i++){
var field=$.trim(dataFields[i]);
var target_el=$('[id="item-'+field+'"]').find('input[name="'+field+'"]');
if(target_el.val().length>0){
data[field]=target_el.val();}}}
if(occfg['title']){
title=occfg['title'];}
if(occfg['style']){
style=occfg['style'];}
var popup=Splunk.Popup.TreePopup(elTarget,title,data,style);},
getFormValues:function(form_id){
var f=$('#'+form_id)[0];
if(!f){
Splunk.Messenger.System.getInstance().send('error','getFormValues',sprintf(_('Splunk failed to fetch form values for form "%s"'),form_id));
return{};}
var result={};
for(var i=0;i<f.elements.length;i++){
var el=f.elements[i];
var elname=el.name;
if(elname)
result[elname]=$(el).val()}
return result;},
initAccumulators:function(accList){
if(!accList)
return;
var accumulators=accList instanceof Array?accList:[accList];
for(var i=0;i<accumulators.length;i++){
var elname=accumulators[i].substring(5);
(function(elname){
$('#'+accumulators[i]).bind("click",function(evt){
var t=evt.target;
if($(t).is('li'))
$li=$(t);
else if($(t).is('span'))
$li=$(t).parent('li');
else if($(t).is('a.addAllLink')){
addAll(this);
doElementOnChange(t,elname);
return false;}else if($(t).is('a.removeAllLink')){
removeAll(this);
doElementOnChange(t,elname);
return false;}else
return;
if(($li.parents('.availableOptions').length&&$li.hasClass('selected'))||$li.parents('.selectedOptions').length){
removeFromSelected($li,this);}else{
addToSelected($li,this);}
doElementOnChange(t,elname);
return false;});})(elname);}
var removeFromSelected=function($li,context){
var value=$li.attr('name');
$('.selectedOptions li',context).filter(function(){return $(this).attr("name")==value;}).remove();
$('.hiddenSelectedOptions option',context).filter(function(){return $(this).attr("value")==value;}).remove();
$('.availableOptions li',context).filter(function(){return $(this).attr("name")==value;}).removeClass('selected');};
var addToSelected=function(arr,context){
var liArray=arr instanceof Array?arr:[arr];
var selectedOptions=[];
var hiddenOptions=[];
for(var i=0;i<liArray.length;i++){
$li=$(liArray[i]);
value=$li.attr('name');
fieldValue=$li.text();
label=$li.text();
selectedOptions.push('<li name="'+Splunk.util.escapeHtml(value)+'"><span class="splIcon splIcon-arrow-w"></span>'+Splunk.util.escapeHtml(fieldValue)+'</li>');
hiddenOptions.push('<option selected="selected" value="'+Splunk.util.escapeHtml(value)+'" >'+Splunk.util.escapeHtml(label)+'</option>');
$li.addClass('selected');}
$('.selectedOptions',context).append(selectedOptions.join(''));
$('.hiddenSelectedOptions',context).append(hiddenOptions.join(''));
var selItems=$('.selectedOptions li',context).get();
selItems.sort(function(a,b){
var keyA=$(a).text();
var keyB=$(b).text();
if(keyA<keyB)return-1;
if(keyA>keyB)return 1;
return 0;});
var selItemsUl=$('.selectedOptions',context);
$.each(selItems,function(i,li){
selItemsUl.append(li);});};
var addAll=function(context){
var liArray=$('.availableOptions',context).find('li').not('.selected').get();
addToSelected(liArray,context);};
var removeAll=function(context){
$('.selectedOptions',context).find('li').remove();
$('.hiddenSelectedOptions',context).find('option').remove();
$('.availableOptions li.selected',context).removeClass("selected");};},
dispatchInitAccumulators:function(){
var accumulators=[];
$('.accumulator').not('.accDisabled').each(function(){
accumulators.push($(this).attr('id'));});
if(accumulators.length>0)
this.initAccumulators(accumulators);},
adminTabify:function(tabID,selectedTab){
var $tabID=(tabID.substr(0,1)=='#')?$(tabID):$('#'+tabID);
if(selectedTab)
selectedTab=(selectedTab.substr(0,1)=='#')?selectedTab:'#'+selectedTab;
$tabID.find('li').not('.linkTab').each(function(i){
$a=$(this).children('a');
if((!selectedTab&&i==0)||(selectedTab&&selectedTab==$a.attr('href'))){
$(this).addClass('selected');
$($a.attr('href')).show();}else{
$($a.attr('href')).hide();}});
$tabID.bind('click',function(evt){
var t=evt.target;
var $elem=false;
if($(t).is('a')&&!$(t).parent('li').hasClass('linkTab')){
$elem=$(t);}else if($(t).is('li')&&!$(t).hasClass('linkTab')){
$elem=$(t).children('a');}
if($elem){
$($('li.selected').children('a').attr('href')).hide();
$('li.selected').removeClass('selected');
$elem.parent('li').addClass('selected');
$($elem.attr('href')).show();
return false;}});
$('.adminContent').addClass('hasTabs');},
setError:function(errmsg){
if(this.use_messenger_on_error){
var messenger=Splunk.Messenger.System.getInstance();
messenger.clear();
messenger.send('error','splunk.eai',errmsg);}else{
$('.EAIError').text(errmsg).show();}},
saveForm:function(formObject,successCallback,errorCallback){
if(this.saving++)
return false;
if(this.confirmSubmission){
allowSubmit=confirm(this.confirmQuestion);
if(!allowSubmit){
this.saving--;
return false;}}
var self=this;
var messenger=Splunk.Messenger.System.getInstance();
this.clearFieldErrors();
if(!this.validateRequiredFields(formObject)){
this.setError(_('Please enter all required fields'));
if(errorCallback)
errorCallback();
this.saving--;
return false;}
if(!this.validatePasswordFields(formObject)){
if(errorCallback)
errorCallback();
this.saving--;
return false;}
try{
var checkboxSuccess=$('input[type="checkbox"]',formObject).each(function(){
if($(this).hasClass('proxiable')&&$(this).prop('disabled')!=true){
self._generateProxyCheckbox(this,formObject);}});}catch(e){
alert(_('Error occurred during submission: unable to get checkbox state'));
return false;}
try{
if(!this.fieldMappingSubmitHandler())
return false;
this.handleDeletedFields();}catch(e){
alert(_('Error occurred processing form submission: ')+e);
return false;}
$('.jmFormActions button.splButton-primary span').each(function(){
$(this).data('org',$(this).text());});
$('.jmFormActions button.splButton-primary span').text(_('Saving...'));
$('input[name="__redirect"]',formObject).val(this.redirect?'1':'0')
$(formObject).ajaxSubmit({
dataType:'json',
success:function(response){
var callback=false;
switch(response.status){
case'OK':
if(response.redirect){
window.location=response.redirect;
return;}
messenger.send('info','splunk.eai',
self.success_message?self.success_message:response.msg);
callback=successCallback;
break;
case'FIELD_ERRORS':
self.setError(_('Please correct the errors below'));
for(var fieldname in response.fields){
self.setFieldError(fieldname,response.fields[fieldname]);}
callback=errorCallback;
break;
case'ERROR':
self.setError(response.msg);
callback=errorCallback;
break;
default:
self.logger.error('Unknown status response received from EAI submission endpoint: '+response.status);
break;}
$('.jmFormActions button.splButton-primary span').each(function(){
$(this).text($(this).data('org'));});
self._revertProxiedCheckboxes(formObject);
window.scroll(0,0);
if(callback)
callback();
self.saving=0;},
error:function(xhr,status,error){
self.setError(sprintf(_("Your entry was not saved.  The following error was reported: %(error)s."),{'error':error}));
$('.jmFormActions button.splButton-primary span').each(function(){
$(this).text($(this).data('org'));});
self._revertProxiedCheckboxes(formObject);
if(errorCallback)
errorCallback();
self.saving=0;}});
return false;},
setFieldError:function(element_name,error_msg){
$('[id="item-'+element_name+'"] .widgeterror').text(error_msg).show();},
clearFieldErrors:function(){
$('.widgeterror').text('').hide();},
_isFieldSet:function(fieldvalues,fieldname){
if(fieldvalues.hasOwnProperty(fieldname)&&(fieldvalues[fieldname]===undefined||fieldvalues[fieldname]===null||!Splunk.util.trim(fieldvalues[fieldname]).length||!fieldvalues[fieldname])){
return false;}
return true;},
validateRequiredFields:function(frm){
var required=this.eai_required==undefined?this.eai_attributes.requiredFields:this.eai_required;
if(!required)
return true;
var ok=true;
var values=this.getFormValues($(frm).attr('id'));
for(var i=0,fc=required.length;i<fc;i++){
var fieldname=required[i];
if(this.eaicfg[fieldname]&&this.eaicfg[fieldname]['disableClientSideRequire']!==undefined){
continue;}
if(!this._isFieldSet(values,fieldname)){
this.setFieldError(fieldname,_("Required field"));
ok=false;}}
for(var eaicfg_fieldname in this.eaicfg){
if(!this.eaicfg[eaicfg_fieldname].hasOwnProperty('requiredIfVisible'))
continue;
if(!values.hasOwnProperty(eaicfg_fieldname)||$('[id="item-'+eaicfg_fieldname+'"]').is(':hidden'))
continue;
if(!this._isFieldSet(values,eaicfg_fieldname)){
this.setFieldError(eaicfg_fieldname,_("Required field"));
ok=false;}}
return ok;},
validatePasswordFields:function(frm){
frm=frm[0];
for(var i=0;i<frm.elements.length;i++){
var el=frm.elements[i];
var elname=el.name;
if(!elname||elname.substr(0,4)=='spl-'){
continue;}
if($(el).attr('type')!='password'){
continue;}
var pair=$('[name="spl-ctrl_'+elname+'-confirm"]');
if(pair.val()===undefined)
continue;
var val1=$(el).val();
if(val1.match(/^\**$/))
continue
if(val1!=pair.val()){
this.setFieldError(elname,_("Passwords do not match"));
return false;}}
return true;},
handleDeletedFields:function(){
var container=$('#deleted');
if(container.length){
container.empty();}else{
container=$('<div id="deleted" style="display:none"></div>').appendTo('form[name="'+this.endpoint_base+'"]');}
var current=this.getFormValues('eaiform');
for(var fieldname in this.initial_form_fields){
if(current[fieldname]==undefined){
$('<input type="hidden" name="'+fieldname+'" value="" />').appendTo(container);}}},
fieldMappingSubmitHandler:function(){
$('.fieldmapping').filter('.left').each(function(){
var fieldname=$(this).val();
var fieldval=$(this).next();
if(fieldname){
var prefix=$(this).parents('.repeatable').data('repeatable').prefix;
$(fieldval).attr('name',prefix+fieldname);}else{
$(fieldval).attr('name','spl-ctrl_null');}});
return true;},
initRepeatables:function(frm){
$('.repeatable a.addnew',frm).click(this.repeatableAddNew.bind(this));
$('.repeatable a.delete',frm).click(this.repeatableDeleteField.bind(this));
$('.repeatable').each(this._checkRepeatableDefaults.bind(this));},
_checkRepeatableDefaults:function(index,el){
if(!$(el).data('repeatable').submitDeleted){
$('.fieldmapping .right',el).each(function(index,el){
delete this.initial_form_fields[$(el).attr('name')];}.bind(this));}},
repeatableAddNew:function(ev){
var target=ev.target;
var container=$(target).parent().parent();
var maxcount=$(target).parents('.repeatable').data('repeatable').maxcount;
if(maxcount>-1){
if($(container).find('.widget').length-1>=maxcount){
alert(sprintf(ungettext("Cannot add more than %s entry","Cannot add more than %s entries",maxcount),maxcount));
return false;}}
var template=container.find('.repeatabletemplate > div');
var newentry=template.clone();
newentry.attr('id',template.attr('id')+Math.round(Math.random()*1000000000));
$(target).parent().before(newentry);
var del=this.repeatableDeleteField.bind(this);
$('.delete',newentry).click(del);
this.setupKeyOverride(newentry);
return false;},
repeatableDeleteField:function(ev){
var target=ev.target;
var container=$(target).parents('.repeatable');
var mincount=container.data('repeatable').mincount;
if(mincount>0){
if($(container).find('.widget').length-1<=mincount){
alert(sprintf(ungettext("Must have at least %s entry","Must have at least %s entries",mincount),mincount));
return false;}}
var widget=$(target).parents('.widget');
widget.remove();
return false;},
_generateProxyCheckbox:function(checkboxObject,formObject,falseValue){
if($(checkboxObject).prop('checked'))return;
if(falseValue==null)falseValue='0';
var expectedName=checkboxObject.name;
var displacedName='_spl_proxied_'+expectedName;
checkboxObject.name=displacedName;
$(sprintf('<input type="hidden" name="%s" value="%s" />',expectedName,falseValue)).appendTo(formObject);},
_revertProxiedCheckboxes:function(formObject){
$('input[type="checkbox"]',formObject).each(function(){
var name=$(this).attr('name');
if(name.indexOf('_spl_proxied_')==0){
var original_name=name.substr(13);
$('input[name="'+original_name+'"]').remove();
$(this).attr('name',original_name);}});},
setupKeyOverride:function(frm){
if(!frm)
frm=$('#eaiform');
var self=this;
$('input',frm).not('.withbutton').keypress(function(ev){
if(ev.which==13){
frm.submit();
return false;}
return true;});
$('input.withbutton',frm).keypress(function(ev){
if(ev.which==13){
self.doElementOnChange(ev.target,$(ev.target).attr('name'));
return false;}
return true;});},
handleAdminReady:function(namespace,entity_name){
this.dispatchInitAccumulators();
$('*[onchange]').trigger('onchange');
$('input[type="radio"][onclick][checked]').trigger('onclick');
$('input[type="checkbox"][onclick]').trigger('onclick');
this.setupKeyOverride();
this.elementsLoaded(namespace,entity_name);
this.initRepeatables();}});
Splunk.EAI.instance=null;
Splunk.EAI.getInstance=function(){
if(arguments.length){
Splunk.EAI.instance=new Splunk.EAI();
Splunk.EAI.instance.setup.apply(Splunk.EAI.instance,arguments);}else if(!Splunk.EAI.instance){
alert("Attempted to fetch instance of Splunk.EAI prior to initialization");}
return Splunk.EAI.instance;};
function moveObjectToApp(uriToMove,entityName,entowner){
var movePopup=new Splunk.Popup($('.moveObjectFormContainer'),{
title:_('Move Object'),
buttons:[
{
label:_('Move'),
type:'primary',
callback:function(){
$('.popupContent #moveControl input[name="name"]').val(entityName);
$('.popupContent #moveControl input[name="entowner"]').val(entowner);
$('.popupContent #moveControl input[name="uri"]').val(uriToMove);
$('.popupContent #moveControl').submit();
return true;}.bind(this)}]});}
function restart_server(return_to){
var start_time;
var restart_timeout=false;
var restart_tries=0;
var restart_url_base;
var restart_url_proto;
var restart_done=false;
var restart_notified=false;
var img_list=[];
var RESTART_MAX_TRIES=180;
var PING_INTERVAL=2000;
var restart_fail=function(msg){
$('.splOverlay').hide();
$('#restartstatus').hide();
$('#statusmsg').hide();
Splunk.Messenger.System.getInstance().send('error','restart_server',msg);};
var restart_succeeded=function(){
if(!restart_notified){
restart_notified=true;
alert(_('Restart successful - click OK to log back into Splunk'));
var bounce_url;
if(return_to){
bounce_url=restart_url_base+Splunk.util.make_full_url('/account/login',{return_to:return_to});}else{
bounce_url=restart_url_base+Splunk.util.make_url('/');}
window.location.href=bounce_url;}
return;};
var restart_in_progress=function(){
$('.splOverlay').show();
$('#statusmsg').hide();
$('#restartstatus').show();};
var restart_ssl_notice=function(){
$('.splOverlay').show();
$('#statusmsg').hide();
$('#restartsslwarn').show();
$('#restartsslwarn a').attr('href',restart_url_base+Splunk.util.make_url('/'));};
var restart_check_status=function(){
if(restart_done)
return;
if(restart_tries++>=RESTART_MAX_TRIES){
return restart_fail(_('Timed out waiting for restart'));}
$.ajax({
type:'GET',
dataType:'json',
cache:false,
url:restart_url_base+Splunk.util.make_url('/api/config/UI_UNIX_START_TIME'),
success:function(data){
if(data.start_time>start_time){
restart_done=true;
clearTimeout(restart_timeout);
return restart_succeeded();}}});
restart_timeout=setTimeout(restart_check_status,PING_INTERVAL);};
var restart_img_loaded=function(){
restart_done=true;
clearTimeout(restart_timeout);
restart_succeeded();};
var restart_check_status_img=function(){
if(restart_done){
return;}
var im=new Image();
im.onload=restart_img_loaded;
im.src=restart_url_base+Splunk.util.make_url('/config/img?proto='+restart_url_proto+'&_='+Math.random());
img_list.push(im);
restart_timeout=setTimeout(restart_check_status_img,PING_INTERVAL);};
if(!confirm(_("Are you sure you want to restart Splunk?")))
return false;
restart_in_progress();
$.post(Splunk.util.make_url('/api/manager/control'),{operation:'restart_server'},function(data){
if(data.status=='OK'){
start_time=data.start_time;
if(data.ssl=='window')data.ssl=window.location.protocol=='https:';
restart_url_proto=data.ssl?'https':'http';
restart_url_base=(data.ssl?'https://':'http://')
+window.location.hostname
+(data.port==80||(data.ssl&&data.port==443)?'':':'+data.port);
Splunk.Logger.mode.Default=Splunk.Logger.mode.None;
Splunk.Messenger.System.getInstance().abortRequests=true;
restart_tries=0;
var current_port=window.location.port||(window.location.protocol=='http:'?80:443);
var current_ssl=window.location.protocol=='https:';
if((!current_ssl&&data.ssl)||(data.ssl&&current_port!=data.port)){
return restart_ssl_notice();}
if(data.ssl!=current_ssl||current_port!=data.port){
restart_check_status_img();}else{
restart_check_status();}
return restart_in_progress();}else if(data.status=='PERMS'){
return restart_fail(_('Permission Denied - You are not authorized to restart the server'));}else if(data.status=='AUTH'){
return restart_fail(_('Restart failed'));}else if(data.status=='FAIL'){
return restart_fail(_('Restart failed: '+data.reason));}else{
return restart_fail(_('Restart failed'));}},'json');
return false;}
function resync_auth(){
var msg=Splunk.Messenger.System.getInstance();
msg.send('info','resync_auth',_('Syncing..'));
$.ajax({
type:'POST',
data:{operation:'resync_auth'},
dataType:'text',
cache:false,
url:Splunk.util.make_url('/api/manager/control'),
success:function(data){
if(data.substr(0,2)=='OK'){
msg.send('info','resync_auth',_('Authentication synched successfully.'));
setTimeout("window.location.reload()",1000);}else if(data.substr(0,4)=='AUTH'){
msg.send('error','resync_auth',_('Synch failed - authentication rejected - Log in again to retry.'));}else if(data.substr(0,5)=='PERMS'){
msg.send('error','resync_auth',_('Permission denied. You are not authorized to reload the authentication system'));}else{
msg.send('error','resync_auth',_('Synch failed: ')+data);}},
error:function(){
msg.send('error','resync_auth',_('Failed to contact server'));}});}
$(function(){
$('a.aboutLink').unbind('click');
$('a.aboutLink').click(function(event){
Splunk.Popup.AboutPopup($('.aboutPopupContainer'));});});;Splunk.namespace('Splunk.Admin');
Splunk.Admin.sorter=function(a,b){
return(a.value>b.value?1:(a.value<b.value?-1:0));}
Splunk.Admin.initAccumulator2=function(){
$('table.accumulator').each(function(){
var availableList=$('select.available',this);
var selectedList=$('select.selected',this);
var proxyList=$('select.proxy',this);
var insertItems=function(things){
selectedList.append(things.clone());
things.each(function(){
$(this).prop('disabled',true);});
$('option',availableList).prop('selected',false);
$('option',selectedList).prop('selected',false);
var previous_value=null;
$('option',selectedList).sortElements(Splunk.Admin.sorter).each(function(){
if(this.value==previous_value){
$(this).remove();}else{
previous_value=this.value;}});
proxyList.html('').append($('option',selectedList).clone());
$('option',proxyList).prop('selected',true);}
var deleteItems=function(things){
things.each(function(){
var matchSelector="option[value='"+$(this).attr('value')+"']";
$(matchSelector,availableList).prop("disabled",false);})
things.remove();
availableList.focus();
$('option',selectedList).prop('selected',false);
proxyList.html('').append($('option',selectedList).clone());
$('option',proxyList).prop('selected',true);}
$('button.insert',this).bind('click',function(evt){
insertItems($('option:selected',availableList));});
$('button.delete',this).bind('click',function(evt){
deleteItems($('option:selected',selectedList));});
availableList.bind('dblclick',function(evt){
if($(evt.target).is('option')){
insertItems($(evt.target));}});
selectedList.bind('dblclick',function(evt){
if($(evt.target).is('option')){
deleteItems($(evt.target));}});});}
Splunk.Admin.initAccumulator=function(){
$('.accumulator').each(function(){
var availableList=$('ul.available',this);
var selectedList=$('ul.selected',this);
var proxyList=$('select.proxy',this);
var insertItem=function(liObject){
var value=$.trim(liObject.attr('val'));
var label=$.trim(liObject.text());
selectedList.append($('<li/>').attr('val',value).text(label));
proxyList.append($('<option/>').attr('value',value).prop('selected',true).text(label));
$("li[val='"+value+"']",availableList).addClass('chosen');
$('li',selectedList).sortElements(function(a,b){
return a.innerHTML>b.innerHTML?1:a.innerHTML<b.innerHTML?-1:0;});}
var deleteItem=function(liObject){
var value=liObject.attr('val');
$("li[val='"+value+"']",availableList).removeClass('chosen');
$("option[value='"+value+"']",proxyList).remove();
$("li[val='"+value+"']",selectedList).remove();}
availableList.bind('click',function(evt){
var item=$(evt.target);
if(item.is('li')&&!item.hasClass('disabled')){
if(item.hasClass('chosen')){
deleteItem(item);}else{
insertItem(item);}}
setTimeout(function(){selectedList.addClass('ie-sucks')},10);});
selectedList.bind('click',function(evt){
if($(evt.target).is('li')){
deleteItem($(evt.target));}});});}
jQuery.fn.sortElements=(function(){
var sort=[].sort;
return function(comparator,getSortable){
getSortable=getSortable||function(){return this;};
var placements=this.map(function(){
var sortElement=getSortable.call(this),
parentNode=sortElement.parentNode,
nextSibling=parentNode.insertBefore(
document.createTextNode(''),
sortElement.nextSibling);
return function(){
if(parentNode===this){
throw new Error("You can't sort elements if any one is a descendant of another.");}
parentNode.insertBefore(this,nextSibling);
parentNode.removeChild(nextSibling);};});
return sort.call(this,comparator).each(function(i){
placements[i].call(getSortable.call(this));});};})();
$(function(){
$('a.aboutLink').unbind('click');
$('a.aboutLink').click(function(event){
Splunk.Popup.AboutPopup($('.aboutPopupContainer'));});
$('.alerts_opener').click(function(){
Splunk.window.openAerts(this.href);
return false;});
$('.job_manager_opener').click(function(){
Splunk.window.openJobManager();
return false;});
$('.splIcon-close').click(function(){
return false;});});
$(function(){
Splunk.Admin.initAccumulator();});;i18n_register({"catalog":{"+-today":"today","+-minute":"minute","+-hour":"hour","+-month":"month","+-%s (real-time)":"%s (real-time)","+-during this %(singleUnitOfTime)s":"during this %(singleUnitOfTime)s","+-in the last %(count)s %(unitOfTime)ss":"in the last %(count)s %(unitOfTime)ss","+-year":"year","+-yesterday":"yesterday","+-during last %(singleUnitOfTime)s":"during last %(singleUnitOfTime)s","+-over custom relative time range":"over custom relative time range","+-over all time":"over all time","+-second":"second","+-in the last %(unitOfTime)s":"in the last %(unitOfTime)s","+-in custom real-time range":"in custom real-time range","+-week":"week","+-day":"day"},"plural":function(n){return n==1?0:1;}});
Splunk.TimeRange=$.klass({
_absoluteArgs:{},
_relativeArgs:{},
_fallbackAbsoluteTimeFormat:"%s.%Q",
_isSubRangeOfJob:false,
_unitMap:{},
YEAR:0,
MONTH:1,
DAY:2,
HOUR:3,
MINUTE:4,
SECOND:5,
MILLISECOND:6,
CUSTOM_RELATIVE_RANGE_HEADER:_("over custom relative time range"),
GENERIC_REAL_TIME_RANGE_HEADER:_("%s (real-time)"),
CUSTOM_REAL_TIME_RANGE_HEADER:_("in custom real-time range"),
DATE_METHODS:[
{name:"year",getter:"getFullYear",setter:"setFullYear",minValue:"1974"},
{name:"month",getter:"getMonth",setter:"setMonth",minValue:"0"},
{name:"day",getter:"getDate",setter:"setDate",minValue:"1"},
{name:"hour",getter:"getHours",setter:"setHours",minValue:"0"},
{name:"minute",getter:"getMinutes",setter:"setMinutes",minValue:"0"},
{name:"second",getter:"getSeconds",setter:"setSeconds",minValue:"0"},
{name:"millisecond",getter:"getMilliseconds",setter:"setMilliseconds",minValue:"0"}],
initialize:function(earliestArg,latestArg){
this._constructorArgs=[earliestArg,latestArg];
var u=this._unitMap;
u.s=u.sec=u.secs=u.second=u.seconds=_("second");
u.m=u.min=u.mins=u.minute=u.minutes=_("minute");
u.h=u.hr=u.hrs=u.hour=u.hours=_("hour");
u.d=u.day=u.days=_("day");
u.w=u.week=_("week");
u.mon=u.month=u.months=_("month");
u.y=u.yr=u.yrs=u.year=u.years=_("year");
this._absoluteArgs={"earliest":false,"latest":false}
this._relativeArgs={"earliest":false,"latest":false}
if(earliestArg=="now")earliestArg="0s";
if(latestArg=="now")latestArg="0s";
this.logger=Splunk.Logger.getLogger("time_range.js");
this._isSubRangeOfJob=false;
this._absoluteArgs["earliest"]=this.parseAbsoluteArgs(earliestArg);
this._absoluteArgs["latest"]=this.parseAbsoluteArgs(latestArg);
if(this.isAbsolute()){
var tz=Splunk.Globals["timeZone"];
this.serverOffsetAtEarliest=tz.getOffset(this._absoluteArgs["earliest"].valueOf()/1000)/60;
this.serverOffsetAtLatest=tz.getOffset(this._absoluteArgs["latest"].valueOf()/1000)/60;}
if(!this._absoluteArgs["earliest"]){
this._relativeArgs["earliest"]=this.parseRelativeArgs(earliestArg);}
if(!this._absoluteArgs["latest"]){
this._relativeArgs["latest"]=this.parseRelativeArgs(latestArg);}},
containsTime:function(dateObj){
var earliestTime=this.getAbsoluteEarliestTime();
var latestTime=this.getAbsoluteLatestTime();
if(!earliestTime&&!latestTime)return true;
return(earliestTime<=dateObj&&latestTime>dateObj);},
containsRange:function(range){
if(this.isAllTime())return true;
if(range.isAllTime())return false;
if(this.equalToRange(range))return true;
if(this.relativeTerm&&!range.relativeTerm)return true;
if(
this.getEarliestTimeTerms()==range.getEarliestTimeTerms()&&
this.getLatestTimeTerms()==range.getLatestTimeTerms()){
return true;}
if(this.getAbsoluteEarliestTime()>range.getAbsoluteEarliestTime())return false;
else if(this.getAbsoluteLatestTime()<range.getAbsoluteLatestTime())return false;
return true;},
normalizeEquivalentNowValues:function(relativeArg){
if(relativeArg=="+0s")return"now";
else return relativeArg;},
equalToRange:function(range){
if(this===range)return true;
if(this.normalizeEquivalentNowValues(this.getRelativeEarliestTime())!=this.normalizeEquivalentNowValues(range.getRelativeEarliestTime()))return false;
if(this.normalizeEquivalentNowValues(this.getRelativeLatestTime())!=this.normalizeEquivalentNowValues(range.getRelativeLatestTime()))return false;
if(typeof(this.getAbsoluteEarliestTime())!=typeof(range.getAbsoluteEarliestTime()))return false;
if(typeof(this.getAbsoluteLatestTime())!=typeof(range.getAbsoluteLatestTime()))return false;
var rangeEarliestTime=range.getAbsoluteEarliestTime();
if(this.getAbsoluteEarliestTime()&&rangeEarliestTime&&this.getAbsoluteEarliestTime().getTime()!=rangeEarliestTime.getTime())return false;
var rangeLatestTime=range.getAbsoluteLatestTime();
if(this.getAbsoluteLatestTime()&&rangeLatestTime&&this.getAbsoluteLatestTime().getTime()!=rangeLatestTime.getTime())return false;
return true;},
getDuration:function(){
if(this.relativeTerm)return-1;
else if(this.getAbsoluteLatestTime()&&this.getAbsoluteEarliestTime()){
return this.getAbsoluteLatestTime()-this.getAbsoluteEarliestTime();}
else return-1;},
isAllTime:function(){
return(this.isAbsolute()||this.isRelative())?false:true;},
isAbsolute:function(){
return((this.getAbsoluteEarliestTime()&&this.getAbsoluteEarliestTime().valueOf()!=0)||this.getAbsoluteLatestTime())?true:false;},
isRelative:function(){
return(this._relativeArgs["earliest"]||this._relativeArgs["latest"])?true:false;},
isRealTime:function(){
if(this._relativeArgs["earliest"]&&this._relativeArgs["earliest"]["isRealTime"])return true;
else if(this._relativeArgs["latest"]&&this._relativeArgs["latest"]["isRealTime"])return true;
return false;},
isSubRangeOfJob:function(){
return this._isSubRangeOfJob;},
setAsSubRangeOfJob:function(isSubRange){
this._isSubRangeOfJob=isSubRange;},
getEarliestTimeTerms:function(){
var timeTerms=[];
if(this.getAbsoluteEarliestTime()){
var epochTime=this.getAbsoluteEarliestTime().getTime()/1000;
timeTerms.push(epochTime);}else if(this._relativeArgs["earliest"]){
timeTerms.push(this.getRelativeEarliestTime());}
return timeTerms.join(" ");},
getLatestTimeTerms:function(){
var timeTerms=[];
if(this.getAbsoluteLatestTime()){
var epochTime=this.getAbsoluteLatestTime().getTime()/1000;
timeTerms.push(epochTime);}else if(this._relativeArgs["latest"]){
timeTerms.push(this.getRelativeLatestTime());}
return timeTerms.join(" ");},
zoomIn:function(){
var duration=this.getDuration();
if(!duration)this.logger.error("Assertion failed - TimeRange.zoomOut not implemented for relative time terms range="+this.toConciseString());
this._absoluteArgs["earliest"].setTime(this.getAbsoluteEarliestTime().getTime()+Math.round(duration/2));
return new Splunk.TimeRange(this._absoluteArgs["earliest"],this._absoluteArgs["latest"],this.serverOffsetAtEarliest,this.serverOffsetAtLatest);},
zoomOut:function(){
if(!this.getDuration())
this.logger.error("Assertion failed - TimeRange.zoomOut not implemented for relative time terms range="+this.toConciseString());
var DateTime=splunk.time.DateTime;
var Duration=splunk.time.Duration;
var SplunkTimeZone=splunk.time.SplunkTimeZone;
var TimeUtils=splunk.time.TimeUtils;
var timeZone=new SplunkTimeZone(Splunk.util.getConfigValue("SERVER_ZONEINFO"));
var earliest=new DateTime(this._absoluteArgs["earliest"].getTime()/1000).toTimeZone(timeZone);
var latest=new DateTime(this._absoluteArgs["latest"].getTime()/1000).toTimeZone(timeZone);
var duration=TimeUtils.subtractDates(latest,earliest);
var units=new Duration();
if((duration.years>0)||(duration.months>0))
units.years=1;
else if(duration.days>0)
units.months=1;
else if(duration.hours>0)
units.days=1;
else if(duration.minutes>0)
units.hours=1;
else if(duration.seconds>=1)
units.minutes=1;
else if(duration.seconds>0)
units.seconds=1;
duration=(duration.years<1)?units.clone():new Duration(Math.ceil((duration.years*2)/10)*10);
latest=TimeUtils.ceilDate(latest,duration);
var isLatest=false;
var now=TimeUtils.ceilDate(new DateTime().toTimeZone(timeZone),units);
if(latest.getTime()>=now.getTime())
{
latest=now;
isLatest=true;}
var earliest2=TimeUtils.subtractDateDuration(latest,duration);
earliest=(earliest2.getTime()<=earliest.getTime())?earliest2:TimeUtils.floorDate(earliest,units);
var isEarliest=false;
if(earliest.getTime()<=0)
{
earliest.setTime(1);
isEarliest=true;}
if(isEarliest&&isLatest)
{
this._absoluteArgs["earliest"]=false;
this._absoluteArgs["latest"]=false;
return new Splunk.TimeRange(0);}
this._absoluteArgs["earliest"].setTime(earliest.getTime()*1000);
this._absoluteArgs["latest"].setTime(latest.getTime()*1000);
return new Splunk.TimeRange(earliest.getTime(),latest.getTime());},
genericGetForRelativeArg:function(which){
if(which=="earliest"&&this._constructorArgs[0])return this._constructorArgs[0];
else if(this._constructorArgs[1])return this._constructorArgs[1];
if(!this._relativeArgs.hasOwnProperty(which))return false;
var dict=this._relativeArgs[which];
var str=[];
if(dict["isRealTime"])str.push("rt");
if(dict.hasOwnProperty("count")){
if(dict["count"]>=0)str.push("+");
str.push(dict["count"])}
if(dict.hasOwnProperty("units")){
str.push(dict["units"]);}
if(dict.hasOwnProperty("snapUnits")){
str.push("@"+dict["snapUnits"]);}
return str.join("");},
getRelativeEarliestTime:function(){
return this.genericGetForRelativeArg("earliest");},
getRelativeLatestTime:function(){
return this.genericGetForRelativeArg("latest");},
getAbsoluteEarliestTime:function(){
return this._absoluteArgs["earliest"];},
getAbsoluteLatestTime:function(){
return this._absoluteArgs["latest"];},
parseRelativeArgs:function(arg){
if(!arg)return false;
if(arg.indexOf(" ")!=-1)this.logger.error("Assertion failed - Currently we can only deal with a single relative term at a time. ");
var relativeDict={};
if(arg.indexOf("rt")==0){
relativeDict["isRealTime"]=true;
arg=arg.substring(2);}
var splitArgs=arg.split("@");
arg=splitArgs[0]||false;
if(splitArgs.length>1){
relativeDict["snapUnits"]=splitArgs[1];}
if(arg&&Splunk.util.isInt(parseInt(arg,10))){
relativeDict["count"]=parseInt(arg,10);
relativeDict["units"]=Splunk.util.trim(arg.replace(relativeDict["count"],""),"+")||"s";}
return relativeDict;},
parseAbsoluteArgs:function(arg,serverOffsetThen){
if(!arg&&!Splunk.util.isInt(arg))return false;
if(arg&&arg.charAt&&(arg.charAt(0)=="+"||arg.charAt(0)=="-"||arg.substring(0,2)=="rt"||arg=="now"))return false;
if(arg instanceof Date){
return arg;}else if(arg&&(""+arg).match(Splunk.TimeRange.UTCRegex)){
var d=new Date();
d.setTime(arg*1000);
return d;}else{
var parsedDate=Splunk.util.parseDate(arg,this.getTimeFormat());
return parsedDate;}
return false;},
toString:function(){
var str=[];
if(this.getAbsoluteEarliestTime()){
str.push(this.getAbsoluteEarliestTime());}
if(this.getAbsoluteLatestTime()){
str.push(this.getAbsoluteLatestTime());}
if(this.getRelativeEarliestTime()){
str.push(this.getRelativeEarliestTime());}
if(this.getRelativeLatestTime()){
str.push(this.getRelativeLatestTime());}
return str.join(" ");},
toConciseString:function(){
if(this.isAbsolute()){
var earliestTime=null;
var latestTime=null;
if(this.getAbsoluteEarliestTime()){
earliestTime=new Date();
earliestTime.setTime(this._absoluteArgs["earliest"].valueOf());
if(Splunk.TimeRange.CORRECT_OFFSET_ON_DISPLAY){
var earliestDelta=Splunk.util.getTimezoneOffsetDelta(this.serverOffsetAtEarliest,earliestTime);
earliestTime.setTime(earliestTime.valueOf()-earliestDelta);}}
if(this.getAbsoluteLatestTime()){
latestTime=new Date();
latestTime.setTime(this._absoluteArgs["latest"].valueOf());
if(Splunk.TimeRange.CORRECT_OFFSET_ON_DISPLAY){
var latestDelta=Splunk.util.getTimezoneOffsetDelta(this.serverOffsetAtLatest,latestTime);
latestTime.setTime(latestTime.valueOf()-latestDelta);}}
return format_datetime_range(Splunk.util.getConfigValue('LOCALE',"NONE"),earliestTime,latestTime);}else if(this.isRealTime()){
var relativeRangeHeader=this.formatRelativeRange()
if(relativeRangeHeader==this.CUSTOM_RELATIVE_RANGE_HEADER){
return this.CUSTOM_REAL_TIME_RANGE_HEADER;}else{
return sprintf(this.GENERIC_REAL_TIME_RANGE_HEADER,relativeRangeHeader);}}else if(this.isRelative()&&!this.isRealTime()){
return this.formatRelativeRange();}else{
return _("over all time");}},
formatRelativeRange:function(){
var relEarliest=this._relativeArgs["earliest"];
var relLatest=this._relativeArgs["latest"];
if(relEarliest.hasOwnProperty("snapUnits")){
if(relLatest.hasOwnProperty("snapUnits")!=relLatest.hasOwnProperty("snapUnits")){
throw("Assertion failed - we dont support cases where one side has snapUnits and the other does not.");}
if(this._unitMap[relEarliest["snapUnits"]]=="day"&&this._unitMap[relLatest["snapUnits"]]=="day"){
if(!relEarliest.hasOwnProperty("count")&&relLatest.hasOwnProperty("count")&&relLatest["count"]==1){
return _("today");}
else if(!relLatest.hasOwnProperty("count")&&relEarliest.hasOwnProperty("count")&&relEarliest["count"]==-1){
return _("yesterday");}}
if(!relEarliest.hasOwnProperty("count")&&relLatest.hasOwnProperty("count")&&relLatest["count"]==1){
return sprintf(_("during this %(singleUnitOfTime)s"),{singleUnitOfTime:this._unitMap[relEarliest["snapUnits"]]})}
if(!relLatest.hasOwnProperty("count")&&relEarliest.hasOwnProperty("count")&&relEarliest["count"]==-1){
if(relEarliest.hasOwnProperty("snapUnits")&&(relEarliest["snapUnits"]==relEarliest["units"])){
if(relLatest.hasOwnProperty("snapUnits")&&(relLatest["snapUnits"]==relEarliest["units"])){
return sprintf(_("during last %(singleUnitOfTime)s"),{singleUnitOfTime:this._unitMap[relEarliest["snapUnits"]]})}}}}
if(relEarliest.hasOwnProperty("units")&&this._unitMap.hasOwnProperty(relEarliest["units"])&&!relLatest.hasOwnProperty("snapUnits")&&((!relLatest.hasOwnProperty("units")&&!relLatest.hasOwnProperty("count"))||relLatest["count"]==0)){
if(relEarliest.hasOwnProperty("count")&&relEarliest["count"]==-1){
if(!relEarliest.hasOwnProperty("snapUnits")||(relEarliest["snapUnits"]==relEarliest["units"])){
return sprintf(_("in the last %(unitOfTime)s"),{unitOfTime:this._unitMap[relEarliest["units"]]});}}
else if(relEarliest.hasOwnProperty("units")&&relEarliest.hasOwnProperty("count")){
if(!relEarliest.hasOwnProperty("snapUnits")||relEarliest["snapUnits"]==relEarliest["units"]){
return sprintf(_("in the last %(count)s %(unitOfTime)ss"),{count:-relEarliest["count"],unitOfTime:this._unitMap[relEarliest["units"]]})}}}
return this.CUSTOM_RELATIVE_RANGE_HEADER;},
clone:function(){
var range=new Splunk.TimeRange(this._constructorArgs[0],this._constructorArgs[1],this._constructorArgs[2],this._constructorArgs[3]);
range.setAsSubRangeOfJob(this.isSubRangeOfJob());
return range;},
copy:function(){
return this.clone();},
strftime:function(date,timeFormat){
return date.strftime(timeFormat||this.getTimeFormat())},
getTimeFormat:function(){
return Splunk.util.getConfigValue('DISPATCH_TIME_FORMAT',this._fallbackAbsoluteTimeFormat);}});
Splunk.TimeRange.UTCRegex=new RegExp("^[0-9]*(\.[0-9]+)?$");
Splunk.TimeRange.CORRECT_OFFSET_ON_DISPLAY=true;
Splunk.TimeRange.relativeArgsToString=function(count,units,snapUnits){
var which='earliest';
var range=new Splunk.TimeRange();
range._relativeArgs[which]={count:count,units:units,snapUnits:snapUnits};
return range.genericGetForRelativeArg(which);}
Splunk.TimeZone=$.klass({
initialize:function(serializedTimeZone){
this._serializedTimeZone=serializedTimeZone;
this._standardOffset=null;
this._serializedTimeZone=null;
this._isConstant=false;
this._offsetList=[];
this._timeList=[];
this._indexList=[];
this._parseSerializedTimeZone(serializedTimeZone);},
getSerializedTimeZone:function(){
return this._serializedTimeZone;},
numericBinarySearch:function(list,value){
if(!list)throw new TypeError("Parameter list must be non-null.");
var high=list.length-1;
if(high<0)return-1;
var low=0;
var mid;
var comp;
while(low<=high){
mid=parseInt(low+(high-low)/2,10);
comp=(value-list[mid]);
if(comp<0){
high=mid-1;}else if(comp>0){
low=mid+1;}else{
return mid;}}
return-low-1;},
getOffset:function(epochTime){
if(this._isConstant)return this._standardOffset;
var offsetList=this._offsetList;
var numOffsets=offsetList.length;
if(numOffsets==0)return 0;
if(numOffsets==1)return offsetList[0];
var timeList=this._timeList;
var numTimes=timeList.length;
if(numTimes==0)return 0;
var timeIndex;
if(numTimes==1){
timeIndex=0;}
else{
timeIndex=this.numericBinarySearch(timeList,epochTime);
if(timeIndex<-1){
timeIndex=-timeIndex-2;}else if(timeIndex==-1){
timeIndex=0;}}
var offsetIndex=this._indexList[timeIndex];
return offsetList[offsetIndex];},
_parseSerializedTimeZone:function(serializedTimeZone){
if(!serializedTimeZone)
return;
var entries=serializedTimeZone.split(";");
for(var i=0;i<entries.length;i++){
var entry=entries[i];
if(entry){
switch(entry.charAt(0)){
case"C":
if(this._parseC(entry.substring(1,entry.length)))
return;
break;
case"Y":
this._parseY(entry.substring(1,entry.length));
break;
case"@":
this._parseAt(entry.substring(1,entry.length));
break;
default:
break;}}}
this._standardOffset=this.getOffset(0);},
_parseC:function(entry){
if(!entry)return false;
var time=parseInt(entry,10);
if(time!=time)return false;
this._standardOffset=time;
this._isConstant=true;
return true;},
_parseY:function(entry){
if(!entry)return;
var elements=entry.split(" ");
if(elements.length<1)return;
var element=elements[0];
if(!element)return;
var offset=parseInt(element,10);
if(offset!=offset)return;
this._offsetList.push(offset);},
_parseAt:function(entry){
if(!entry)return;
var elements=entry.split(" ");
if(elements.length<2)return;
var element=elements[0];
if(!element)return;
var time=parseInt(element,10);
if(time!=time)return;
element=elements[1];
if(!element)return;
var index=parseInt(element,10);
if(index!=index)return;
index=parseInt(index,10);
if((index<0)||(index>=this._offsetList.length))return;
this._timeList.push(time);
this._indexList.push(index);}});;i18n_register({"catalog":{"+-Splunk.ModuleLoader - Assertion failed. Two modules were given the same id %s":"Splunk.ModuleLoader - Assertion failed. Two modules were given the same id %s","+-Splunk encountered the following unknown module: \"%s\" .  The view may not load properly.":"Splunk encountered the following unknown module: \"%s\" .  The view may not load properly."},"plural":function(n){return n==1?0:1;}});
Splunk.ModuleLoader=$.klass({
initialize:function(){
this.logger=Splunk.Logger.getLogger("module_loader.js");
this.messenger=Splunk.Messenger.System.getInstance();
this._modules=[];
this._topLevelModules=[];
this._modulesByID={};
for(var name in Splunk.Module){
if(Splunk.Module[name]&&this._hasSuperclass(Splunk.Module[name],Splunk.Module)&&!Splunk.Module[name].isAbstract){
Splunk.Module[name].prototype.moduleType='Splunk.Module.'+name;}}
$(document).bind('moduleLoadStatusChange',this.onModuleLoadStatusChange.bind(this));
this.setLoadPhase(Splunk.util.moduleLoadStates.WAITING_FOR_INITIALIZATION);},
getLoadPhase:function(){
return this._loadPhase;},
setLoadPhase:function(statusInt){
this._loadPhase=statusInt;
switch(statusInt){
case Splunk.util.moduleLoadStates.WAITING_FOR_INITIALIZATION:
this.buildModuleInstanceList();
break;
case Splunk.util.moduleLoadStates.WAITING_FOR_HIERARCHY:
$(document).trigger('allModulesInitialized');
this.buildHierarchyAndTopLevelModules();
break;
case Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT:
$(document).trigger('allModulesInHierarchy');
this.pushContexts();
break;
default:
this.logger.error("ModuleLoader.setLoadPhase was given a phase it doesnt care about. Odd.  ("+statusInt+")");
break;}},
onModuleLoadStatusChange:function(event,moduleId,statusInt){
if(!statusInt)this.logger.error("Assertion failed - received null or invalid statusInt for module=",moduleId," statusInt=",statusInt);
if(this.getLoadPhase()>=Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT){
return}
var lowestLoadState=this.getLowestLoadState();
if(this.getLoadPhase()<lowestLoadState<=Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT){
if((this.getLoadPhase()==Splunk.util.moduleLoadStates.WAITING_FOR_INITIALIZATION)&&(this.getLowestLoadState()>=Splunk.util.moduleLoadStates.WAITING_FOR_HIERARCHY)){
this.setLoadPhase(Splunk.util.moduleLoadStates.WAITING_FOR_HIERARCHY);
return;}
if((this.getLoadPhase()==Splunk.util.moduleLoadStates.WAITING_FOR_HIERARCHY)&&(this.getLowestLoadState()>=Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT)){
this.setLoadPhase(Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT);
return;}
if((this.getLoadPhase()==Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT)&&(this.getLowestLoadState()>=Splunk.util.moduleLoadStates.HAS_CONTEXT)){
this.setLoadPhase(Splunk.util.moduleLoadStates.HAS_CONTEXT);}}},
buildModuleInstanceList:function(){
this._modules=[];
var moduleContainers=$('.SplunkModule');
for(var i=0,lim=moduleContainers.length;i<lim;i++){
var container=moduleContainers[i];
var subclass=container.className.replace("SplunkModule ","");
var moduleId=$(container).attr('id');
if(subclass in Splunk.Module){
var module=new Splunk.Module[subclass](container);
this._modules.push(module);
if(this._modulesByID.hasOwnProperty(container.id)){
this.logger.error(sprintf(_("Splunk.ModuleLoader - Assertion failed. Two modules were given the same id %s"),container.id));}
this._modulesByID[container.id]=module;}else{
alert(sprintf(_('Splunk encountered the following unknown module: "%s" .  The view may not load properly.'),subclass));
this.logger.error("Splunk.ModuleLoader - Assertion failed. View config specifies a Module whose implementation cannot be found. className=",
subclass);}}
this._constructedAllModules=true;
var state=Splunk.util.moduleLoadStates.WAITING_FOR_HIERARCHY;
for(var j=0,mod_lim=this._modules.length;j<mod_lim;j++){
var mod=this._modules[j];
if(!mod.requiresAsynchronousLoading()){
mod.setLoadState(state);}}},
buildHierarchyAndTopLevelModules:function(){
this._topLevelModules=[];
this._withEachModule(this._modules,function(childModule){
var parentSelector=childModule.container.attr('s:parentmodule');
if(parentSelector){
var parentContainer=$(parentSelector)[0];
if(!parentContainer){
this.logger.error('Splunk.ModuleLoader - Module "'
+childModule.container.attr('id')
+'" could not find its declared parent module "'
+parentSelector+'"');}
this.getModuleInstanceById(parentSelector.substring(1)).addChild(childModule);}else{
this._topLevelModules.push(childModule);}}.bind(this));
var state=Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT;
this._withEachModule(this._modules,function(childModule){
childModule.setLoadState(state);});},
chartingSettingsToContext:function(settings,context){
var settingNameMap={'c.chart':'charting.chart','c.title':'charting.chartTitle','c.stack':'charting.chart.stackMode','c.split':'charting.layout.splitSeries','c.nulls':'charting.chart.nullValueMode','c.legend':'charting.legend.placement','c.x.title':'charting.primaryAxisTitle.text','c.y.title':'charting.secondaryAxisTitle.text','c.y.min':'charting.secondaryAxis.minimumNumber','c.y.max':'charting.secondaryAxis.maximumNumber','c.y.scale':'charting.secondaryAxis.scale','c.markers':'charting.chart.showMarkers'};
for(var arg in settings){
if(settingNameMap.hasOwnProperty(arg)){
context.set(settingNameMap[arg],settings[arg]);}else if(arg.indexOf('charting.')==0){
context.set(arg,settings[arg]);}}},
pushContexts:function(){
var hashParams=Splunk.util.queryStringToProp(Splunk.util.getHash());
var search;
var context;
if(hashParams.hasOwnProperty("q")){
this.logger.info("Kick off search based on fragment identifier");
this.logger.info("Extracted fragment identifier params:",JSON.stringify(hashParams));
Splunk.toBeResurrected={
fullSearch:hashParams.q||"",
baseSearch:hashParams.q||"",
decompositionFailed:true,
intentions:[],
earliest:hashParams.earliest||"",
latest:hashParams.latest||""};
this.logger.info("Constructed search for module framework:",JSON.stringify(search));
var search=Splunk.Search.resurrect(Splunk.toBeResurrected);
var context=new Splunk.Context();
context.set("search",search);
this.chartingSettingsToContext(hashParams,context);
this.startResurrection(context,this._topLevelModules);}else if(Splunk.toBeResurrected){
search=Splunk.Search.resurrect(Splunk.toBeResurrected);
if(search.isJobDispatched()){
search.job.setAsAutoCancellable(false);}
context=new Splunk.Context();
context.set("search",search);
var qsDict=Splunk.util.queryStringToProp(document.location.search);
this.chartingSettingsToContext(qsDict,context);
this.startResurrection(context,this._topLevelModules);}else{
var propagateHasContextState=function(module){
if(!module.requiresDispatch()){
module.setLoadState(Splunk.util.moduleLoadStates.HAS_CONTEXT);
module.markPageLoadComplete();
if(Splunk.util.normalizeBoolean(module.getParam("autoRun"))){
module.pushContextToChildren();}else{
module.withEachChild(function(child){
propagateHasContextState(child);});}}};
this._withEachModule(this._topLevelModules,function(module){
propagateHasContextState(module);});}
this.logger.debug("ModuleLoader's work is done.  - now that contexts are pushed, we clear cached contexts for all non-dispatching modules except the topmost ones.");
this._withEachModule(this._modules,function(module){
if(!module.requiresDispatch()&&module.parent&&module.baseContext&&(!module.baseContext.get('search')||!module.baseContext.get('search').isJobDispatched())){
module.baseContext=null;}});
Splunk.Globals["Jobber"].clearForPolling();},
getLowestLoadState:function(){
var minimumStatus=Splunk.util.moduleLoadStates.HAS_CONTEXT;
for(var i=0,l=this._modules.length;i<l;i++){
minimumStatus=Math.min(minimumStatus,this._modules[i].getLoadState());}
if(!this._constructedAllModules)minimumStatus=Math.min(minimumStatus,Splunk.util.moduleLoadStates.WAITING_FOR_INITIALIZATION);
return minimumStatus;},
getModuleLoadState:function(moduleId){
return this.getModuleInstanceById(moduleId).getLoadState();},
_hasSuperclass:function(subclass,superclass){
var i=0;
while((subclass.superclass)&&i<100){
if(subclass.superclass==superclass)return true;
subclass=subclass.superclass;
i++;}
return false;},
startResurrection:function(context,topLevelModules){
this._withEachModule(topLevelModules,function(module){
var seamModule=module;
var nullSearch=new Splunk.Search();
while(!seamModule.requiresDispatch(nullSearch)&&!seamModule.someChildrenRequireDispatch(nullSearch)){
if(seamModule._children&&seamModule._children.length==1){
seamModule=seamModule._children[0];}else{
break;}}
var search=context.get("search");
this.logger.warn("resurrection proceeding from ",seamModule.moduleType," id=",seamModule.container.attr("id"));
var upwardContext=context.clone();
seamModule.applyContext(upwardContext);
seamModule.passContextToParent(upwardContext);
seamModule.withEachAncestor(function(module){
module.setLoadState(Splunk.util.moduleLoadStates.HAS_CONTEXT);
module.markPageLoadComplete();});
seamModule.setLoadState(Splunk.util.moduleLoadStates.HAS_CONTEXT);
seamModule.pushContextToChildren(context);
seamModule.markPageLoadComplete();}.bind(this));},
_withEachModule:function(moduleInstances,moduleFunc){
var numberOfModules=moduleInstances.length;
if(!numberOfModules){
this.logger.warn("No modules found in view.");}
for(var i=0;i<numberOfModules;i++){
moduleFunc(moduleInstances[i]);}},
getModuleInstanceById:function(moduleId){
if(this._modulesByID.hasOwnProperty(moduleId)){
return this._modulesByID[moduleId];}else{
this.logger.error("no module loaded with id="+moduleId);}
throw new Error('Could not find module class instance for DOM ID='+moduleId+' ('+this._modules.length+' modules total).');},
commitViewParams:function(viewstate_id,is_shared){
if(!viewstate_id){
viewstate_id=this._generateViewstateId();
if(Splunk.util.getCurrentDisplayView()!=Splunk.util.getCurrentView()){
viewstate_id='*:'+viewstate_id;}}else{
viewstate_id=$.trim(viewstate_id);}
var payload=[];
this._withEachModule(this._modules,function(module){
var tmpParams=module.snapshotParamset();
for(var key in tmpParams){
if(tmpParams.hasOwnProperty(key)){
payload.push(
module._buildParamName(key)
+'='+encodeURIComponent(tmpParams[key]));}}});
if(payload.length==0){
this.logger.warn(sprintf('commitViewParams - no parameters to persist; app=%s view=%s',
Splunk.util.getCurrentApp(),
Splunk.util.getCurrentView()));
return null;}
if(is_shared==true){
payload.push('_is_shared=true');}
$.ajax({
type:'POST',
url:this._modules[0]._buildParamUri(viewstate_id),
data:payload.join('&'),
dataType:'json',
success:this._commitViewParamsCallback.bind(this),
error:this._commitViewParamsErrorback.bind(this)});
return viewstate_id;},
_commitViewParamsCallback:function(data,textStatus){
this.logger.debug('_commitViewParamsCallback - status='+textStatus);},
_commitViewParamsErrorback:function(xhr,status,error){
this.logger.error('_commitViewParamsErrorback - '+error);},
_generateViewstateId:function(){
return(new Date()).getTime().toString(36);},
refreshViewData:function(){
$.ajax({
type:"GET",
url:Splunk.util.make_url("api","app",Splunk.util.getCurrentApp(),Splunk.util.getCurrentView()),
cache:false,
dataType:"text",
complete:function(data,textStatus){
if(data.status==200){
try{
viewData=JSON.parse(data.responseText);}catch(e){
this.logger.warn("Could not parse view data with error",e);
return;}
$(document).trigger("viewDataChange",[viewData]);}else{
this.logger.error("Could not retrieve view data change status was",data.status);}}.bind(this)});}});;
Splunk.JABridge=function(id){
if(Splunk.JABridge.instances[id]){
return Splunk.JABridge.instances[id]}
var self=this,
isConnected=false,
properties={},
propertiesArray=[],
methods={},
methodsArray=[],
events={},
eventsArray=[],
hasListeners={},
isInitialized=false,
isNotified=false,
eventListeners={},
notifyConnectTimeout,
connectCallback,
closeCallback,
inDocumentElement;
var argumentsSlice=function(args,start,end){
var argList=[];
end=end||args.length;
for(var i=start;i<end;i++){
argList.push(args[i]);}
return argList;};
var indexOf=function(array,item){
if(array.indexOf){
return array.indexOf(item);}else{
for(var i=0;i<array.length;i++){
if(array[i]==item){
return i;}}
return-1;}};
var notifyConnect=function(){
isNotified=true;
connectCallback();};
var sendOperation=function(operation){
operation=Splunk.JABridge.Cerealizer.serialize(operation);
var response;
if(!inDocumentElement){
inDocumentElement=self.getFlashElement();}
if(inDocumentElement){
var method=inDocumentElement[Splunk.JABridge.RECEIVER_METHOD];
if(method){
response=inDocumentElement[Splunk.JABridge.RECEIVER_METHOD](operation);
response=Splunk.JABridge.Cerealizer.deserialize(response);}}
if(response==null){
throw new Error("Null response object. Connection may have been lost.");}
if(typeof(response)!="object"){
throw new Error("Invalid response object.");}
if(response.success!=true){
if(response.message){
throw new Error(response.message);}
throw new Error("Uknown error.");}
return response.result;};
var processConnect=function(){
if(!isConnected){
isConnected=true;
notifyConnectTimeout=setTimeout(notifyConnect,0);}
return Splunk.JABridge.successResponse();};
var processClose=function(){
if(isConnected){
clearTimeout(notifyConnectTimeout);
var wasNotified=isNotified;
hasListeners={};
eventListeners={};
isConnected=false;
isNotified=false;
var closeCallbackCopy=closeCallback;
if(wasNotified&&(closeCallbackCopy!=null)){
try{
closeCallback();}catch(err){
setTimeout(function(){throw err;},0);}}}
return Splunk.JABridge.successResponse();};
var processGetInterface=function(){
var i=0,
propertySet=[],
methodSet=[],
eventSet=[],
property,
method,
event;
for(i=0;i<propertiesArray.length;i++){
var propertyDescriptor=propertiesArray[i];
property={};
property.name=propertyDescriptor.name;
if(propertyDescriptor.getter==null){
property.access="write-only";}else if(propertyDescriptor.setter==null){
property.access="read-only";}else{
property.access="read-write";}
property.type=propertyDescriptor.type;
property.description=propertyDescriptor.description;
propertySet.push(property);}
for(i=0;i<methodsArray.length;i++){
var methodDescriptor=methodsArray[i];
method={};
method.name=methodDescriptor.name;
method.parameters=methodDescriptor.parameters;
method.returnType=methodDescriptor.returnType;
method.description=methodDescriptor.description;
methodSet.push(method);}
for(i=0;i<eventsArray.length;i++){
var eventDescriptor=eventsArray[i];
event={};
event.name=eventDescriptor.name;
event.parameters=eventDescriptor.parameters;
event.description=eventDescriptor.description;
eventSet.push(event);}
return Splunk.JABridge.resultResponse({"properties":propertySet,"methods":methodSet,"events":eventSet});};
var processGetProperty=function(propertyName){
var response;
try{
var propertyDescriptor=properties[propertyName];
if(!propertyDescriptor){
throw new Error("Unknown property "+propertyName+".");}
if(propertyDescriptor.getter==null){
throw new Error("Property "+propertyName+" is write-only.");}
var result=propertyDescriptor.getter();
response=Splunk.JABridge.resultResponse(result);}catch(err){
response=Splunk.JABridge.errorResponse(err.message);}
return response;};
var processSetProperty=function(propertyName,value){
var response;
try{
var propertyDescriptor=properties[propertyName];
if(!propertyDescriptor){
throw new Error("Unknown property "+propertyName+".");}
if(propertyDescriptor.setter==null){
throw new Error("Property "+propertyName+" is read-only.");}
propertyDescriptor.setter(value);
response=Splunk.JABridge.successResponse();}catch(err){
response=Splunk.JABridge.errorResponse(err.message);}
return response;};
var processCallMethod=function(methodName,args){
var response;
try{
var methodDescriptor=methods[methodName];
if(!methodDescriptor){
throw new Error("Unknown method "+methodName+".");}
if(!(args instanceof Array)){
args=[args];}
var result=methodDescriptor.method.apply(null,args);
response=Splunk.JABridge.resultResponse(result);}catch(err){
response=Splunk.JABridge.errorResponse(err.message);}
return response;};
var processAddEventListener=function(eventName){
var response;
try{
var eventDescriptor=events[eventName];
if(!eventDescriptor){
throw new Error("Unknown event "+eventName+".");}
hasListeners[eventName]=true;
response=Splunk.JABridge.successResponse();}catch(err){
response=Splunk.JABridge.errorResponse(err.message);}
return response;};
var processRemoveEventListener=function(eventName){
var response;
try{
var eventDescriptor=events[eventName];
if(!eventDescriptor){
throw new Error("Uknown event "+eventName+".");}
delete hasListeners[eventName];
response=Splunk.JABridge.successResponse();}catch(err){
response=Splunk.JABridge.errorResponse(err.message);}
return response;};
var processDispatchEvent=function(eventName,args){
var reponse;
try{
if(!(args instanceof Array)){
args=[args];}
var listeners=eventListeners[eventName];
if(listeners!=null){
listeners=listeners.concat();
for(var i=0;i<listeners.length;i++){
listeners[i].apply(null,args)}}
response=Splunk.JABridge.successResponse();}catch(err){
response=Splunk.JABridge.errorResponse(err.message);}
return response;};
var addInterfaceToString=function(interfaceDescriptor){
interfaceDescriptor.toString=function(){
var header="----------------------------------------\n";
str="";
str+=header;
str+="properties\n";
str+=header;
str+="\n";
for(var i in this.properties){
var property=this.properties[i];
str+=property.name;
if(property.type){
str+=":"+property.type;}
if(property.access=="read-only"){
str+=" [read-only]";}else if(property.access=="write-only"){
str+=" [write-only]";}
if(property.description){
str+="\n"+property.description;}
str+="\n\n";}
str+=header;
str+="methods\n";
str+=header;
str+="\n";
for(var k in this.methods){
var method=this.methods[k];
str+=method.name;
str+="(";
if(method.parameters){
for(var j=0;j<method.parameters.length;j++){
if(j>0){
str+=", ";}
str+=method.parameters[j];}}
str+=")";
if(method.returnType){
str+=":"+method.returnType;}
if(method.description){
str+="\n"+method.description;}
str+="\n\n";}
str+=header;
str+="events\n";
str+=header;
str+="\n";
for(var l in this.events){
var event=this.events[l];
str+=event.name;
str+="(";
if(event.parameters){
for(var m=0;m<event.parameters.length;m++){
if(m>0){
str+=", ";}
str+=event.parameters[m];}}
str+=")";
if(event.description){
str+="\n"+event.description;}
str+="\n\n";}
return str;};};
self.getFlashElement=function(){
return window[id]||document.getElementById(id);};
self.isConnected=function(){
return isConnected;};
self.id=function(){
return id;};
self.getInterface=function(){
if(!isConnected){
throw new Error(Splunk.JABridge.CONNECTION_ERROR);}
try{
var interfaceDescriptor=sendOperation({"type":"getInterface"});
addInterfaceToString(interfaceDescriptor);}catch(err){
throw new Error(err.message);}
return interfaceDescriptor;};
self.getProperty=function(propertyName){
if(!isConnected){
throw new Error(Splunk.JABridge.CONNECTION_ERROR);}
try{
var value=sendOperation({"type":"getProperty","propertyName":propertyName});}catch(err){
throw new Error(err.message);}
return value;};
self.setProperty=function(propertyName,value){
if(!isConnected){
throw new Error(Splunk.JABridge.CONNECTION_ERROR);}
try{
sendOperation({"type":"setProperty","propertyName":propertyName,"value":value});}catch(err){
throw new Error(err.message);}};
self.callMethod=function(methodName){
if(!isConnected){
throw new Error(Splunk.JABridge.CONNECTION_ERROR);}
var result;
var args=argumentsSlice(arguments,1);
try{
result=sendOperation({"type":"callMethod","methodName":methodName,"arguments":args});}catch(err){
throw new Error(err.message);}
return result;};
self.addEventListener=function(eventName,listener){
if(!isConnected){
throw new Error(Splunk.JABridge.CONNECTION_ERROR);}
var listeners=eventListeners[eventName];
if(listeners==null){
try{
sendOperation({"type":"addEventListener","eventName":eventName});}catch(err){
throw new Error(err.message);}
listeners=eventListeners[eventName]=[];
listeners.push(listener);}else if(indexOf(listeners,listener)<0){
listeners.push(listener);}};
self.removeEventListener=function(eventName,listener){
if(!isConnected){
throw new Error(Splunk.JABridge.CONNECTION_ERROR);}
var listeners=eventListeners[eventName];
if(listeners!=null){
var index=indexOf(listeners,listener);
if(index>=0){
listeners.splice(index,1);
if(listeners.length==0){
delete eventListeners[eventName];
try{
sendOperation({"type":"removeEventListener","eventName":eventName});}catch(err){
throw new Error(err.message);}}}}};
self.receiveOperation=function(operation){
if(!isInitialized){
return null;}
if(operation==null){
throw new Error("A null communication object.");}
if(typeof(operation)!="object"){
throw new Error("Invalid communication object.");}
if(!operation.type){
throw new Error("A null operation type.");}
try{
switch(operation.type){
case"close":
response=processClose();
break;
case"connect":
response=processConnect();
break;
case"getInterface":
response=processGetInterface();
break;
case"getProperty":
response=processGetProperty(operation.propertyName);
break;
case"setProperty":
response=processSetProperty(operation.propertyName,operation.value);
break;
case"callMethod":
response=processCallMethod(operation.methodName,operation.arguments);
break;
case"addEventListener":
response=processAddEventListener(operation.eventName);
break;
case"removeEventListener":
response=processRemoveEventListener(operation.eventName);
break;
case"dispatchEvent":
response=processDispatchEvent(operation.eventName,operation.arguments);
break;
default:
response=Splunk.JABridge.errorResponse("Unknown operation "+operation.type+".");
break;}}catch(err){
response=Splunk.JABridge.errorResponse(err.message);}
return response;};
self.addProperty=function(propertyName,getter,setter,type,description){
if(isInitialized){
throw new Error(Splunk.JABridge.INITIALIZED_ERROR);}
if(getter==null&&setter==null){
throw new Error("One of paramaters getter or setter must be non-null");}
if(properties[propertyName]){
throw new Error("Property already defined.");}
var propertyDescriptor=new Splunk.JABridge.PropertyDescriptor(propertyName,getter,setter,type,description);
properties[propertyName]=propertyDescriptor;
propertiesArray.push(propertyDescriptor);};
self.addMethod=function(methodName,method,parameters,returnType,description){
if(isInitialized){
throw new Error(Splunk.JABridge.INITIALIZED_ERROR);}
if(methods[methodName]){
throw new Error("Method already defined.");}
var methodDescriptor=new Splunk.JABridge.MethodDescriptor(methodName,method,parameters,returnType,description);
methods[methodName]=methodDescriptor;
methodsArray.push(methodDescriptor);};
self.addEvent=function(eventName,parameters,description){
if(isInitialized){
throw new Error(Splunk.JABridge.INITIALIZED_ERROR);}
if(events[eventName]){
throw new Error("Event already defined.");}
var eventDescriptor=new Splunk.JABridge.EventDescriptor(eventName,parameters,description);
events[eventName]=eventDescriptor;
eventsArray.push(eventDescriptor);};
self.dispatchEvent=function(eventName){
if(!isConnected){
throw new Error(Splunk.JABridge.CONNECTION_ERROR);}
var args=argumentsSlice(arguments,1);
if(!events[eventName]){
throw new Error("Unknown event "+eventName+".");}
if(!hasListeners[eventName]){
return;}
try{
sendOperation({"type":"dispatchEvent","eventName":eventName,"arguments":args});}catch(err){
throw new Error(err.message);}};
self.close=function(){
if(!isInitialized){
return;}
clearTimeout(notifyConnectTimeout);
var wasConnected=isConnected;
var wasNotified=isNotified;
var closeCallbackCopy=closeCallback;
hasListeners={};
eventListeners={};
isConnected=false;
connectCallback=null;
closeCallback=null;
isInitialized=false;
isNotified=false;
if(wasConnected){
try{
sendOperation({"type":"close","id":id});}catch(err){}
if(wasNotified&&(closeCallbackCopy!=null)){
try{
closeCallbackCopy();}catch(err){
setTimeout(function(){throw err;},0);}}}};
self.dispose=function(){
self.close();
delete Splunk.JABridge.instances[id];
for(var i in self){
if(self.hasOwnProperty(i)){
delete self[i];}}};
self.connect=function(callback1,callback2){
if(callback1!=null&&callback1==Splunk.JABridge.connectAll){
if(!isInitialized||isConnected){
return;}}else{
if(callback1==null){
throw new Error("A callback must be defined in order for a JavaScript/Flash connection negotiation.");}
self.close();
connectCallback=callback1;
closeCallback=callback2;
isInitialized=true;}
try{
sendOperation({"type":"connect","id":id});
isConnected=true;
notifyConnectTimeout=setTimeout(notifyConnect,0);}catch(err){}};
self.JABridge=function(){
Splunk.JABridge.instances[id]=self;}();}
Splunk.JABridge.RECEIVER_METHOD="JABridge_receiveOperation";
Splunk.JABridge.CONNECTION_ERROR="JABridge not connected.";
Splunk.JABridge.INITIALIZED_ERROR="JABridge already initialized.";
Splunk.JABridge.getInstance=function(id){
return new Splunk.JABridge(id);};
Splunk.JABridge.instances={};
Splunk.JABridge.successResponse=function(){
return{"success":true};};
Splunk.JABridge.resultResponse=function(result){
return{"success":true,"result":result};};
Splunk.JABridge.errorResponse=function(message){
return{"success":false,"message":message};};
Splunk.JABridge.receiveOperation=function(operation){
var response;
try{
operation=Splunk.JABridge.Cerealizer.deserialize(operation);
if(!operation.id){
if(!Splunk.JABridge.isConnectAll){
Splunk.JABridge.isConnectAll=true;
setTimeout(Splunk.JABridge.connectAll,0);}
response=Splunk.JABridge.errorResponse("null operation id.");}else{
var instance=Splunk.JABridge.instances[operation.id];
if(instance!=null){
response=instance.receiveOperation(operation);}}}catch(error){
response=Splunk.JABridge.errorResponse(error.message);}
return Splunk.JABridge.Cerealizer.serialize(response);};
JABridge_receiveOperation=Splunk.JABridge.receiveOperation;
Splunk.JABridge.isConnectAll=false;
Splunk.JABridge.connectAll=function(){
var instances=Splunk.JABridge.instances;
for(var i in instances){
if(instances.hasOwnProperty(i)){
instances[i].connect(Splunk.JABridge.connectAll);}}
Splunk.JABridge.isConnectAll=false;};
Splunk.JABridge.PropertyDescriptor=function(name,getter,setter,type,description){
var self=this;
self.name=name;
self.getter=getter;
self.setter=setter;
self.type=type;
self.description=description;};
Splunk.JABridge.MethodDescriptor=function(name,method,parameters,returnType,description){
var self=this;
self.name=name;
self.method=method;
self.parameters=parameters;
self.returnType=returnType;
self.description=description;};
Splunk.JABridge.EventDescriptor=function(name,parameters,description){
var self=this;
self.name=name;
self.parameters=parameters;
self.description=description;};
Splunk.JABridge.Cerealizer=new function(){
var self=this;
var references=[];
var tokens="";
var tokenCount=0;
var tokenIndex=0;
self.serialize=function(value){
references=[];
var str=serializeValue(value);
references=null;
return str;};
self.deserialize=function(str){
var value;
try{
references=new Array();
tokens=str;
tokenCount=tokens?tokens.length:0;
tokenIndex=0;
value=deserializeNext();
if(tokenIndex<tokenCount){
throw new Error("Unexpected token.");}}catch(e){
throw new Error("Deserialize error at index "+tokenIndex+": "+e.message);}finally{
references=null;
tokens=null;
tokenCount=0;
tokenIndex=0;}
return value;};
var arrayIndexOf=function(array,item,fromIndex){
if(array.indexOf){
return array.indexOf(item,fromIndex);}else{
for(var i=fromIndex||0;i<array.length;i++){
if(array[i]===item){
return i;}}
return-1;}};
var serializeValue=function(value){
if(value===null){
return"";}
switch(typeof(value)){
case"number":
return serializeNumber(value);
case"boolean":
return serializeBoolean(value);
case"string":
return serializeString(value);
case"object":
var ref=serializeReference(value);
if(ref){
return ref;}
if(value instanceof Array){
return serializeArray(value);}else{
return serializeObject(value);}
default:
return"";}};
var serializeNumber=function(num){
return"#"+String(num)+"#";};
var serializeBoolean=function(bool){
return(bool?"t":"f");};
var serializeString=function(str){
return"\""+escape(str)+"\"";};
var serializeArray=function(arr){
references.push(arr);
var str="";
str+="[";
var length=arr.length;
for(var i=0;i<length;i++){
if(i>0){
str+=",";}
str+=serializeValue(arr[i]);}
str+="]";
return str;};
var serializeObject=function(obj){
references.push(obj);
var str="";
str+="{";
var i=0;
for(var p in obj){
if(i>0){
str+=",";}
str+=escape(p)+":"+serializeValue(obj[p]);
i++;}
str+="}";
return str;};
var serializeReference=function(ref){
var index=arrayIndexOf(references,ref);
if(index>=0){
return"@"+index+"@";}
return null;};
var deserializeNext=function(){
if(tokenIndex>=tokenCount){
return null;}
switch(tokens.charAt(tokenIndex)){
case"#":
return deserializeNumber();
case"t":
case"f":
return deserializeBoolean();
case"\"":
return deserializeString();
case"[":
return deserializeArray();
case"{":
return deserializeObject();
case"@":
return deserializeReference();
default:
return null;}};
var deserializeNumber=function(){
tokenIndex++;
var endIndex=arrayIndexOf(tokens,"#",tokenIndex);
if(endIndex<0){
throw new Error("Expecting closing #.");}
if(endIndex==tokenIndex){
throw new Error("Expecting number.");}
var num=Number(tokens.substring(tokenIndex,endIndex));
tokenIndex=endIndex+1;
return num;};
var deserializeBoolean=function(){
return(tokens.charAt(tokenIndex++)=="t");};
var deserializeString=function(){
tokenIndex++;
var endIndex=arrayIndexOf(tokens,"\"",tokenIndex);
if(endIndex<0){
throw new Error("Expecting closing quote.");}
var str=unescape(tokens.substring(tokenIndex,endIndex));
tokenIndex=endIndex+1;
return str;};
var deserializeArray=function(){
tokenIndex++;
if(tokenIndex>=tokenCount){
throw new Error("Expecting closing brace.");}
var arr=[];
references.push(arr);
var token=tokens.charAt(tokenIndex);
if(token=="]"){
tokenIndex++;
return arr;}
while(true){
arr.push(deserializeNext());
if(tokenIndex>=tokenCount){
throw new Error("Expecting closing brace.");}
token=tokens.charAt(tokenIndex++);
if(token=="]"){
break;}
if(token!=","){
throw new Error("Expecting comma or closing brace.");}}
return arr;};
var deserializeObject=function(){
tokenIndex++;
if(tokenIndex>=tokenCount){
throw new Error("Expecting closing bracket.");}
var obj={};
references.push(obj);
var token=tokens.charAt(tokenIndex);
if(token=="}"){
tokenIndex++;
return obj;}
var colonIndex;
var propertyName;
while(true){
colonIndex=arrayIndexOf(tokens,":",tokenIndex);
if(colonIndex<0){
throw new Error("Expecting colon.");}
propertyName=unescape(tokens.substring(tokenIndex,colonIndex));
tokenIndex=colonIndex+1;
obj[propertyName]=deserializeNext();
if(tokenIndex>=tokenCount){
throw new Error("Expecting closing bracket.");}
token=tokens.charAt(tokenIndex++);
if(token=="}"){
break;}
if(token!=","){
throw new Error("Expecting comma or closing bracket.");}}
return obj;};
var deserializeReference=function(){
tokenIndex++;
var endIndex=arrayIndexOf(tokens,"@",tokenIndex);
if(endIndex<0){
throw new Error("Expecting closing @.");}
if(endIndex==tokenIndex){
throw new Error("Expecting integer reference.");}
var referenceIndex=Math.round(Number(tokens.substring(tokenIndex,endIndex)));
if(isNaN(referenceIndex)||(referenceIndex<0)||(referenceIndex>=references.length)){
throw new Error("Invalid reference.");}
tokenIndex=endIndex+1;
return references[referenceIndex];};};;Splunk.Legend={
_numLabels:0,
_targetMap:new Object(),
_targetList:new Array(),
_labelMap:new Object(),
_labelList:new Array(),
_isLabelMapValid:true,
_timeoutID:0,
_listeners:new Object(),
numLabels:function(){
this._validateLabelMap();
return this._numLabels;},
register:function(id){
if(!id)
throw new Error("Parameter id must be non-null.");
var targetData=this._targetMap[id];
if(targetData)
return;
targetData=new Object();
this._targetMap[id]=targetData;
this._targetList.push(targetData);},
unregister:function(id){
var targetData=this._targetMap[id];
if(!targetData)
return;
for(var i=this._targetList.length-1;i>=0;i--)
{
if(this._targetList[i]==targetData)
{
this._targetList.splice(i,1);
break;}}
delete this._targetMap[id];
this._invalidateLabelMap();},
setLabels:function(id,labels){
var targetData=this._targetMap[id];
if(!targetData)
return;
targetData.labels=labels;
this._invalidateLabelMap();},
getLabelIndex:function(label){
this._validateLabelMap();
var index=this._labelMap[label];
if(index!=null)
return index;
return-1;},
addEventListener:function(event,closure){
var listeners=this._listeners[event];
if(!listeners)
listeners=this._listeners[event]=new Array();
var numListeners=listeners.length;
for(var i=0;i<numListeners;i++)
{
if(listeners[i]==closure)
return;}
listeners.push(closure);},
removeEventListener:function(event,closure){
var listeners=this._listeners[event];
if(!listeners)
return;
var numListeners=listeners.length;
for(var i=0;i<numListeners;i++)
{
if(listeners[i]==closure)
{
listeners.splice(i,1);
return;}}},
dispatchEvent:function(event){
var listeners=this._listeners[event];
if(listeners)
{
listeners=listeners.concat();
var i;
var eventParams=new Array();
var numArguments=arguments.length;
for(i=1;i<numArguments;i++)
eventParams.push(arguments[i]);
var numListeners=listeners.length;
var closure;
for(i=0;i<numListeners;i++)
{
closure=listeners[i];
try
{
closure.apply(null,eventParams);}
catch(e)
{}}}},
_invalidateLabelMap:function(){
if(!this._isLabelMapValid)
return;
this._isLabelMapValid=false;
var self=this;
var f=function(){
self._validateLabelMap();};
this._timeoutID=setTimeout(f,0);},
_validateLabelMap:function(){
if(this._isLabelMapValid)
return;
this._isLabelMapValid=true;
clearTimeout(this._timeoutID);
this._updateLabelMap();},
_updateLabelMap:function(){
var currentLabelList=this._labelList;
var changed=false;
var labelMap=new Object();
var labelList=new Array();
var targetList=this._targetList;
var targetListLength=targetList.length;
var targetData;
var targetLabels;
var targetLabelsLength;
var targetLabel;
var numLabels;
var i;
var j;
for(i=0;i<targetListLength;i++)
{
targetData=targetList[i];
targetLabels=targetData.labels;
if(targetLabels)
{
targetLabelsLength=targetLabels.length;
for(j=0;j<targetLabelsLength;j++)
{
targetLabel=targetLabels[j];
if(labelMap[targetLabel]==null)
{
labelMap[targetLabel]=labelList.length;
labelList.push(targetLabel);}}}}
numLabels=labelList.length;
if(numLabels!=currentLabelList.length)
{
changed=true;}
else
{
for(i=0;i<numLabels;i++)
{
if(labelList[i]!=currentLabelList[i])
{
changed=true;
break;}}}
if(changed)
{
this._labelMap=labelMap;
this._labelList=labelList;
this._numLabels=numLabels;
this.dispatchEvent("labelIndexMapChanged");}}};
(function($){'use strict';
var UNSET_OPTION={},
getDefaults,createClass,SPFormat,clipval,quartile,normalizeValue,normalizeValues,
remove,isNumber,all,sum,ensureArray,formatNumber,RangeMap,
MouseHandler,Tooltip,barHighlightMixin,
line,bar,tristate,discrete,bullet,pie,box,
VShape,VCanvas_base,VCanvas_canvas,VCanvas_vml,pending,shapeCount=0;
getDefaults=function(){
return{
common:{
type:'line',
lineColor:'#00f',
fillColor:'#cdf',
defaultPixelsPerValue:3,
width:'auto',
height:'auto',
composite:false,
tagValuesAttribute:'values',
tagOptionsPrefix:'spark',
enableTagOptions:false,
enableHighlight:true,
highlightLighten:1.4,
tooltipSkipNull:true,
tooltipPrefix:'',
tooltipSuffix:'',
disableHiddenCheck:false,
numberFormatter:false,
numberDigitGroupCount:3,
numberDigitGroupSep:',',
numberDecimalMark:'.',
disableTooltips:false,
disableInteraction:false},
line:{
spotColor:'#f80',
highlightSpotColor:'#5f5',
highlightLineColor:'#f22',
spotRadius:1.5,
minSpotColor:'#f80',
maxSpotColor:'#f80',
lineWidth:1,
normalRangeMin:undefined,
normalRangeMax:undefined,
normalRangeColor:'#ccc',
drawNormalOnTop:false,
chartRangeMin:undefined,
chartRangeMax:undefined,
chartRangeMinX:undefined,
chartRangeMaxX:undefined,
tooltipFormat:new SPFormat('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{y}}{{suffix}}')},
bar:{
barColor:'#3366cc',
negBarColor:'#f44',
stackedBarColor:['#3366cc','#dc3912','#ff9900','#109618','#66aa00','#dd4477','#0099c6','#990099'],
zeroColor:undefined,
nullColor:undefined,
zeroAxis:undefined,
barWidth:4,
barSpacing:1,
chartRangeMax:undefined,
chartRangeMin:undefined,
chartRangeClip:false,
colorMap:undefined,
tooltipFormat:new SPFormat('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{value}}{{suffix}}')},
tristate:{
barWidth:4,
barSpacing:1,
posBarColor:'#6f6',
negBarColor:'#f44',
zeroBarColor:'#999',
colorMap:{},
tooltipFormat:new SPFormat('<span style="color: {{color}}">&#9679;</span> {{value:map}}'),
tooltipValueLookups:{map:{'-1':'Loss','0':'Draw','1':'Win'}}},
discrete:{
lineHeight:'auto',
thresholdColor:undefined,
thresholdValue:0,
chartRangeMax:undefined,
chartRangeMin:undefined,
chartRangeClip:false,
tooltipFormat:new SPFormat('{{prefix}}{{value}}{{suffix}}')},
bullet:{
targetColor:'#f33',
targetWidth:3,
performanceColor:'#33f',
rangeColors:['#d3dafe','#a8b6ff','#7f94ff'],
base:undefined,
tooltipFormat:new SPFormat('{{fieldkey:fields}} - {{value}}'),
tooltipValueLookups:{fields:{r:'Range',p:'Performance',t:'Target'}}},
pie:{
sliceColors:['#3366cc','#dc3912','#ff9900','#109618','#66aa00','#dd4477','#0099c6','#990099'],
borderWidth:0,
borderColor:'#000',
tooltipFormat:new SPFormat('<span style="color: {{color}}">&#9679;</span> {{value}} ({{percent.1}}%)')},
box:{
raw:false,
boxLineColor:'black',
boxFillColor:'#cdf',
whiskerColor:'black',
outlierLineColor:'#333',
outlierFillColor:'white',
medianColor:'red',
showOutliers:true,
outlierIQR:1.5,
spotRadius:1.5,
target:undefined,
targetColor:'#4a2',
chartRangeMax:undefined,
chartRangeMin:undefined,
tooltipFormat:new SPFormat('{{field:fields}}: {{value}}'),
tooltipValueLookups:{fields:{lq:'Lower Quartile',med:'Median',
uq:'Upper Quartile',lo:'Left Outlier',ro:'Right Outlier',
lw:'Left Whisker',rw:'Right Whisker'}}}};};
createClass=function(){
var Class,args;
Class=function(){
this.init.apply(this,arguments);};
if(arguments.length>1){
if(arguments[0]){
Class.prototype=$.extend(new arguments[0](),arguments[arguments.length-1]);
Class._super=arguments[0].prototype;}else{
Class.prototype=arguments[arguments.length-1];}
if(arguments.length>2){
args=Array.prototype.slice.call(arguments,1,-1);
args.unshift(Class.prototype);
$.extend.apply($,args);}}else{
Class.prototype=arguments[0];}
Class.prototype.cls=Class;
return Class;};
$.fn.SPFormat=SPFormat=createClass({
fre:/\{\{([\w.]+?)(:(.+?))?\}\}/g,
precre:/(\w+)\.(\d+)/,
init:function(format,fclass){
this.format=format;
this.fclass=fclass;},
render:function(fieldset,lookups,options){
var self=this,
fields=fieldset,
match,token,lookupkey,fieldvalue,prec;
return this.format.replace(this.fre,function(){
var lookup;
token=arguments[1];
lookupkey=arguments[3];
match=self.precre.exec(token);
if(match){
prec=match[2];
token=match[1];}else{
prec=false;}
fieldvalue=fields[token];
if(fieldvalue===undefined){
return'';}
if(lookupkey&&lookups&&lookups[lookupkey]){
lookup=lookups[lookupkey];
if(lookup.get){
return lookups[lookupkey].get(fieldvalue)||fieldvalue;}else{
return lookups[lookupkey][fieldvalue]||fieldvalue;}}
if(isNumber(fieldvalue)){
if(options.get('numberFormatter')){
fieldvalue=options.get('numberFormatter')(fieldvalue);}else{
fieldvalue=formatNumber(fieldvalue,prec,
options.get('numberDigitGroupCount'),
options.get('numberDigitGroupSep'),
options.get('numberDecimalMark'));}}
return fieldvalue;});}});
clipval=function(val,min,max){
if(val<min){
return min;}
if(val>max){
return max;}
return val;};
quartile=function(values,q){
var vl;
if(q===2){
vl=Math.floor(values.length/2);
return values.length%2?values[vl]:(values[vl]+values[vl+1])/2;}else{
vl=Math.floor(values.length/4);
return values.length%2?(values[vl*q]+values[vl*q+1])/2:values[vl*q];}};
normalizeValue=function(val){
var nf;
switch(val){
case'undefined':
val=undefined;
break;
case'null':
val=null;
break;
case'true':
val=true;
break;
case'false':
val=false;
break;
default:
nf=parseFloat(val);
if(val==nf){
val=nf;}}
return val;};
normalizeValues=function(vals){
var i,result=[];
for(i=vals.length;i--;){
result[i]=normalizeValue(vals[i]);}
return result;};
remove=function(vals,filter){
var i,vl,result=[];
for(i=0,vl=vals.length;i<vl;i++){
if(vals[i]!==filter){
result.push(vals[i]);}}
return result;};
isNumber=function(num){
return!isNaN(parseFloat(num))&&isFinite(num);};
formatNumber=function(num,prec,groupsize,groupsep,decsep){
var p,i;
num=(prec===false?parseFloat(num).toString():num.toFixed(prec)).split('');
p=(p=$.inArray('.',num))<0?num.length:p;
if(p<num.length){
num[p]=decsep;}
for(i=p-groupsize;i>0;i-=groupsize){
num.splice(i,0,groupsep);}
return num.join('');};
all=function(val,arr,ignoreNull){
var i;
for(i=arr.length;i--;){
if(arr[i]!==val||(!ignoreNull&&val===null)){
return false;}}
return true;};
sum=function(vals){
var total=0,i;
for(i=vals.length;i--;){
total+=typeof vals[i]==='number'?vals[i]:0;}
return total;};
ensureArray=function(val){
return $.isArray(val)?val:[val];};
$.fn.simpledraw=function(width,height,useExisting,interact){
var target,mhandler;
if(useExisting&&(target=this.data('vcanvas'))){
return target;}
if(width===undefined){
width=$(this).innerWidth();}
if(height===undefined){
height=$(this).innerHeight();}
if($.browser.hasCanvas){
target=new VCanvas_canvas(width,height,this,interact);}else if($.browser.msie){
target=new VCanvas_vml(width,height,this);}else{
return false;}
mhandler=$(this).data('sphandler');
if(mhandler){
mhandler.registerCanvas(target);}
return target;};
$.fn.cleardraw=function(){
var target=this.data('vcanvas');
if(target){
target.reset();}};
RangeMap=createClass({
init:function(map){
var key,range,rangelist=[];
for(key in map){
if(map.hasOwnProperty(key)&&typeof key==='string'&&key.indexOf(':')>-1){
range=key.split(':');
range[0]=range[0].length===0?-Infinity:parseFloat(range[0]);
range[1]=range[1].length===0?Infinity:parseFloat(range[1]);
range[2]=map[key];
rangelist.push(range);}}
this.map=map;
this.rangelist=rangelist||false;},
get:function(value){
var rangelist=this.rangelist,
i,range,result;
if((result=this.map[value])!==undefined){
return result;}
if(rangelist){
for(i=rangelist.length;i--;){
range=rangelist[i];
if(range[0]<=value&&range[1]>=value){
return range[2];}}}
return undefined;}});
MouseHandler=createClass({
init:function(el,options){
var $el=$(el);
this.$el=$el;
this.options=options;
this.currentPageX=0;
this.currentPageY=0;
this.el=el;
this.splist=[];
this.tooltip=null;
this.over=false;
this.displayTooltips=!options.get('disableTooltips');
this.highlightEnabled=!options.get('disableHighlight');},
registerSparkline:function(sp){
this.splist.push(sp);},
registerCanvas:function(canvas){
var $canvas=$(canvas.canvas);
this.canvas=canvas;
this.$canvas=$canvas;
$canvas.mouseenter($.proxy(this.mouseenter,this));
$canvas.mouseleave($.proxy(this.mouseleave,this));
$canvas.click($.proxy(this.mouseclick,this));},
reset:function(){
this.splist=[];
if(this.tooltip){
this.tooltip.remove();
this.tooltip=undefined;}},
mouseclick:function(e){
var clickEvent=$.Event('sparklineClick');
clickEvent.originalEvent=e;
clickEvent.sparklines=this.splist;
this.$el.trigger(clickEvent);},
mouseenter:function(e){
$(document.body).unbind('mousemove.jqs');
$(document.body).bind('mousemove.jqs',$.proxy(this.mousemove,this));
this.over=true;
this.currentPageX=e.pageX;
this.currentPageY=e.pageY;
this.currentEl=e.target;
if(!this.tooltip&&this.displayTooltips){
this.tooltip=new Tooltip(this.options);
this.tooltip.updatePosition(e.pageX,e.pageY);}
this.updateDisplay();},
mouseleave:function(){
$(document.body).unbind('mousemove.jqs');
var splist=this.splist,
spcount=splist.length,
needsRefresh=false,
sp,i;
this.over=false;
this.currentEl=null;
if(this.tooltip){
this.tooltip.remove();
this.tooltip=null;}
for(i=0;i<spcount;i++){
sp=splist[i];
if(sp.clearRegionHighlight()){
needsRefresh=true;}}
if(needsRefresh){
this.canvas.render();}},
mousemove:function(e){
this.currentPageX=e.pageX;
this.currentPageY=e.pageY;
this.currentEl=e.target;
if(this.tooltip){
this.tooltip.updatePosition(e.pageX,e.pageY);}
this.updateDisplay();},
updateDisplay:function(){
var splist=this.splist,
spcount=splist.length,
needsRefresh=false,
offset=this.$canvas.offset(),
localX=this.currentPageX-offset.left,
localY=this.currentPageY-offset.top,
tooltiphtml,sp,i,result,changeEvent;
if(!this.over){
return;}
for(i=0;i<spcount;i++){
sp=splist[i];
result=sp.setRegionHighlight(this.currentEl,localX,localY);
if(result){
needsRefresh=true;}}
if(needsRefresh){
changeEvent=$.Event('sparklineRegionChange');
changeEvent.sparklines=this.splist;
this.$el.trigger(changeEvent);
if(this.tooltip){
tooltiphtml='';
for(i=0;i<spcount;i++){
sp=splist[i];
tooltiphtml+=sp.getCurrentRegionTooltip();}
this.tooltip.setContent(tooltiphtml);}
if(!this.disableHighlight){
this.canvas.render();}}
if(result===null){
this.mouseleave();}},
refreshSparklines:function(){
var splist=this.splist,
spcount=splist.length,
sp,i;
this.$el.cleardraw();
for(i=0;i<spcount;i++){
sp=splist[i];
sp.render(true);}}});
Tooltip=createClass({
defaultStyle:'position: absolute;'+'left: 0px;'+'top: 0px;'+'visibility: hidden;'+'background: rgb(0, 0, 0) transparent;'+'background-color: rgba(0,0,0,0.6);'+'filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);'+'-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)";'+'color: white;'+'font: 10px arial, san serif;'+'text-align: left;'+'white-space: nowrap;'+'padding: 5px;'+'border: 1px solid white;',
sizeStyle:'position: static !important;'+'display: block !important;'+'visibility: hidden !important;'+'float: left !important;',
init:function(options){
var tooltipClassname=options.get('tooltipClassname'),
tooltipStyle,sizetipStyle,offset;
if(tooltipClassname){
tooltipStyle='';
sizetipStyle=this.sizeStyle;}else{
tooltipStyle=this.defaultStyle;
sizetipStyle=this.sizeStyle+this.defaultStyle;
tooltipClassname='';}
this.container=options.get('tooltipContainer')||document.body;
this.tooltipOffsetX=options.get('tooltipOffsetX',10);
this.tooltipOffsetY=options.get('tooltipOffsetY',12);
$('#jqssizetip').remove();
$('#jqstooltip').remove();
this.sizetip=$('<div/>',{
id:'jqssizetip',
style:sizetipStyle,'class':tooltipClassname});
this.tooltip=$('<div/>',{
id:'jqstooltip',
style:tooltipStyle,'class':tooltipClassname}).appendTo(this.container);
offset=this.tooltip.offset();
this.offsetLeft=offset.left;
this.offsetTop=offset.top;
this.hidden=true;
$(window).unbind('resize.jqs scroll.jqs');
$(window).bind('resize.jqs scroll.jqs',$.proxy(this.updateWindowDims,this));
this.updateWindowDims();},
updateWindowDims:function(){
this.scrollTop=$(window).scrollTop();
this.scrollLeft=$(window).scrollLeft();
this.scrollRight=this.scrollLeft+$(window).width();
this.updatePosition();},
getSize:function(content){
this.sizetip.html(content).appendTo(this.container);
this.width=this.sizetip.width()+1;
this.height=this.sizetip.height();
this.sizetip.remove();},
setContent:function(content){
if(!content){
this.tooltip.css('visibility','hidden');
this.hidden=true;
return;}
this.getSize(content);
this.tooltip.html(content).css({'width':this.width,'height':this.height,'visibility':'visible'});
if(this.hidden){
this.hidden=false;
this.updatePosition();}},
updatePosition:function(x,y){
if(x===undefined){
if(this.mousex===undefined){
return;}
x=this.mousex-this.offsetLeft;
y=this.mousey-this.offsetTop;}else{
this.mousex=x=x-this.offsetLeft;
this.mousey=y=y-this.offsetTop;}
if(!this.height||!this.width||this.hidden){
return;}
y-=this.height+this.tooltipOffsetY;
x+=this.tooltipOffsetX;
if(y<this.scrollTop){
y=this.scrollTop;}
if(x<this.scrollLeft){
x=this.scrollLeft;}else if(x+this.width>this.scrollRight){
x=this.scrollRight-this.width;}
this.tooltip.css({'left':x,'top':y});},
remove:function(){
this.tooltip.remove();
this.sizetip.remove();
this.sizetip=this.tooltip=undefined;
$(window).unbind('resize.jqs scroll.jqs');}});
pending=[];
$.fn.sparkline=function(userValues,userOptions){
return this.each(function(){
var options=new $.fn.sparkline.options(this,userOptions),
$this=$(this),
render;
render=function(){
var values,width,height,tmp,mhandler,sp,vals;
if(userValues==='html'||userValues===undefined){
vals=this.getAttribute(options.get('tagValuesAttribute'));
if(vals===undefined||vals===null){
vals=$this.html();}
values=vals.replace(/(^\s*<!--)|(-->\s*$)|\s+/g,'').split(',');}else{
values=userValues;}
width=options.get('width')==='auto'?values.length*options.get('defaultPixelsPerValue'):options.get('width');
if(options.get('height')==='auto'){
if(!options.get('composite')||!$.data(this,'vcanvas')){
tmp=document.createElement('span');
tmp.innerHTML='a';
$this.html(tmp);
height=$(tmp).innerHeight();
$(tmp).remove();
tmp=null;}}else{
height=options.get('height');}
if(!options.get('disableInteraction')){
mhandler=$.data(this,'sphandler');
if(!mhandler){
mhandler=new MouseHandler(this,options);
$.data(this,'sphandler',mhandler);}else if(!options.get('composite')){
mhandler.reset();}}else{
mhandler=false;}
if(options.get('composite')&&!$.data(this,'vcanvas')){
if(!$.data(this,'errnotify')){
alert('Attempted to attach a composite sparkline to an element with no existing sparkline');
$.data(this,'errnotify',true);}
return;}
sp=new $.fn.sparkline[options.get('type')](this,values,options,width,height);
if(mhandler){
mhandler.registerSparkline(sp);}
sp.render();};
if(($(this).html()&&!options.get('disableHiddenCheck')&&$(this).is(':hidden'))||($.fn.jquery<'1.3.0'&&$(this).parents().is(':hidden'))||!$(this).parents('body').length){
pending.push([this,render]);}else{
render.call(this);}});};
$.fn.sparkline.defaults=getDefaults();
$.sparkline_display_visible=function(){
var el,i;
for(i=pending.length-1;i>=0;i--){
el=pending[i][0];
if($(el).is(':visible')&&!$(el).parents().is(':hidden')){
pending[i][1].call(el);
pending.splice(i,1);}}};
$.fn.sparkline.options=createClass({
init:function(tag,userOptions){
var extendedOptions,defaults,base,tagOptionType;
this.userOptions=userOptions=userOptions||{};
this.tag=tag;
this.tagValCache={};
defaults=$.fn.sparkline.defaults;
base=defaults.common;
this.tagOptionsPrefix=userOptions.enableTagOptions&&(userOptions.tagOptionsPrefix||base.tagOptionsPrefix);
tagOptionType=this.getTagSetting('type');
if(tagOptionType===UNSET_OPTION){
extendedOptions=defaults[userOptions.type||base.type];}else{
extendedOptions=defaults[tagOptionType];}
this.mergedOptions=$.extend({},base,extendedOptions,userOptions);},
getTagSetting:function(key){
var prefix=this.tagOptionsPrefix,
val,i,pairs,keyval;
if(prefix===false||prefix===undefined){
return UNSET_OPTION;}
if(this.tagValCache.hasOwnProperty(key)){
val=this.tagValCache.key;}else{
val=this.tag.getAttribute(prefix+key);
if(val===undefined||val===null){
val=UNSET_OPTION;}else if(val.substr(0,1)==='['){
val=val.substr(1,val.length-2).split(',');
for(i=val.length;i--;){
val[i]=normalizeValue(val[i].replace(/(^\s*)|(\s*$)/g,''));}}else if(val.substr(0,1)==='{'){
pairs=val.substr(1,val.length-2).split(',');
val={};
for(i=pairs.length;i--;){
keyval=pairs[i].split(':',2);
val[keyval[0].replace(/(^\s*)|(\s*$)/g,'')]=normalizeValue(keyval[1].replace(/(^\s*)|(\s*$)/g,''));}}else{
val=normalizeValue(val);}
this.tagValCache.key=val;}
return val;},
get:function(key,defaultval){
var tagOption=this.getTagSetting(key),
result;
if(tagOption!==UNSET_OPTION){
return tagOption;}
return(result=this.mergedOptions[key])===undefined?defaultval:result;}});
$.fn.sparkline._base=createClass({
disabled:false,
init:function(el,values,options,width,height){
this.el=el;
this.$el=$(el);
this.values=values;
this.options=options;
this.width=width;
this.height=height;
this.currentRegion=undefined;},
initTarget:function(){
var interactive=!this.options.get('disableInteraction');
if(!(this.target=this.$el.simpledraw(this.width,this.height,this.options.get('composite'),interactive))){
this.disabled=true;}else{
this.canvasWidth=this.target.pixelWidth;
this.canvasHeight=this.target.pixelHeight;}},
render:function(){
if(this.disabled){
this.el.innerHTML='';
return false;}
return true;},
getRegion:function(x,y){},
setRegionHighlight:function(el,x,y){
var currentRegion=this.currentRegion,
highlightEnabled=!this.options.get('disableHighlight'),
newRegion;
if(x>this.canvasWidth||y>this.canvasHeight||x<0||y<0){
return null;}
newRegion=this.getRegion(el,x,y);
if(currentRegion!==newRegion){
if(currentRegion!==undefined&&highlightEnabled){
this.removeHighlight();}
this.currentRegion=newRegion;
if(newRegion!==undefined&&highlightEnabled){
this.renderHighlight();}
return true;}
return false;},
clearRegionHighlight:function(){
if(this.currentRegion!==undefined){
this.removeHighlight();
this.currentRegion=undefined;
return true;}
return false;},
renderHighlight:function(){
this.changeHighlight(true);},
removeHighlight:function(){
this.changeHighlight(false);},
changeHighlight:function(highlight){},
getCurrentRegionTooltip:function(){
var options=this.options,
header='',
entries=[],
fields,formats,formatlen,fclass,text,i,
formatter,format,fieldlen,j;
if(this.currentRegion===undefined){
return'';}
fields=this.getCurrentRegionFields();
formatter=options.get('tooltipFormatter');
if(formatter){
return formatter(this,options,fields);}
if(options.get('tooltipChartTitle')){
header+='<div class="jqs jqstitle">'+options.get('tooltipChartTitle')+'</div>\n';}
formats=this.options.get('tooltipFormat');
if(!formats){
return'';}
if(!$.isArray(formats)){
formats=[formats];}
if(!$.isArray(fields)){
fields=[fields];}
formatlen=formats.length;
fieldlen=fields.length;
for(i=0;i<formatlen;i++){
format=formats[i];
if(typeof format==='string'){
format=new SPFormat(format);}
fclass=format.fclass||'jqsfield';
for(j=0;j<fieldlen;j++){
if(!fields[j].isNull||!options.get('tooltipSkipNull')){
$.extend(fields[j],{
prefix:options.get('tooltipPrefix'),
suffix:options.get('tooltipSuffix')});
text=format.render(fields[j],options.get('tooltipValueLookups'),options);
entries.push('<div class="'+fclass+'">'+text+'</div>');}}}
if(entries.length){
return header+entries.join('\n');}
return'';},
getCurrentRegionFields:function(){},
calcHighlightColor:function(color,options){
var highlightColor=options.get('highlightColor'),
lighten=options.get('highlightLighten'),
parse,mult,rgbnew,i;
if(highlightColor){
return highlightColor;}
if(lighten){
parse=/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(color)||/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color);
if(parse){
rgbnew=[];
mult=color.length===4?16:1;
for(i=0;i<3;i++){
rgbnew[i]=clipval(Math.round(parseInt(parse[i+1],16)*mult*lighten),0,255);}
return'rgb('+rgbnew.join(',')+')';}}
return color;}});
barHighlightMixin={
changeHighlight:function(highlight){
var currentRegion=this.currentRegion,
target=this.target,
shapeids=this.regionShapes[currentRegion],
newShapes;
if(shapeids){
newShapes=this.renderRegion(currentRegion,highlight);
if($.isArray(newShapes)||$.isArray(shapeids)){
target.replaceWithShapes(shapeids,newShapes);
this.regionShapes[currentRegion]=$.map(newShapes,function(newShape){
return newShape.id;});}else{
target.replaceWithShape(shapeids,newShapes);
this.regionShapes[currentRegion]=newShapes.id;}}},
render:function(){
var values=this.values,
target=this.target,
regionShapes=this.regionShapes,
shapes,ids,i,j;
if(!this.cls._super.render.call(this)){
return;}
for(i=values.length;i--;){
shapes=this.renderRegion(i);
if(shapes){
if($.isArray(shapes)){
ids=[];
for(j=shapes.length;j--;){
shapes[j].append();
ids.push(shapes[j].id);}
regionShapes[i]=ids;}else{
shapes.append();
regionShapes[i]=shapes.id;}}else{
regionShapes[i]=null;}}
target.render();}};
$.fn.sparkline.line=line=createClass($.fn.sparkline._base,{
type:'line',
init:function(el,values,options,width,height){
line._super.init.call(this,el,values,options,width,height);
this.vertices=[];
this.regionMap=[];
this.xvalues=[];
this.yvalues=[];
this.yminmax=[];
this.hightlightSpotId=null;
this.lastShapeId=null;
this.initTarget();},
getRegion:function(el,x,y){
var i,
regionMap=this.regionMap;
for(i=regionMap.length;i--;){
if(regionMap[i]!==null&&x>=regionMap[i][0]&&x<=regionMap[i][1]){
return regionMap[i][2];}}
return undefined;},
getCurrentRegionFields:function(){
var currentRegion=this.currentRegion;
return{
isNull:this.yvalues[currentRegion]===null,
x:this.xvalues[currentRegion],
y:this.yvalues[currentRegion],
color:this.options.get('lineColor'),
fillColor:this.options.get('fillColor'),
offset:currentRegion};},
renderHighlight:function(){
var currentRegion=this.currentRegion,
target=this.target,
vertex=this.vertices[currentRegion],
options=this.options,
spotRadius=options.get('spotRadius'),
highlightSpotColor=options.get('highlightSpotColor'),
highlightLineColor=options.get('highlightLineColor'),
highlightSpot,highlightLine;
if(!vertex){
return;}
if(spotRadius&&highlightSpotColor){
highlightSpot=target.drawCircle(vertex[0],vertex[1],
spotRadius,undefined,highlightSpotColor);
this.highlightSpotId=highlightSpot.id;
target.insertAfterShape(this.lastShapeId,highlightSpot);}
if(highlightLineColor){
highlightLine=target.drawLine(vertex[0],this.canvasTop,vertex[0],
this.canvasTop+this.canvasHeight,highlightLineColor);
this.highlightLineId=highlightLine.id;
target.insertAfterShape(this.lastShapeId,highlightLine);}},
removeHighlight:function(){
var target=this.target;
if(this.highlightSpotId){
target.removeShapeId(this.highlightSpotId);
this.highlightSpotId=null;}
if(this.highlightLineId){
target.removeShapeId(this.highlightLineId);
this.highlightLineId=null;}},
scanValues:function(){
var values=this.values,
valcount=values.length,
xvalues=this.xvalues,
yvalues=this.yvalues,
yminmax=this.yminmax,
i,val,isStr,isArray,sp;
for(i=0;i<valcount;i++){
val=values[i];
isStr=typeof(values[i])==='string';
isArray=typeof(values[i])==='object'&&values[i]instanceof Array;
sp=isStr&&values[i].split(':');
if(isStr&&sp.length===2){
xvalues.push(Number(sp[0]));
yvalues.push(Number(sp[1]));
yminmax.push(Number(sp[1]));}else if(isArray){
xvalues.push(val[0]);
yvalues.push(val[1]);
yminmax.push(val[1]);}else{
xvalues.push(i);
if(values[i]===null||values[i]==='null'){
yvalues.push(null);}else{
yvalues.push(Number(val));
yminmax.push(Number(val));}}}
if(this.options.get('xvalues')){
xvalues=this.options.get('xvalues');}
this.maxy=this.maxyorg=Math.max.apply(Math,yminmax);
this.miny=this.minyorg=Math.min.apply(Math,yminmax);
this.maxx=Math.max.apply(Math,xvalues);
this.minx=Math.min.apply(Math,xvalues);
this.xvalues=xvalues;
this.yvalues=yvalues;
this.yminmax=yminmax;},
processRangeOptions:function(){
var options=this.options,
normalRangeMin=options.get('normalRangeMin'),
normalRangeMax=options.get('normalRangeMax');
if(normalRangeMin!==undefined){
if(normalRangeMin<this.miny){
this.miny=normalRangeMin;}
if(normalRangeMax>this.maxy){
this.maxy=normalRangeMax;}}
if(options.get('chartRangeMin')!==undefined&&(options.get('chartRangeClip')||options.get('chartRangeMin')<this.miny)){
this.miny=options.get('chartRangeMin');}
if(options.get('chartRangeMax')!==undefined&&(options.get('chartRangeClip')||options.get('chartRangeMax')>this.maxy)){
this.maxy=options.get('chartRangeMax');}
if(options.get('chartRangeMinX')!==undefined&&(options.get('chartRangeClipX')||options.get('chartRangeMinX')<this.minx)){
this.minx=options.get('chartRangeMinX');}
if(options.get('chartRangeMaxX')!==undefined&&(options.get('chartRangeClipX')||options.get('chartRangeMaxX')>this.maxx)){
this.maxx=options.get('chartRangeMaxX');}},
drawNormalRange:function(canvasLeft,canvasTop,canvasHeight,canvasWidth,rangey){
var normalRangeMin=this.options.get('normalRangeMin'),
normalRangeMax=this.options.get('normalRangeMax'),
ytop=canvasTop+Math.round(canvasHeight-(canvasHeight*((normalRangeMax-this.miny)/rangey))),
height=Math.round((canvasHeight*(normalRangeMax-normalRangeMin))/rangey);
this.target.drawRect(canvasLeft,ytop,canvasWidth,height,undefined,this.options.get('normalRangeColor')).append();},
render:function(){
var options=this.options,
target=this.target,
canvasWidth=this.canvasWidth,
canvasHeight=this.canvasHeight,
vertices=this.vertices,
spotRadius=options.get('spotRadius'),
regionMap=this.regionMap,
xvalues=this.xvalues,
yvalues=this.yvalues,
rangex,rangey,yvallast,
canvasTop,canvasLeft,
vertex,path,paths,x,y,xnext,xpos,xposnext,
last,next,yvalcount,lineShapes,fillShapes,plen,
valueSpots,color,i;
if(!line._super.render.call(this)){
return;}
this.scanValues();
this.processRangeOptions();
if(!this.yminmax.length||this.yvalues.length<2){
return;}
canvasTop=canvasLeft=0;
rangex=this.maxx-this.minx===0?1:this.maxx-this.minx;
rangey=this.maxy-this.miny===0?1:this.maxy-this.miny;
yvallast=this.yvalues.length-1;
if(spotRadius&&(canvasWidth<(spotRadius*4)||canvasHeight<(spotRadius*4))){
spotRadius=0;}
if(spotRadius){
if(options.get('minSpotColor')||(options.get('spotColor')&&yvalues[yvallast]===this.miny)){
canvasHeight-=Math.ceil(spotRadius);}
if(options.get('maxSpotColor')||(options.get('spotColor')&&yvalues[yvallast]===this.maxy)){
canvasHeight-=Math.ceil(spotRadius);
canvasTop+=Math.ceil(spotRadius);}
if((options.get('minSpotColor')||options.get('maxSpotColor'))&&(yvalues[0]===this.miny||yvalues[0]===this.maxy)){
canvasLeft+=Math.ceil(spotRadius);
canvasWidth-=Math.ceil(spotRadius);}
if(options.get('spotColor')||
(options.get('minSpotColor')||options.get('maxSpotColor')&&
(yvalues[yvallast]===this.miny||yvalues[yvallast]===this.maxy))){
canvasWidth-=Math.ceil(spotRadius);}}
canvasHeight--;
if(options.get('normalRangeMin')&&!options.get('drawNormalOnTop')){
this.drawNormalRange(canvasLeft,canvasTop,canvasHeight,canvasWidth,rangey);}
path=[];
paths=[path];
last=next=null;
yvalcount=yvalues.length;
for(i=0;i<yvalcount;i++){
x=xvalues[i];
xnext=xvalues[i+1];
y=yvalues[i];
xpos=canvasLeft+Math.round((x-this.minx)*(canvasWidth/rangex));
xposnext=i<yvalcount-1?canvasLeft+Math.round((xnext-this.minx)*(canvasWidth/rangex)):canvasWidth;
next=xpos+((xposnext-xpos)/2);
regionMap[i]=[last||0,next,i];
last=next;
if(y===null){
if(i){
if(yvalues[i-1]!==null){
path=[];
paths.push(path);
vertices.push(null);}}}else{
if(y<this.miny){
y=this.miny;}
if(y>this.maxy){
y=this.maxy;}
if(!path.length){
path.push([xpos,canvasTop+canvasHeight]);}
vertex=[xpos,canvasTop+Math.round(canvasHeight-(canvasHeight*((y-this.miny)/rangey)))];
path.push(vertex);
vertices.push(vertex);}}
lineShapes=[];
fillShapes=[];
plen=paths.length;
for(i=0;i<plen;i++){
path=paths[i];
if(path.length){
if(options.get('fillColor')){
path.push([path[path.length-1][0],(canvasTop+canvasHeight)]);
fillShapes.push(path.slice(0));
path.pop();}
if(path.length>2){
path[0]=[path[0][0],path[1][1]];}
lineShapes.push(path);}}
plen=fillShapes.length;
for(i=0;i<plen;i++){
target.drawShape(fillShapes[i],
options.get('fillColor'),options.get('fillColor')).append();}
if(options.get('normalRangeMin')&&options.get('drawNormalOnTop')){
this.drawNormalRange(canvasLeft,canvasTop,canvasHeight,canvasWidth,rangey);}
plen=lineShapes.length;
for(i=0;i<plen;i++){
target.drawShape(lineShapes[i],options.get('lineColor'),undefined,
options.get('lineWidth')).append();}
if(spotRadius&&options.get('valueSpots')){
valueSpots=options.get('valueSpots');
if(valueSpots.get===undefined){
valueSpots=new RangeMap(valueSpots);}
for(i=0;i<yvalcount;i++){
color=valueSpots.get(yvalues[i]);
if(color){
target.drawCircle(canvasLeft+Math.round(xvalues[i]*(canvasWidth/rangex)),
canvasTop+Math.round(canvasHeight-(canvasHeight*((yvalues[i]-this.miny)/rangey))),
spotRadius,undefined,
color).append();}}}
if(spotRadius&&options.get('spotColor')){
target.drawCircle(canvasLeft+Math.round(xvalues[xvalues.length-1]*(canvasWidth/rangex)),
canvasTop+Math.round(canvasHeight-(canvasHeight*((yvalues[yvallast]-this.miny)/rangey))),
spotRadius,undefined,
options.get('spotColor')).append();}
if(this.maxy!==this.minyorg){
if(spotRadius&&options.get('minSpotColor')){
x=xvalues[$.inArray(this.minyorg,yvalues)];
target.drawCircle(canvasLeft+Math.round((x-this.minx)*(canvasWidth/rangex)),
canvasTop+Math.round(canvasHeight-(canvasHeight*((this.minyorg-this.miny)/rangey))),
spotRadius,undefined,
options.get('minSpotColor')).append();}
if(spotRadius&&options.get('maxSpotColor')){
x=xvalues[$.inArray(this.maxyorg,yvalues)];
target.drawCircle(canvasLeft+Math.round((x-this.minx)*(canvasWidth/rangex)),
canvasTop+Math.round(canvasHeight-(canvasHeight*((this.maxyorg-this.miny)/rangey))),
spotRadius,undefined,
options.get('maxSpotColor')).append();}}
this.lastShapeId=target.getLastShapeId();
this.canvasTop=canvasTop;
target.render();}});
$.fn.sparkline.bar=bar=createClass($.fn.sparkline._base,barHighlightMixin,{
type:'bar',
init:function(el,values,options,width,height){
var barWidth=parseInt(options.get('barWidth'),10),
barSpacing=parseInt(options.get('barSpacing'),10),
chartRangeMin=options.get('chartRangeMin'),
chartRangeMax=options.get('chartRangeMax'),
chartRangeClip=options.get('chartRangeClip'),
stackMin=Infinity,
stackMax=-Infinity,
isStackString,groupMin,groupMax,stackRanges,
numValues,i,vlen,range,zeroAxis,xaxisOffset,min,max,clipMin,clipMax,
stacked,vlist,j,slen,svals,val,yoffset,yMaxCalc,canvasHeightEf;
bar._super.init.call(this,el,values,options,width,height);
for(i=0,vlen=values.length;i<vlen;i++){
val=values[i];
isStackString=typeof(val)==='string'&&val.indexOf(':')>-1;
if(isStackString||$.isArray(val)){
stacked=true;
if(isStackString){
val=values[i]=normalizeValues(val.split(':'));}
val=remove(val,null);
groupMin=Math.min.apply(Math,val);
groupMax=Math.max.apply(Math,val);
if(groupMin<stackMin){
stackMin=groupMin;}
if(groupMax>stackMax){
stackMax=groupMax;}}}
this.stacked=stacked;
this.regionShapes={};
this.barWidth=barWidth;
this.barSpacing=barSpacing;
this.totalBarWidth=barWidth+barSpacing;
this.width=width=(values.length*barWidth)+((values.length-1)*barSpacing);
this.initTarget();
if(chartRangeClip){
clipMin=chartRangeMin===undefined?-Infinity:chartRangeMin;
clipMax=chartRangeMax===undefined?Infinity:chartRangeMax;}
numValues=[];
stackRanges=stacked?[]:numValues;
var stackTotals=[];
var stackRangesNeg=[];
for(i=0,vlen=values.length;i<vlen;i++){
if(stacked){
vlist=values[i];
values[i]=svals=[];
stackTotals[i]=0;
stackRanges[i]=stackRangesNeg[i]=0;
for(j=0,slen=vlist.length;j<slen;j++){
val=svals[j]=chartRangeClip?clipval(vlist[j],clipMin,clipMax):vlist[j];
if(val!==null){
if(val>0){
stackTotals[i]+=val;}
if(stackMin<0&&stackMax>0){
if(val<0){
stackRangesNeg[i]+=Math.abs(val);}else{
stackRanges[i]+=val;}}else{
stackRanges[i]+=Math.abs(val-(val<0?stackMax:stackMin));}
numValues.push(val);}}}else{
val=chartRangeClip?clipval(values[i],clipMin,clipMax):values[i];
val=values[i]=normalizeValue(val);
if(val!==null){
numValues.push(val);}}}
this.max=max=Math.max.apply(Math,numValues);
this.min=min=Math.min.apply(Math,numValues);
this.stackMax=stackMax=stacked?Math.max.apply(Math,stackTotals):max;
this.stackMin=stackMin=stacked?Math.min.apply(Math,numValues):min;
if(options.get('chartRangeMin')!==undefined&&(options.get('chartRangeClip')||options.get('chartRangeMin')<min)){
min=options.get('chartRangeMin');}
if(options.get('chartRangeMax')!==undefined&&(options.get('chartRangeClip')||options.get('chartRangeMax')>max)){
max=options.get('chartRangeMax');}
this.zeroAxis=zeroAxis=options.get('zeroAxis',true);
if(min<=0&&max>=0&&zeroAxis){
xaxisOffset=0;}else if(min>0){
xaxisOffset=min;}else{
xaxisOffset=max;}
this.xaxisOffset=xaxisOffset;
range=stacked?(Math.max.apply(Math,stackRanges)+Math.max.apply(Math,stackRangesNeg)):max-min;
this.canvasHeightEf=(zeroAxis&&min<0)?this.canvasHeight-2:this.canvasHeight-1;
if(min<xaxisOffset){
yMaxCalc=(stacked&&max>=0)?stackMax:max;
yoffset=(yMaxCalc-xaxisOffset)/range*this.canvasHeight;
if(yoffset!==Math.ceil(yoffset)){
this.canvasHeightEf-=2;
yoffset=Math.ceil(yoffset);}}else{
yoffset=this.canvasHeight;}
this.yoffset=yoffset;
if($.isArray(options.get('colorMap'))){
this.colorMapByIndex=options.get('colorMap');
this.colorMapByValue=null;}else{
this.colorMapByIndex=null;
this.colorMapByValue=options.get('colorMap');
if(this.colorMapByValue&&this.colorMapByValue.get===undefined){
this.colorMapByValue=new RangeMap(this.colorMapByValue);}}
this.range=range;},
getRegion:function(el,x,y){
var result=Math.floor(x/this.totalBarWidth);
return(result<0||result>=this.values.length)?undefined:result;},
getCurrentRegionFields:function(){
var currentRegion=this.currentRegion,
values=ensureArray(this.values[currentRegion]),
result=[],
value,i;
for(i=values.length;i--;){
value=values[i];
result.push({
isNull:value===null,
value:value,
color:this.calcColor(i,value,currentRegion),
offset:currentRegion});}
return result;},
calcColor:function(stacknum,value,valuenum){
var colorMapByIndex=this.colorMapByIndex,
colorMapByValue=this.colorMapByValue,
options=this.options,
color,newColor;
if(this.stacked){
color=options.get('stackedBarColor');}else{
color=(value<0)?options.get('negBarColor'):options.get('barColor');}
if(value===0&&options.get('zeroColor')!==undefined){
color=options.get('zeroColor');}
if(colorMapByValue&&(newColor=colorMapByValue.get(value))){
color=newColor;}else if(colorMapByIndex&&colorMapByIndex.length>valuenum){
color=colorMapByIndex[valuenum];}
return $.isArray(color)?color[stacknum%color.length]:color;},
renderRegion:function(valuenum,highlight){
var vals=this.values[valuenum],
options=this.options,
xaxisOffset=this.xaxisOffset,
result=[],
range=this.range,
stacked=this.stacked,
target=this.target,
x=valuenum*this.totalBarWidth,
canvasHeightEf=this.canvasHeightEf,
yoffset=this.yoffset,
y,height,color,isNull,yoffsetNeg,i,valcount,val,minPlotted,allMin;
vals=$.isArray(vals)?vals:[vals];
valcount=vals.length;
val=vals[0];
isNull=all(null,vals);
allMin=all(xaxisOffset,vals,true);
if(isNull){
if(options.get('nullColor')){
color=highlight?options.get('nullColor'):this.calcHighlightColor(options.get('nullColor'),options);
y=(yoffset>0)?yoffset-1:yoffset;
return target.drawRect(x,y,this.barWidth-1,0,color,color);}else{
return undefined;}}
yoffsetNeg=yoffset;
for(i=0;i<valcount;i++){
val=vals[i];
if(stacked&&val===xaxisOffset){
if(!allMin||minPlotted){
continue;}
minPlotted=true;}
if(range>0){
height=Math.floor(canvasHeightEf*((Math.abs(val-xaxisOffset)/range)))+1;}else{
height=1;}
if(val<xaxisOffset||(val===xaxisOffset&&yoffset===0)){
y=yoffsetNeg;
yoffsetNeg+=height;}else{
y=yoffset-height;
yoffset-=height;}
color=this.calcColor(i,val,valuenum);
if(highlight){
color=this.calcHighlightColor(color,options);}
result.push(target.drawRect(x,y,this.barWidth-1,height-1,color,color));}
if(result.length===1){
return result[0];}
return result;}});
$.fn.sparkline.tristate=tristate=createClass($.fn.sparkline._base,barHighlightMixin,{
type:'tristate',
init:function(el,values,options,width,height){
var barWidth=parseInt(options.get('barWidth'),10),
barSpacing=parseInt(options.get('barSpacing'),10);
tristate._super.init.call(this,el,values,options,width,height);
this.regionShapes={};
this.barWidth=barWidth;
this.barSpacing=barSpacing;
this.totalBarWidth=barWidth+barSpacing;
this.values=$.map(values,Number);
this.width=width=(values.length*barWidth)+((values.length-1)*barSpacing);
if($.isArray(options.get('colorMap'))){
this.colorMapByIndex=options.get('colorMap');
this.colorMapByValue=null;}else{
this.colorMapByIndex=null;
this.colorMapByValue=options.get('colorMap');
if(this.colorMapByValue&&this.colorMapByValue.get===undefined){
this.colorMapByValue=new RangeMap(this.colorMapByValue);}}
this.initTarget();},
getRegion:function(el,x,y){
return Math.floor(x/this.totalBarWidth);},
getCurrentRegionFields:function(){
var currentRegion=this.currentRegion;
return{
isNull:this.values[currentRegion]===undefined,
value:this.values[currentRegion],
color:this.calcColor(this.values[currentRegion],currentRegion),
offset:currentRegion};},
calcColor:function(value,valuenum){
var values=this.values,
options=this.options,
colorMapByIndex=this.colorMapByIndex,
colorMapByValue=this.colorMapByValue,
color,newColor;
if(colorMapByValue&&(newColor=colorMapByValue.get(value))){
color=newColor;}else if(colorMapByIndex&&colorMapByIndex.length>valuenum){
color=colorMapByIndex[valuenum];}else if(values[valuenum]<0){
color=options.get('negBarColor');}else if(values[valuenum]>0){
color=options.get('posBarColor');}else{
color=options.get('zeroBarColor');}
return color;},
renderRegion:function(valuenum,highlight){
var values=this.values,
options=this.options,
target=this.target,
canvasHeight,height,halfHeight,
x,y,color;
canvasHeight=target.pixelHeight;
halfHeight=Math.round(canvasHeight/2);
x=valuenum*this.totalBarWidth;
if(values[valuenum]<0){
y=halfHeight;
height=halfHeight-1;}else if(values[valuenum]>0){
y=0;
height=halfHeight-1;}else{
y=halfHeight-1;
height=2;}
color=this.calcColor(values[valuenum],valuenum);
if(color===null){
return;}
if(highlight){
color=this.calcHighlightColor(color,options);}
return target.drawRect(x,y,this.barWidth-1,height-1,color,color);}});
$.fn.sparkline.discrete=discrete=createClass($.fn.sparkline._base,barHighlightMixin,{
type:'discrete',
init:function(el,values,options,width,height){
discrete._super.init.call(this,el,values,options,width,height);
this.regionShapes={};
this.values=values=$.map(values,Number);
this.min=Math.min.apply(Math,values);
this.max=Math.max.apply(Math,values);
this.range=this.max-this.min;
this.width=width=options.get('width')==='auto'?values.length*2:this.width;
this.interval=Math.floor(width/values.length);
this.itemWidth=width/values.length;
if(options.get('chartRangeMin')!==undefined&&(options.get('chartRangeClip')||options.get('chartRangeMin')<this.min)){
this.min=options.get('chartRangeMin');}
if(options.get('chartRangeMax')!==undefined&&(options.get('chartRangeClip')||options.get('chartRangeMax')>this.max)){
this.max=options.get('chartRangeMax');}
this.initTarget();
if(this.target){
this.lineHeight=options.get('lineHeight')==='auto'?Math.round(this.canvasHeight*0.3):options.get('lineHeight');}},
getRegion:function(el,x,y){
return Math.floor(x/this.itemWidth);},
getCurrentRegionFields:function(){
var currentRegion=this.currentRegion;
return{
isNull:this.values[currentRegion]===undefined,
value:this.values[currentRegion],
offset:currentRegion};},
renderRegion:function(valuenum,highlight){
var values=this.values,
options=this.options,
min=this.min,
max=this.max,
range=this.range,
interval=this.interval,
target=this.target,
canvasHeight=this.canvasHeight,
lineHeight=this.lineHeight,
pheight=canvasHeight-lineHeight,
ytop,val,color,x;
val=clipval(values[valuenum],min,max);
x=valuenum*interval;
ytop=Math.round(pheight-pheight*((val-min)/range));
color=(options.get('thresholdColor')&&val<options.get('thresholdValue'))?options.get('thresholdColor'):options.get('lineColor');
if(highlight){
color=this.calcHighlightColor(color,options);}
return target.drawLine(x,ytop,x,ytop+lineHeight,color);}});
$.fn.sparkline.bullet=bullet=createClass($.fn.sparkline._base,{
type:'bullet',
init:function(el,values,options,width,height){
var min,max;
bullet._super.init.call(this,el,values,options,width,height);
values=$.map(values,Number);
min=Math.min.apply(Math,values);
max=Math.max.apply(Math,values);
if(options.get('base')===undefined){
min=min<0?min:0;}else{
min=options.get('base');}
this.min=min;
this.max=max;
this.range=max-min;
this.shapes={};
this.valueShapes={};
this.regiondata={};
this.width=width=options.get('width')==='auto'?'4.0em':width;
this.target=this.$el.simpledraw(width,height,options.get('composite'));
if(!values.length){
this.disabled=true;}
this.initTarget();},
getRegion:function(el,x,y){
var shapeid=this.target.getShapeAt(el,x,y);
return(shapeid!==undefined&&this.shapes[shapeid]!==undefined)?this.shapes[shapeid]:undefined;},
getCurrentRegionFields:function(){
var currentRegion=this.currentRegion;
return{
fieldkey:currentRegion.substr(0,1),
value:this.values[currentRegion.substr(1)],
region:currentRegion};},
changeHighlight:function(highlight){
var currentRegion=this.currentRegion,
shapeid=this.valueShapes[currentRegion],
shape;
delete this.shapes[shapeid];
switch(currentRegion.substr(0,1)){
case'r':
shape=this.renderRange(currentRegion.substr(1),highlight);
break;
case'p':
shape=this.renderPerformance(highlight);
break;
case't':
shape=this.renderTarget(highlight);
break;}
this.valueShapes[currentRegion]=shape.id;
this.shapes[shape.id]=currentRegion;
this.target.replaceWithShape(shapeid,shape);},
renderRange:function(rn,highlight){
var rangeval=this.values[rn],
rangewidth=Math.round(this.canvasWidth*((rangeval-this.min)/this.range)),
color=this.options.get('rangeColors')[rn-2];
if(highlight){
color=this.calcHighlightColor(color,this.options);}
return this.target.drawRect(0,0,rangewidth-1,this.canvasHeight-1,color,color);},
renderPerformance:function(highlight){
var perfval=this.values[1],
perfwidth=Math.round(this.canvasWidth*((perfval-this.min)/this.range)),
color=this.options.get('performanceColor');
if(highlight){
color=this.calcHighlightColor(color,this.options);}
return this.target.drawRect(0,Math.round(this.canvasHeight*0.3),perfwidth-1,
Math.round(this.canvasHeight*0.4)-1,color,color);},
renderTarget:function(highlight){
var targetval=this.values[0],
x=Math.round(this.canvasWidth*((targetval-this.min)/this.range)-(this.options.get('targetWidth')/2)),
targettop=Math.round(this.canvasHeight*0.10),
targetheight=this.canvasHeight-(targettop*2),
color=this.options.get('targetColor');
if(highlight){
color=this.calcHighlightColor(color,this.options);}
return this.target.drawRect(x,targettop,this.options.get('targetWidth')-1,targetheight-1,color,color);},
render:function(){
var vlen=this.values.length,
target=this.target,
i,shape;
if(!bullet._super.render.call(this)){
return;}
for(i=2;i<vlen;i++){
shape=this.renderRange(i).append();
this.shapes[shape.id]='r'+i;
this.valueShapes['r'+i]=shape.id;}
shape=this.renderPerformance().append();
this.shapes[shape.id]='p1';
this.valueShapes.p1=shape.id;
shape=this.renderTarget().append();
this.shapes[shape.id]='t0';
this.valueShapes.t0=shape.id;
target.render();}});
$.fn.sparkline.pie=pie=createClass($.fn.sparkline._base,{
type:'pie',
init:function(el,values,options,width,height){
var total=0,i;
pie._super.init.call(this,el,values,options,width,height);
this.shapes={};
this.valueShapes={};
this.values=values=$.map(values,Number);
if(options.get('width')==='auto'){
this.width=this.height;}
if(values.length>0){
for(i=values.length;i--;){
total+=values[i];}}
this.total=total;
this.initTarget();
this.radius=Math.floor(Math.min(this.canvasWidth,this.canvasHeight)/2);},
getRegion:function(el,x,y){
var shapeid=this.target.getShapeAt(el,x,y);
return(shapeid!==undefined&&this.shapes[shapeid]!==undefined)?this.shapes[shapeid]:undefined;},
getCurrentRegionFields:function(){
var currentRegion=this.currentRegion;
return{
isNull:this.values[currentRegion]===undefined,
value:this.values[currentRegion],
percent:this.values[currentRegion]/this.total*100,
color:this.options.get('sliceColors')[currentRegion%this.options.get('sliceColors').length],
offset:currentRegion};},
changeHighlight:function(highlight){
var currentRegion=this.currentRegion,
newslice=this.renderSlice(currentRegion,highlight),
shapeid=this.valueShapes[currentRegion];
delete this.shapes[shapeid];
this.target.replaceWithShape(shapeid,newslice);
this.valueShapes[currentRegion]=newslice.id;
this.shapes[newslice.id]=currentRegion;},
renderSlice:function(valuenum,highlight){
var target=this.target,
options=this.options,
radius=this.radius,
borderWidth=options.get('borderWidth'),
circle=2*Math.PI,
values=this.values,
total=this.total,
next=0,
start,end,i,vlen,color;
vlen=values.length;
for(i=0;i<vlen;i++){
start=next;
end=next;
if(total>0){
end=next+(circle*(values[i]/total));}
if(valuenum===i){
color=options.get('sliceColors')[i%options.get('sliceColors').length];
if(highlight){
color=this.calcHighlightColor(color,options);}
return target.drawPieSlice(radius,radius,radius-borderWidth,start,end,undefined,color);}
next=end;}},
render:function(){
var target=this.target,
values=this.values,
options=this.options,
radius=this.radius,
borderWidth=options.get('borderWidth'),
shape,i;
if(!pie._super.render.call(this)){
return;}
if(borderWidth){
target.drawCircle(radius,radius,Math.floor(radius-(borderWidth/2)),
options.get('borderColor'),undefined,borderWidth).append();}
for(i=values.length;i--;){
shape=this.renderSlice(i).append();
this.valueShapes[i]=shape.id;
this.shapes[shape.id]=i;}
target.render();}});
$.fn.sparkline.box=box=createClass($.fn.sparkline._base,{
type:'box',
init:function(el,values,options,width,height){
box._super.init.call(this,el,values,options,width,height);
this.values=$.map(values,Number);
this.width=options.get('width')==='auto'?'4.0em':width;
this.initTarget();
if(!this.values.length){
this.disabled=1;}},
getRegion:function(){
return 1;},
getCurrentRegionFields:function(){
var result=[
{field:'lq',value:this.quartiles[0]},
{field:'med',value:this.quartiles[1]},
{field:'uq',value:this.quartiles[2]},
{field:'lo',value:this.loutlier},
{field:'ro',value:this.loutlier}];
if(this.lwhisker!==undefined){
result.push({field:'lw',value:this.lwhisker});}
if(this.rwhisker!==undefined){
result.push({field:'lw',value:this.rwhisker});}
return result;},
render:function(){
var target=this.target,
values=this.values,
vlen=values.length,
options=this.options,
canvasWidth=this.canvasWidth,
canvasHeight=this.canvasHeight,
minValue=options.get('chartRangeMin')===undefined?Math.min.apply(Math,values):options.get('chartRangeMin'),
maxValue=options.get('chartRangeMax')===undefined?Math.max.apply(Math,values):options.get('chartRangeMax'),
canvasLeft=0,
lwhisker,loutlier,iqr,q1,q2,q3,rwhisker,routlier,i,
size,unitSize;
if(!box._super.render.call(this)){
return;}
if(options.get('raw')){
if(options.get('showOutliers')&&values.length>5){
loutlier=values[0];
lwhisker=values[1];
q1=values[2];
q2=values[3];
q3=values[4];
rwhisker=values[5];
routlier=values[6];}else{
lwhisker=values[0];
q1=values[1];
q2=values[2];
q3=values[3];
rwhisker=values[4];}}else{
values.sort(function(a,b){return a-b;});
q1=quartile(values,1);
q2=quartile(values,2);
q3=quartile(values,3);
iqr=q3-q1;
if(options.get('showOutliers')){
lwhisker=rwhisker=undefined;
for(i=0;i<vlen;i++){
if(lwhisker===undefined&&values[i]>q1-(iqr*options.get('outlierIQR'))){
lwhisker=values[i];}
if(values[i]<q3+(iqr*options.get('outlierIQR'))){
rwhisker=values[i];}}
loutlier=values[0];
routlier=values[vlen-1];}else{
lwhisker=values[0];
rwhisker=values[vlen-1];}}
this.quartiles=[q1,q2,q3];
this.lwhisker=lwhisker;
this.rwhisker=rwhisker;
this.loutlier=loutlier;
this.routlier=routlier;
unitSize=canvasWidth/(maxValue-minValue+1);
if(options.get('showOutliers')){
canvasLeft=Math.ceil(options.get('spotRadius'));
canvasWidth-=2*Math.ceil(options.get('spotRadius'));
unitSize=canvasWidth/(maxValue-minValue+1);
if(loutlier<lwhisker){
target.drawCircle((loutlier-minValue)*unitSize+canvasLeft,
canvasHeight/2,
options.get('spotRadius'),
options.get('outlierLineColor'),
options.get('outlierFillColor')).append();}
if(routlier>rwhisker){
target.drawCircle((routlier-minValue)*unitSize+canvasLeft,
canvasHeight/2,
options.get('spotRadius'),
options.get('outlierLineColor'),
options.get('outlierFillColor')).append();}}
target.drawRect(
Math.round((q1-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight*0.1),
Math.round((q3-q1)*unitSize),
Math.round(canvasHeight*0.8),
options.get('boxLineColor'),
options.get('boxFillColor')).append();
target.drawLine(
Math.round((lwhisker-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight/2),
Math.round((q1-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight/2),
options.get('lineColor')).append();
target.drawLine(
Math.round((lwhisker-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight/4),
Math.round((lwhisker-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight-canvasHeight/4),
options.get('whiskerColor')).append();
target.drawLine(Math.round((rwhisker-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight/2),
Math.round((q3-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight/2),
options.get('lineColor')).append();
target.drawLine(
Math.round((rwhisker-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight/4),
Math.round((rwhisker-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight-canvasHeight/4),
options.get('whiskerColor')).append();
target.drawLine(
Math.round((q2-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight*0.1),
Math.round((q2-minValue)*unitSize+canvasLeft),
Math.round(canvasHeight*0.9),
options.get('medianColor')).append();
if(options.get('target')){
size=Math.ceil(options.get('spotRadius'));
target.drawLine(
Math.round((options.get('target')-minValue)*unitSize+canvasLeft),
Math.round((canvasHeight/2)-size),
Math.round((options.get('target')-minValue)*unitSize+canvasLeft),
Math.round((canvasHeight/2)+size),
options.get('targetColor')).append();
target.drawLine(
Math.round((options.get('target')-minValue)*unitSize+canvasLeft-size),
Math.round(canvasHeight/2),
Math.round((options.get('target')-minValue)*unitSize+canvasLeft+size),
Math.round(canvasHeight/2),
options.get('targetColor')).append();}
target.render();}});
if($.browser.msie&&!document.namespaces.v){
document.namespaces.add('v','urn:schemas-microsoft-com:vml','#default#VML');}
if($.browser.hasCanvas===undefined){
$.browser.hasCanvas=document.createElement('canvas').getContext!==undefined;}
VShape=createClass({
init:function(target,id,type,args){
this.target=target;
this.id=id;
this.type=type;
this.args=args;},
append:function(){
this.target.appendShape(this);
return this;}});
VCanvas_base=createClass({
_pxregex:/(\d+)(px)?\s*$/i,
init:function(width,height,target){
if(!width){
return;}
this.width=width;
this.height=height;
this.target=target;
this.lastShapeId=null;
if(target[0]){
target=target[0];}
$.data(target,'vcanvas',this);},
drawLine:function(x1,y1,x2,y2,lineColor,lineWidth){
return this.drawShape([[x1,y1],[x2,y2]],lineColor,lineWidth);},
drawShape:function(path,lineColor,fillColor,lineWidth){
return this._genShape('Shape',[path,lineColor,fillColor,lineWidth]);},
drawCircle:function(x,y,radius,lineColor,fillColor,lineWidth){
return this._genShape('Circle',[x,y,radius,lineColor,fillColor,lineWidth]);},
drawPieSlice:function(x,y,radius,startAngle,endAngle,lineColor,fillColor){
return this._genShape('PieSlice',[x,y,radius,startAngle,endAngle,lineColor,fillColor]);},
drawRect:function(x,y,width,height,lineColor,fillColor){
return this._genShape('Rect',[x,y,width,height,lineColor,fillColor]);},
getElement:function(){
return this.canvas;},
getLastShapeId:function(){
return this.lastShapeId;},
reset:function(){
alert('reset not implemented');},
_insert:function(el,target){
$(target).html(el);},
_calculatePixelDims:function(width,height,canvas){
var match;
match=this._pxregex.exec(height);
if(match){
this.pixelHeight=match[1];}else{
this.pixelHeight=$(canvas).height();}
match=this._pxregex.exec(width);
if(match){
this.pixelWidth=match[1];}else{
this.pixelWidth=$(canvas).width();}},
_genShape:function(shapetype,shapeargs){
var id=shapeCount++;
shapeargs.unshift(id);
return new VShape(this,id,shapetype,shapeargs);},
appendShape:function(shape){
alert('appendShape not implemented');},
replaceWithShape:function(shapeid,shape){
alert('replaceWithShape not implemented');},
insertAfterShape:function(shapeid,shape){
alert('insertAfterShape not implemented');},
removeShapeId:function(shapeid){
alert('removeShapeId not implemented');},
getShapeAt:function(el,x,y){
alert('getShapeAt not implemented');},
render:function(){
alert('render not implemented');}});
VCanvas_canvas=createClass(VCanvas_base,{
init:function(width,height,target,interact){
VCanvas_canvas._super.init.call(this,width,height,target);
this.canvas=document.createElement('canvas');
if(target[0]){
target=target[0];}
$.data(target,'vcanvas',this);
$(this.canvas).css({display:'inline-block',width:width,height:height,verticalAlign:'top'});
this._insert(this.canvas,target);
this._calculatePixelDims(width,height,this.canvas);
this.canvas.width=this.pixelWidth;
this.canvas.height=this.pixelHeight;
this.interact=interact;
this.shapes={};
this.shapeseq=[];
this.currentTargetShapeId=undefined;
$(this.canvas).css({width:this.pixelWidth,height:this.pixelHeight});},
_getContext:function(lineColor,fillColor,lineWidth){
var context=this.canvas.getContext('2d');
if(lineColor!==undefined){
context.strokeStyle=lineColor;}
context.lineWidth=lineWidth===undefined?1:lineWidth;
if(fillColor!==undefined){
context.fillStyle=fillColor;}
return context;},
reset:function(){
var context=this._getContext();
context.clearRect(0,0,this.pixelWidth,this.pixelHeight);
this.shapes={};
this.shapeseq=[];
this.currentTargetShapeId=undefined;},
_drawShape:function(shapeid,path,lineColor,fillColor,lineWidth){
var context=this._getContext(lineColor,fillColor,lineWidth),
i,plen;
context.beginPath();
context.moveTo(path[0][0]+0.5,path[0][1]+0.5);
for(i=1,plen=path.length;i<plen;i++){
context.lineTo(path[i][0]+0.5,path[i][1]+0.5);}
if(lineColor!==undefined){
context.stroke();}
if(fillColor!==undefined){
context.fill();}
if(this.targetX!==undefined&&this.targetY!==undefined&&
context.isPointInPath(this.targetX,this.targetY)){
this.currentTargetShapeId=shapeid;}},
_drawCircle:function(shapeid,x,y,radius,lineColor,fillColor,lineWidth){
var context=this._getContext(lineColor,fillColor,lineWidth);
context.beginPath();
context.arc(x,y,radius,0,2*Math.PI,false);
if(this.targetX!==undefined&&this.targetY!==undefined&&
context.isPointInPath(this.targetX,this.targetY)){
this.currentTargetShapeId=shapeid;}
if(lineColor!==undefined){
context.stroke();}
if(fillColor!==undefined){
context.fill();}},
_drawPieSlice:function(shapeid,x,y,radius,startAngle,endAngle,lineColor,fillColor){
var context=this._getContext(lineColor,fillColor);
context.beginPath();
context.moveTo(x,y);
context.arc(x,y,radius,startAngle,endAngle,false);
context.lineTo(x,y);
context.closePath();
if(lineColor!==undefined){
context.stroke();}
if(fillColor){
context.fill();}
if(this.targetX!==undefined&&this.targetY!==undefined&&
context.isPointInPath(this.targetX,this.targetY)){
this.currentTargetShapeId=shapeid;}},
_drawRect:function(shapeid,x,y,width,height,lineColor,fillColor){
return this._drawShape(shapeid,[[x,y],[x+width,y],[x+width,y+height],[x,y+height],[x,y]],lineColor,fillColor);},
appendShape:function(shape){
this.shapes[shape.id]=shape;
this.shapeseq.push(shape.id);
this.lastShapeId=shape.id;
return shape.id;},
replaceWithShape:function(shapeid,shape){
var shapeseq=this.shapeseq,
i;
this.shapes[shape.id]=shape;
for(i=shapeseq.length;i--;){
if(shapeseq[i]==shapeid){
shapeseq[i]=shape.id;}}
delete this.shapes[shapeid];},
replaceWithShapes:function(shapeids,shapes){
var shapeseq=this.shapeseq,
shapemap={},
sid,i,first;
for(i=shapeids.length;i--;){
shapemap[shapeids[i]]=true;}
for(i=shapeseq.length;i--;){
sid=shapeseq[i];
if(shapemap[sid]){
shapeseq.splice(i,1);
delete this.shapes[sid];
first=i;}}
for(i=shapes.length;i--;){
shapeseq.splice(first,0,shapes[i].id);
this.shapes[shapes[i].id]=shapes[i];}},
insertAfterShape:function(shapeid,shape){
var shapeseq=this.shapeseq,
i;
for(i=shapeseq.length;i--;){
if(shapeseq[i]===shapeid){
shapeseq.splice(i+1,0,shape.id);
this.shapes[shape.id]=shape;
return;}}},
removeShapeId:function(shapeid){
var shapeseq=this.shapeseq,
i;
for(i=shapeseq.length;i--;){
if(shapeseq[i]===shapeid){
shapeseq.splice(i,1);
break;}}
delete this.shapes[shapeid];},
getShapeAt:function(el,x,y){
this.targetX=x;
this.targetY=y;
this.render();
return this.currentTargetShapeId;},
render:function(){
var shapeseq=this.shapeseq,
shapes=this.shapes,
shapeCount=shapeseq.length,
context=this._getContext(),
shapeid,shape,i;
context.clearRect(0,0,this.pixelWidth,this.pixelHeight);
for(i=0;i<shapeCount;i++){
shapeid=shapeseq[i];
shape=shapes[shapeid];
this['_draw'+shape.type].apply(this,shape.args);}
if(!this.interact){
this.shapes={};
this.shapeseq=[];}}});
VCanvas_vml=createClass(VCanvas_base,{
init:function(width,height,target){
var groupel;
VCanvas_vml._super.init.call(this,width,height,target);
if(target[0]){
target=target[0];}
$.data(target,'vcanvas',this);
this.canvas=document.createElement('span');
$(this.canvas).css({display:'inline-block',position:'relative',overflow:'hidden',width:width,height:height,margin:'0px',padding:'0px',verticalAlign:'top'});
this._insert(this.canvas,target);
this._calculatePixelDims(width,height,this.canvas);
this.canvas.width=this.pixelWidth;
this.canvas.height=this.pixelHeight;
groupel='<v:group coordorigin="0 0" coordsize="'+this.pixelWidth+' '+this.pixelHeight+'"'+' style="position:absolute;top:0;left:0;width:'+this.pixelWidth+'px;height='+this.pixelHeight+'px;"></v:group>';
this.canvas.insertAdjacentHTML('beforeEnd',groupel);
this.group=$(this.canvas).children()[0];
this.rendered=false;
this.prerender='';},
_drawShape:function(shapeid,path,lineColor,fillColor,lineWidth){
var vpath=[],
initial,stroke,fill,closed,vel,plen,i;
for(i=0,plen=path.length;i<plen;i++){
vpath[i]=''+(path[i][0])+','+(path[i][1]);}
initial=vpath.splice(0,1);
lineWidth=lineWidth===undefined?1:lineWidth;
stroke=lineColor===undefined?' stroked="false" ':' strokeWeight="'+lineWidth+'px" strokeColor="'+lineColor+'" ';
fill=fillColor===undefined?' filled="false"':' fillColor="'+fillColor+'" filled="true" ';
closed=vpath[0]===vpath[vpath.length-1]?'x ':'';
vel='<v:shape coordorigin="0 0" coordsize="'+this.pixelWidth+' '+this.pixelHeight+'" '+' id="jqsshape'+shapeid+'" '+
stroke+
fill+' style="position:absolute;left:0px;top:0px;height:'+this.pixelHeight+'px;width:'+this.pixelWidth+'px;padding:0px;margin:0px;" '+' path="m '+initial+' l '+vpath.join(', ')+' '+closed+'e">'+' </v:shape>';
return vel;},
_drawCircle:function(shapeid,x,y,radius,lineColor,fillColor,lineWidth){
var stroke,fill,vel;
x-=radius;
y-=radius;
stroke=lineColor===undefined?' stroked="false" ':' strokeWeight="'+lineWidth+'px" strokeColor="'+lineColor+'" ';
fill=fillColor===undefined?' filled="false"':' fillColor="'+fillColor+'" filled="true" ';
vel='<v:oval '+' id="jqsshape'+shapeid+'" '+
stroke+
fill+' style="position:absolute;top:'+y+'px; left:'+x+'px; width:'+(radius*2)+'px; height:'+(radius*2)+'px"></v:oval>';
return vel;},
_drawPieSlice:function(shapeid,x,y,radius,startAngle,endAngle,lineColor,fillColor){
var vpath,startx,starty,endx,endy,stroke,fill,vel;
if(startAngle===endAngle){
return;}
if((endAngle-startAngle)===(2*Math.PI)){
startAngle=0.0;
endAngle=(2*Math.PI);}
startx=x+Math.round(Math.cos(startAngle)*radius);
starty=y+Math.round(Math.sin(startAngle)*radius);
endx=x+Math.round(Math.cos(endAngle)*radius);
endy=y+Math.round(Math.sin(endAngle)*radius);
if(startx===endx&&starty===endy&&(endAngle-startAngle)<Math.PI){
return;}
vpath=[x-radius,y-radius,x+radius,y+radius,startx,starty,endx,endy];
stroke=lineColor===undefined?' stroked="false" ':' strokeWeight="1px" strokeColor="'+lineColor+'" ';
fill=fillColor===undefined?' filled="false"':' fillColor="'+fillColor+'" filled="true" ';
vel='<v:shape coordorigin="0 0" coordsize="'+this.pixelWidth+' '+this.pixelHeight+'" '+' id="jqsshape'+shapeid+'" '+
stroke+
fill+' style="position:absolute;left:0px;top:0px;height:'+this.pixelHeight+'px;width:'+this.pixelWidth+'px;padding:0px;margin:0px;" '+' path="m '+x+','+y+' wa '+vpath.join(', ')+' x e">'+' </v:shape>';
return vel;},
_drawRect:function(shapeid,x,y,width,height,lineColor,fillColor){
return this._drawShape(shapeid,[[x,y],[x,y+height],[x+width,y+height],[x+width,y],[x,y]],lineColor,fillColor);},
reset:function(){
this.group.innerHTML='';},
appendShape:function(shape){
var vel=this['_draw'+shape.type].apply(this,shape.args);
if(this.rendered){
this.group.insertAdjacentHTML('beforeEnd',vel);}else{
this.prerender+=vel;}
this.lastShapeId=shape.id;
return shape.id;},
replaceWithShape:function(shapeid,shape){
var existing=$('#jqsshape'+shapeid),
vel=this['_draw'+shape.type].apply(this,shape.args);
existing[0].outerHTML=vel;},
replaceWithShapes:function(shapeids,shapes){
var existing=$('#jqsshape'+shapeids[0]),
replace='',
slen=shapes.length,
i;
for(i=0;i<slen;i++){
replace+=this['_draw'+shapes[i].type].apply(this,shapes[i].args);}
existing[0].outerHTML=replace;
for(i=1;i<shapeids.length;i++){
$('#jqsshape'+shapeids[i]).remove();}},
insertAfterShape:function(shapeid,shape){
var existing=$('#jqsshape'+shapeid),
vel=this['_draw'+shape.type].apply(this,shape.args);
existing[0].insertAdjacentHTML('afterEnd',vel);},
removeShapeId:function(shapeid){
var existing=$('#jqsshape'+shapeid);
this.group.removeChild(existing[0]);},
getShapeAt:function(el,x,y){
var shapeid=el.id.substr(8);
return shapeid;},
render:function(){
if(!this.rendered){
this.group.innerHTML=this.prerender;
this.rendered=true;}}});})(jQuery);;i18n_register({"catalog":{"+-Splunk encountered an error while trying to undo the saving of your results. Try again or contact an admin.":"Splunk encountered an error while trying to undo the saving of your results. Try again or contact an admin.","+-Splunk encountered an error when it tried to save your results. It cannot generate a link. Try again or contact an admin.":"Splunk encountered an error when it tried to save your results. It cannot generate a link. Try again or contact an admin.","+-Export Results":"Export Results","+-Must export at least one result":"Must export at least one result","+-Ok":"Ok","+-Save Search":"Save Search","+-Your tag(s) could not be saved.\nTags are restricted to alphanumeric characters.":"Your tag(s) could not be saved.\nTags are restricted to alphanumeric characters.","+-Export":"Export","+-Splunk encountered an error when it attempted to retrieve the save search form. Try again or contact an admin.":"Splunk encountered an error when it attempted to retrieve the save search form. Try again or contact an admin.","+-Cancel":"Cancel","+-Could not load %(resource)s":"Could not load %(resource)s","+-Your search '%(savedSearchName)s' was saved.":"Your search '%(savedSearchName)s' was saved.","+-Splunk encountered an error when it tried to make your results world-readable. Try again or contact an admin.":"Splunk encountered an error when it tried to make your results world-readable. Try again or contact an admin.","+-Splunk encountered an error when it attempted to retrieve the eventtype form. Try again or contact an admin.":"Splunk encountered an error when it attempted to retrieve the eventtype form. Try again or contact an admin.","+-Add to Dashboard":"Add to Dashboard","+-Close":"Close","+-Splunk encountered an error while trying to make your results not world-readable. Try again or contact an admin.":"Splunk encountered an error while trying to make your results not world-readable. Try again or contact an admin.","+-Save":"Save","+-Create Alert":"Create Alert","+-Splunk encountered an error when it attempted to retrieve the schedule PDF form. Try again or contact an admin.":"Splunk encountered an error when it attempted to retrieve the schedule PDF form. Try again or contact an admin.","+-Your eventtype '%(eventtypeName)s' was saved.":"Your eventtype '%(eventtypeName)s' was saved.","+-Saving...":"Saving...","+-Successfully updated PDF delivery for this view":"Successfully updated PDF delivery for this view"},"plural":function(n){return n==1?0:1;}});
Splunk.Popup=$.klass({
_popup:null,
isActive:false,
initialize:function(contents,options){
this.logger=Splunk.Logger.getLogger("popup_manager.js");
if(!contents){
this.logger.error('Splunk.Popup: No popup contents specified');}
this.popupContents=contents;
this._options={
title:'',
pclass:false,
cloneFlag:true,
buttons:false,
inlineMode:false,
onDestroy:function(){},
isModal:true};
if(options)$.extend(this._options,options);
if(!this._options['title']){
this.logger.warn('splunk.Popup: No popup title specified, leaving blank');}
if(this._options['isModal']){
this.createOverlay();}
if(this._options['inlineMode']){
this._popup=this.popupContents;}else{
this._popup=$('<div class="popupContainer"></div>').append('<div class="splHeader splHeader-popup"><a href="javascript:void(0)" class="splIcon splIcon-close"></a><h2>'+this._options['title']+'</h2></div>').append('<div class="popupContent"></div>').prependTo('body');
if(this._options['pclass']){
this._popup.addClass(this._options['pclass']);}else{
this._popup.addClass('ieBugFixer');}
this.setPopupContents(this.popupContents);
if(this._options['buttons']){
this._popup.append('<div class="popupFooter"></div>');
this.setPopupButtons(this._options['buttons']);}}
this.positionPopup();
$(this._popup).css({visibility:'visible',display:'block'});
if($.browser.msie&&$.browser.version=='6.0'){
$('.vmPanelContainer').bgIframe({top:-1,left:-1,width:398});}
if($(this._popup).children('.splHeader-popup').length){
$(this._popup).draggable({
handle:".splHeader-popup h2",
containment:'document'});}
this._setupEventHandlers();
this.isActive=true;
Splunk.Popup._globalPopupCount+=1;
Splunk.util.focusFirstField(this._popup);
return this._popup;},
createPopup:function(popupParent,popupTitle,popupContents,handleOK,handleCancel,handleAccept){
this.logger.error('splunk.Popup: Function signature changed, please see /exposed/js/popup.js for details');},
_setupEventHandlers:function(){
$(this._popup).find('.splHeader .splIcon-close').click(function(){
this.destroyPopup();
return false;}.bind(this));
$(document).bind('keydown.Popup',function(event){
if(event.keyCode==27){
event.preventDefault();
this.destroyPopup();}}.bind(this));},
setPopupContents:function(popupContents){
$(this._popup).find('.popupContent').empty();
var newContents=$(popupContents);
if(this._options['cloneFlag']){
newContents=$(popupContents).clone(true).appendTo($(this._popup).find('.popupContent')).show();}else{
newContents=$(popupContents).appendTo($(this._popup).find('.popupContent')).show();}
if($.browser.msie){
this.setPopupDimensions(newContents);}},
setPopupButtons:function(buttons){
var popupInstance=this;
$.each(buttons,function(i,button){
if(button.hasOwnProperty('label')){
buttonText=button.label;}else{
buttonText='';}
if(button.hasOwnProperty('type')){
buttonType=button.type;}else{
buttonType='primary';}
if(button.hasOwnProperty('callback')){
buttonHandler=button.callback;}else{
popupInstance.logger.warn('Splunk.Popup: Button has no callback defined');
buttonHandler=function(){return true;};}
popupInstance.addButton(buttonText,buttonType,buttonHandler);});},
addButton:function(buttonText,buttonType,buttonHandler){
buttonType=buttonType.toLowerCase();
var newbutton=$('<button></button>').addClass('splButton-'+buttonType).append('<span>'+buttonText+'</span>').appendTo($(this._popup).children('div.popupFooter')).click(function(){
if(buttonHandler()){
this.destroyPopup();}}.bind(this));},
createOverlay:function(popupParent){
if(Splunk.Popup._globalPopupCount>0)return;
$('<div class="splOverlay"></div>').prependTo('body').show();
if($.browser.mozilla&&$.browser.version.substr(0,3)<"1.9"){
$('.FlashWrapperContainer').css('z-index','-1');}
if($.browser.msie&&$.browser.version=='6.0'){
var h,w;
h=$('body').height();
w=$('body').width();
$('.splOverlay').css({height:h,width:w}).bgIframe();}},
destroyOverlay:function(){
if(Splunk.Popup._globalPopupCount>0)return;
$('.splOverlay').remove();},
setPopupDimensions:function(popupContents){
var popupContentWidth=$(popupContents).outerWidth();
$(this._popup).css({width:popupContentWidth});},
positionPopup:function(){
var posX,posY,
height=this._popup.outerHeight(),
width=this._popup.outerWidth(),
wst,
wsl,
ww=$(window).width(),
wh=$(window).height();
posX=0;
posY=0;
if($.fn.scrollTop)
{
wst=$(window).scrollTop();
posY=wst;
if(wh>height)
{
posY=(wh-height)/2+wst;}}
if($.fn.scrollLeft)
{
wsl=$(window).scrollLeft();
if(ww>width)
{
posX=(ww-width)/2;}}
this._popup.css({top:posY,left:posX});},
onPopupLoaded:function(){
if($('#runMe').length){
eval($('#runMe').text());}},
getPopup:function(){
return this._popup;},
destroyPopup:function(){
Splunk.Popup._globalPopupCount-=1;
if(this._options['onBeforeDestroy'])this._options['onBeforeDestroy'](this);
if(this._options['inlineMode']){
$(this._popup).hide();}else{
$(this._popup).remove();}
if(this._options['isModal']){
this.destroyOverlay();}
if($.browser.mozilla&&$.browser.version.substr(0,3)<"1.9"){
$('.FlashWrapperContainer').css('z-index','auto');}
this.isActive=false;
$(document).unbind('keydown.Popup');
if(this._options['onDestroy'])this._options['onDestroy'](this);}});
Splunk.Popup.createExportResultsForm=function(formContainer,job,type){
if(typeof type==='undefined'){
type='event';}
var exportPopupHandle=null;
var exportPopup=new Splunk.Popup(formContainer,{
title:_('Export Results'),
buttons:[
{
label:_('Cancel'),
type:'secondary',
callback:function(){
return true;}},
{
label:_('Export'),
type:'primary',
callback:function(){
var limit=$(exportPopupHandle).find('[name="spl_ctrl-limit"]:checked').val();
if(limit=='unlimited'){
$(exportPopupHandle).find('[name="count"]').val('0');}else{
var countstr=$(exportPopupHandle).find('[name="spl_ctrl-count"]').val();
var count=parseInt(countstr,10);
if(isNaN(count)||count<1||countstr!=count){
alert(_("Must export at least one result"));
return false;}
$(exportPopupHandle).find('[name="count"]').val(count);}
return $(exportPopupHandle).find(".exForm").submit();}}]});
exportPopupHandle=exportPopup.getPopup();
var exportForm=$(exportPopupHandle).find(".exForm")[0];
exportForm.action=Splunk.util.make_url('api/search/jobs/'+job.getSID()+'/'+type);
if(job.areResultsTransformed()){
$("option[value='raw']",exportForm).remove();}};
Splunk.Popup.createEventtypeForm=function(formContainer,title,search,tags){
options={
url:Splunk.util.make_url('manager',Splunk.util.getCurrentApp(),'/saved/eventtypes/_new?action=edit&noContainer=2&viewFilter=modal&eleOnly=1'),
titlebar_class:'TitleBareventtypePopup',
setupPopup:function(EAIPopup){
if(search){
var searchStr=Splunk.util.stripLeadingSearchCommand(search.toString());
$('form.entityEditForm textarea[name="search"]',EAIPopup.getPopup()).val(searchStr);}
if(tags){
$('form.entityEditForm input[name="tags"]',EAIPopup.getPopup()).val(tags);}},
beforeSaveForm:function(eai){
var name=$('form.entityEditForm input[name="name"]').val();
eai.success_message=sprintf(_("Your eventtype '%(eventtypeName)s' was saved."),{eventtypeName:name});},
onAjaxError:function(){
var messenger=Splunk.Messenger.System.getInstance();
messenger.send('error','splunk.eventtype',
_("Splunk encountered an error when it attempted to retrieve the eventtype form. Try again or contact an admin."));}};
return Splunk.Popup.createEAIForm(formContainer,title,options);};
Splunk.Popup.createSavedSearchForm=function(formContainer,title,search){
options={
url:Splunk.util.make_url('manager',Splunk.util.getCurrentApp(),"/saved/searches/_new?action=edit&noContainer=1&viewFilter=modal&eleOnly=1"),
titlebar_class:'TitleBarSavedSearchPopup',
setupPopup:function(EAIPopup){
if(search){
var searchStr=search.toString();
var timeRange=search.getTimeRange();
var earliestTime=timeRange.getEarliestTimeTerms();
var latestTime=timeRange.getLatestTimeTerms();
if(searchStr){
$('form.entityEditForm textarea[name="search"]').val(Splunk.util.stripLeadingSearchCommand(searchStr));}
if(earliestTime){
$('form.entityEditForm input[name="dispatch.earliest_time"]').val(earliestTime);}
if(latestTime){
$('form.entityEditForm input[name="dispatch.latest_time"]').val(latestTime);}}
$('form.entityEditForm input[name="displayview"]',EAIPopup.getPopup()).val(Splunk.util.getCurrentDisplayView());
$('form.entityEditForm input[name="request.ui_dispatch_view"]',EAIPopup.getPopup()).val(Splunk.util.getCurrentDisplayView());},
beforeSaveForm:function(eai){
var vs_id=Splunk.Globals.ModuleLoader.commitViewParams(null,true);
var vs_input=$('form.entityEditForm input[name="vsid"]');
if(!vs_input){
search.logger.error('handleSaveSubmit - Cannot find vsid element; viewstate will not be saved');}else{
vs_input.val(vs_id);}
var name=$('form.entityEditForm input[name="name"]').val();
eai.success_message=sprintf(_("Your search '%(savedSearchName)s' was saved."),{savedSearchName:name});},
onAjaxError:function(){
var messenger=Splunk.Messenger.System.getInstance();
messenger.send('error','splunk.savedsearches',
_("Splunk encountered an error when it attempted to retrieve the save search form. Try again or contact an admin."));}};
return Splunk.Popup.createEAIForm(formContainer,title,options);};
Splunk.Popup.createSchedulePDFForm=function(formContainer,title){
var pdfParams={output:'pdf'};
var pdfUrl=Splunk.util.make_url('app',Splunk.util.getCurrentApp(),Splunk.util.getCurrentView())+'?'+Splunk.util.propToQueryString(pdfParams);
var pdfLink='<p class="pdfpreviewlink">'+'<a target="_blank" '+'href="'+pdfUrl+'">Preview as PDF</a> '+'(opens in new window; may take several minutes to display)</p>';
var options={
url:Splunk.util.make_url('manager',Splunk.util.getCurrentApp(),'scheduled/views',Splunk.util.getCurrentView(),'?action=edit&noContainer=1&viewFilter=modal&eleOnly=1'),
titlebar_class:'TitleBarSchedulePDFPopup',
prefix:pdfLink,
beforeSaveForm:function(eai){
eai.success_message=_('Successfully updated PDF delivery for this view');},
onAjaxError:function(){
var messenger=Splunk.Messenger.System.getInstance();
messenger.send('error','splunk.schedulepdf',
_("Splunk encountered an error when it attempted to retrieve the schedule PDF form. Try again or contact an admin."));}};
return Splunk.Popup.createEAIForm(formContainer,title,options);};
Splunk.Popup.createUserOptionsForm=function(formContainer,title){
var options={
url:Splunk.util.make_url('manager',Splunk.util.getCurrentApp(),'authentication','changepassword','admin','?action=edit&noContainer=1&eleOnly=1'),
titlebar_class:'TitleBarSavedSearchPopup',
beforeSaveForm:function(eai){
eai.success_message=_('Successfully changed user options');},
onAjaxError:function(){}};
return Splunk.Popup.createEAIForm(formContainer,title,options);};
Splunk.Popup.createEAIForm=function(formContainer,title,options){
if(Splunk.Popup.createEAIForm.opened)return;
var logger=Splunk.Logger.getLogger("Splunk.Popup.createEAIForm");
var loadingContainer=$('<div></div').appendTo(formContainer);
var loadedFormContainer=$('<div style="display:block"></div>').appendTo(formContainer);
$(loadingContainer).html('<div class="popupLoading">Loading...</div>');
if($.browser.msie){
$(loadingContainer).css({"overflow":"","height":""});}
var EAIPopup=new Splunk.Popup(loadingContainer,{
title:title,
pclass:options.titlebar_class,
cloneFlag:false,
onDestroy:function(){
Splunk.Popup.createEAIForm.opened=false;}});
$('.popupFooter',EAIPopup.getPopup()).hide();
var messenger=Splunk.Messenger.System.getInstance();
var cancel=function(){return true;};
var handleSaveSubmit=function(){
var form=$('form.entityEditForm',EAIPopup.getPopup());
var eai=Splunk.EAI.getInstance();
eai.redirect=false;
if(options.beforeSaveForm)
options.beforeSaveForm(eai);
$('div.popupFooter button.splButton-primary span',this._popup).text(_('Saving...'));
$('div.popupFooter button.splButton-primary',this._popup).unbind('click').removeClass('primary').addClass('secondary');
eai.saveForm(form,
function(){
Splunk.Globals.ModuleLoader.refreshViewData();
if(window.opener&&!window.opener.closed){
try{
window.opener.Splunk.Globals.ModuleLoader.refreshViewData();}catch(e){
logger.warn("Could not refresh view data for parent opener",e);}}
EAIPopup.destroyPopup();},
function(){
loadedFormContainer.scrollTop(0);
$('div.popupFooter button.splButton-primary span',this._popup).text(_('Save'));
$('div.popupFooter button.splButton-primary',this._popup).bind('click',handleSaveSubmit).removeClass('secondary').addClass('primary');});
return false;};
var setupPopup=function(){
if(EAIPopup)EAIPopup.destroyPopup();
EAIPopup=new Splunk.Popup(loadedFormContainer,{
title:title,
pclass:options.titlebar_class,
cloneFlag:false,
onDestroy:function(){
Splunk.Popup.createEAIForm.opened=false;},
buttons:[
{
label:_('Cancel'),
type:'secondary',
callback:cancel},
{
label:_('Save'),
type:'primary',
callback:handleSaveSubmit}]});
$('form.entityEditForm input[name="name"]',EAIPopup.getPopup()).focus();
Splunk.EAI.getInstance().use_messenger_on_error=false;
if(options.setupPopup)
options.setupPopup(EAIPopup);
$("form",loadedFormContainer).unbind('submit');
$("form",loadedFormContainer).submit(handleSaveSubmit);};
Splunk.Popup.createEAIForm.opened=true;
$.ajax({
url:options.url,
dataType:'html',
error:function(){
if(EAIPopup){
EAIPopup.destroyPopup();
Splunk.Popup.createEAIForm.opened=false;}
if(options.onAjaxError)
options.onAjaxError();},
success:function(resp,status){
if(options.prefix){
resp=options.prefix+resp;}
if(options.suffix){
resp=resp+options.suffix;}
$(loadedFormContainer).html(resp);
var safeHeight=$(window).height()-200;
if($.browser.msie){
$(loadedFormContainer).css("overflow","scroll");
if((parseInt($.browser.version,10)<7)){
$(loadedFormContainer).css("height",safeHeight+"px");}else{
$(loadedFormContainer).css("max-height",safeHeight+"px");}}else{
$(loadedFormContainer).css("overflow","auto");
$(loadedFormContainer).css("max-height",safeHeight+"px");}
setupPopup();}});};
Splunk.Popup._globalPopupCount=0;
Splunk.Popup.createShareLinkForm=function(formContainer,title,search){
var messenger=Splunk.Messenger.System.getInstance();
var onSaveSuccess=function(){
var app=Splunk.util.getCurrentApp();
var view=Splunk.util.getCurrentDisplayView();
var args={"sid":search.job.getSearchId()};
args["vs"]=Splunk.Globals.ModuleLoader.commitViewParams(null,true);
url=[];
url.push(document.location.protocol);
url.push("//");
url.push(document.location.host);
url.push(Splunk.util.make_url("app",app,view));
url.push("?"+Splunk.util.propToQueryString(args));
setTimeout(function(){
$(".linkTextInput").val(url.join("")).focus(function(){this.select();}).focus();},0);
var undoEverything=function(event){
var undoSaveSuccess=function(){
search.logger.debug("results are now unsaved again.");};
var undoSaveFailure=function(){
messenger.send('error','splunk.search',_("Splunk encountered an error while trying to undo the saving of your results. Try again or contact an admin."));};
search.job.unsave(undoSaveSuccess,undoSaveFailure);
var undoACLSuccess=function(){
search.logger.debug("results are now again marked as NOT world readable.");};
var undoACLFailure=function(){
messenger.send('error','splunk.search',_("Splunk encountered an error while trying to make your results not world-readable. Try again or contact an admin."));};
search.job.undoWorldReadable(undoACLSuccess,undoACLFailure);};
var linkPopup=null;
$("a.undoEverything",formContainer).click(function(){
undoEverything();
linkPopup.destroyPopup();});
linkPopup=new Splunk.Popup(formContainer,{
title:title,
buttons:[
{
label:_('Close'),
type:'primary',
callback:function(){
return true;}}]});};
var onSaveFailure=function(e){
messenger.send('error','splunk.search',_("Splunk encountered an error when it tried to save your results. It cannot generate a link. Try again or contact an admin.")+e);};
search.job.save(onSaveSuccess,onSaveFailure);
var onACLSuccess=function(){
search.logger.debug("results are now marked as world readable.");};
var onACLFailure=function(){
messenger.send('error','splunk.search',_("Splunk encountered an error when it tried to make your results world-readable. Try again or contact an admin."));};
search.job.makeWorldReadable(onACLSuccess,onACLFailure);};
Splunk.Popup.createEAIForm.opened=false;
Splunk.Popup.createEventtypeForm.opened=false;
Splunk.Popup.createTagFieldForm=function(formContainer,title,fieldName,fieldValue,successCallback){
var resource=Splunk.util.make_url("/tags/"+Splunk.util.getCurrentApp()+"/fields/"+encodeURIComponent(fieldName)+"/"+encodeURIComponent(fieldValue));
var logger=Splunk.Logger.getLogger("Splunk.Popup.createTagFieldForm");
$.ajax({
type:"GET",
url:resource,
dataType:"html",
async:false,
error:function(){
logger.error(sprintf(_("Could not load %(resource)s"),{resource:resource}));}.bind(this),
complete:function(data,textStatus){
var content=(data.status==200)?data.responseText:"Could not tag field";
formContainer.html(content);}.bind(this)});
var popup=new Splunk.Popup(formContainer,{
title:title,
buttons:[
{
label:_("Cancel"),
type:'secondary',
callback:function(){return true;}},
{
label:_("Ok"),
type:'primary',
callback:function(){return false;}}]});
$("input[name='add']",popup.getPopup()).focus();
var ajaxFormOptions={
complete:function(xhr,statusText){
if(statusText=="error"){
alert(_("Your tag(s) could not be saved.\nTags are restricted to alphanumeric characters."));}else{
successCallback.apply(null,arguments);
popup.destroyPopup();}}.bind(this),
target:formContainer};
var popupForm=$("form",popup.getPopup());
popupForm.ajaxForm(ajaxFormOptions);
$("input[name='add']",popup.getPopup()).keydown(function(event){
if(event.keyCode==13){
popupForm.submit();}});
$("button.splButton-primary",popup.getPopup()).click(function(){popupForm.submit();});};
Splunk.Popup.IFramer=function(path,title,options){
var options=options||{};
var isInit=true;
var data=options.data||null;
var scrolling=options.scrolling||false;
var src;
var popopOptions={
title:title};
if(options.onBeforeDestroy){
popopOptions.onBeforeDestroy=options.onBeforeDestroy;}
if(options.pclass){
popopOptions.pclass=options.pclass;}
if("isModal"in options){
popopOptions.isModal=options.isModal;}
var iframe=$('<iframe/>');
if(data){
src=path+"?"+Splunk.util.propToQueryString(data);}else{
src=path;}
iframe.attr("src","about:blank");
iframe.attr("scrolling",scrolling?"yes":"no");
var popup=new Splunk.Popup(iframe,popopOptions);
iframe=$("iframe",popup.getPopup());
iframe[0].src=src;
var $loading=$('<div class="popup-loading">Loading...</div>');
$loading.css({'width':'100%','height':'100%','position':'absolute','top':'0','background-color':'#fff'});
$('.popupContent').append($loading);
var onResize=function(){
setTimeout(function(){
var iframeHeight=iframe.height();
var bodyHeight=iframe.contents().find("body").height();
if(iframeHeight!=bodyHeight){
iframe.css("height","auto");
iframe.height(bodyHeight);}
if(isInit){
$('.popup-loading').remove();
popup.positionPopup();
isInit=false;}},0);};
iframe.load(function(){
var contents=iframe.contents();
contents.find("body").find("div.splClearfix:last").hide();
contents.find("form").css("display","block");
onResize();
contents.find("select").bind("change",onResize);
contents.find("body").bind("mouseup",onResize);
contents.find("form.cancel").submit(function(){
setTimeout(function(){popup.destroyPopup();},0);});
contents.find("a.cancel").click(function(){
setTimeout(function(){popup.destroyPopup();},0);});
contents.find("div.information input").click(function(){
this.select();});
if(options.onFrameLoad){
options.onFrameLoad(popup,contents);}
if(options.onDone&&typeof options.onDone==='function'){
contents.find('a.ok').click(function(e){
options.onDone.apply(this,[e]);});}});
return popup;};
Splunk.Popup.WizardHelper=function(path,title,search,options){
$(document).trigger('SessionTimeout.Jobber');
var options=options||{};
var onDone=options.onDone||false;
var enableDispatchTimes=options.hasOwnProperty('enableDispatchTimes')?options.enableDispatchTimes:true;
var time=search.getTimeRange();
var data={'search':Splunk.util.stripLeadingSearchCommand(search.toString()),'ui.display_view':Splunk.util.getCurrentDisplayView(),'ui.dispatch_view':Splunk.util.getCurrentDisplayView()};
if(enableDispatchTimes){
data['dispatch.latest_time']=time.getLatestTimeTerms();
data['dispatch.earliest_time']=time.getEarliestTimeTerms();}
var vsid=Splunk.Globals.ModuleLoader.commitViewParams(null,true);
if(vsid){
data['ui.vsid']=vsid;}
var onBeforeDestroy=function(popup){
Splunk.Globals.ModuleLoader.refreshViewData();
$(document).trigger('SessionStart.Jobber');
var iframe=$("iframe",popup.getPopup());
var cancel=iframe.contents().find("form.cancel");
cancel.unbind();
cancel.ajaxSubmit();};
return Splunk.Popup.IFramer(path,title,{data:data,onBeforeDestroy:onBeforeDestroy,pclass:'wizardPopup',onDone:onDone});};
Splunk.Popup.AlertWizard=function(search){
if(window.location.href.indexOf('mode=classic')!=-1){
var path=Splunk.util.make_url("/alertswizard/"+encodeURIComponent(Splunk.util.getCurrentApp())+"/step1/new");
return Splunk.Popup.WizardHelper(path,_("Create Alert"),search);}
return Splunk.Popup.AlertWizardV2(search);};
Splunk.Popup.AlertWizardV2=function(search){
var path=Splunk.util.make_url("/alertswizardv2/"+encodeURIComponent(Splunk.util.getCurrentApp())+"/step1/new");
return Splunk.Popup.WizardHelper(path,_("Create Alert"),search,{enableDispatchTimes:false});};
Splunk.Popup.ScheduleDigestWizard=function(search,options){
var options=options||{};
var path=Splunk.util.make_url("/scheduledigestwizard/"+encodeURIComponent(Splunk.util.getCurrentApp())+"/step1/new");
var title=options.title||_("Create Scheduled Report");
return Splunk.Popup.WizardHelper(path,title,search);};
Splunk.Popup.DashboardWizard=function(search,options){
var options=options||{};
var path=Splunk.util.make_url("/dashboardwizard/"+encodeURIComponent(Splunk.util.getCurrentApp())+"/step1/new");
var title=options.title||_("Create Dashboard Panel");
var popup=Splunk.Popup.WizardHelper(path,title,search);
var iframe=$("iframe",popup.getPopup());
iframe.attr("panel_type",options.panel_type||"table");
return popup;};
Splunk.Popup.SaveSearchWizard=function(search,options){
var options=options||{};
var path=Splunk.util.make_url("/savesearchwizard/"+encodeURIComponent(Splunk.util.getCurrentApp())+"/new");
var title=options.title||_("Save Search");
return Splunk.Popup.WizardHelper(path,title,search,options);};
Splunk.Popup.AboutPopup=function(container){
if(container.css('display')=='none'){
return new Splunk.Popup(container,{
title:_('About Splunk'),
buttons:[
{
label:_('Done'),
type:'primary',
callback:function(){
return true;}.bind(this)}]});}};
Splunk.Popup.TreePopup=function(elTarget,title,data,style){
var data=data||{};
var path=Splunk.util.make_url("/tree");
var style=style||'wizardPopup';
var popup=Splunk.Popup.IFramer(path,title,{data:data,pclass:style,isModal:true});
var iframe=$("iframe",popup.getPopup());
iframe.load(function(){
iframe.contents().find(".splButton-secondary").click(function(){
popup.destroyPopup();});
$(this).contents().find('.splButton-primary').click(function(){
$(elTarget).val(iframe.contents().find('span#selected').text());
popup.destroyPopup();});});
return popup;};
Splunk.Popup.Wall=function(){
var path=Splunk.util.make_url("/wall/"+encodeURIComponent(Splunk.util.getCurrentApp())+"/new");
var onBeforeDestroy=function(popup){
Splunk.Messenger.System.getInstance().getServerMessages();
var iframe=$("iframe",popup.getPopup());
var cancel=iframe.contents().find("form.cancel");
cancel.unbind();
cancel.ajaxSubmit();};
return Splunk.Popup.IFramer(path,_('Wall'),{data:{},onBeforeDestroy:onBeforeDestroy,pclass:'wizardPopup',isModal:false});};
Splunk.Popup.SchedulePDF=function($targetContainer,error){
var self=this;
$.getJSON(Splunk.util.make_url("report/is_enabled"),function(response,textStatus){
switch(response.status){
case'enabled':
displaySchedulePDFForm();
break;
case'disabled':
displaySchedulePDFDisabled(response.installed);
break;
case'notinstalled':
displaySchedulePDFNotInstalled();
break;
case'denied':
displaySchedulePDFDenied();
break;
default:
error(sprintf(_("Received an unexpected response '%s' while fetching the status of the PDF report server"),data.status));
break;}});
function displaySchedulePDFForm(){
Splunk.Popup.createSchedulePDFForm($targetContainer,_('Schedule for PDF Delivery'));}
function displaySchedulePDFDisabled(installed){
var msg;
if(installed){
msg=sprintf(
_('<p>The PDF Report Server is installed on this server, but not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href="%(url)s" target="_blank">Configuring the PDF Report Server</a> documentation for further details.</p>'),
{
url:'http://www.splunk.com/r/pdf_printing_doc'});}else{
msg=sprintf(
_('<p>The PDF Report Server is not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href="%(url)s" target="_blank">Configuring the PDF Report Server</a> documentation for further details.</p>'),
{
url:'http://www.splunk.com/r/pdf_printing_doc'});}
$targetContainer.html(msg);
var popup=new Splunk.Popup($targetContainer,{
title:_('Server Configuration'),
buttons:[
{
label:_('OK'),
type:'primary'}]});}
function displaySchedulePDFNotInstalled(){
$targetContainer.html(
sprintf(
_('<p>The PDF Report Server app is not currently installed and enabled on this server.</p><p>See <a href="%(url)s" target="_blank">Configuring the PDF Report Server</a> documentation if you wish to use a remote PDF server, or install the PDF Report Server app on this machine by browsing for it from the Launcher.</p>'),
{
url:'http://www.splunk.com/r/pdf_printing_doc'}));
var popup=new Splunk.Popup($targetContainer,{
title:_('Server Configuration'),
buttons:[
{
label:_('OK'),
type:'primary'}]});}
function displaySchedulePDFDenied(){
$targetContainer.html(
sprintf(
_('<p>Your user account does not have permission to schedule search jobs. Contact your Splunk administrator or see <a href="%(url)s" target="_blank">Configuring the PDF Report Server</a> for assistance.</p>'),
{url:'http://www.splunk.com/r/pdf_printing_doc'}));
var popup=new Splunk.Popup($targetContainer,{
title:_('Permission Denied'),
buttons:[
{
label:_('OK'),
type:'primary'}]});}};;
Splunk.LayoutEngine=$.klass({
initialize:function(){
if($.browser.msie){
var context=this;
if($.browser.version=='6.0'){
this._SetLayoutIE6();
var resizeTimer=null;
$(window).resize(function(){
if(resizeTimer){
clearTimeout(resizeTimer);}
resizeTimer=setTimeout(context._SetLayoutIE6,1);});}else if($.browser.version in{"7.0":true,"8.0":true}){
this._SetLayoutIE7plus();
$(window).resize(context._SetLayoutIE7plus);}}
this._setUpSidebars();
this._setupResultsOptionsPopup();},
_SetLayoutIE6:function(){
$('.twoColRow').each(function(){
var parentWidth=$(this).innerWidth();
var halfWidth=parentWidth/2;
$(this).children('div.layoutCell').each(function(){
$(this).css('width',halfWidth);});});},
_SetLayoutIE7plus:function(){
$('.twoColRow').each(function(){
$(this).children('div.layoutCell').width('50%');
var twoColRowWidth=$(this).innerWidth();
if(twoColRowWidth%2!=0){
var lastCellWidth=parseInt($(this).children('div.layoutCell:last-child').width(),10)-1;
$(this).children('div.layoutCell:last-child').width(lastCellWidth);}});},
_setUpSidebars:function(){
$('.sidebar').each(function(){
$sidebar=$(this);
$sidebar.addClass('sidebarExpanded');
$('<span class="sidebarControl splHeader splHeader-secondary splBorder splBorder-e"><a href="javascript:void(0)" class="splIconicLink splIcon-sidebar-open"><span class="splIconicLinkIcon"></span></a></span>').prependTo($sidebar);
$sidebar.click(function(evt){
var t=evt.target;
for(var i=0;i<2;i++){
if(t.tagName!='A'){
t=t.parentNode;}else{
break;}}
if($(t).hasClass('sidebarControl')||$(t).parent('span.sidebarControl').length){
if($sidebar.hasClass('sidebarCollapsed')){
$sidebar.removeClass('sidebarCollapsed').addClass('sidebarExpanded').find('.splIcon-sidebar-closed').removeClass('splIcon-sidebar-closed').addClass('splIcon-sidebar-open');}else{
$sidebar.removeClass('sidebarExpanded').addClass('sidebarCollapsed').find('.splIcon-sidebar-open').removeClass('splIcon-sidebar-open').addClass('splIcon-sidebar-closed');}}
if($.browser.msie&&$(t).hasClass('sidebarCollapsed')){
$sidebar.removeClass('sidebarCollapsed').addClass('sidebarExpanded');}});});},
_setupResultsOptionsPopup:function(){
var sel=$('.resultsOptionsActivator');
if(sel.length){
sel.click(function(){
if(sel.hasClass("splIconicLinkDisabled")){
return false;}
var resultsOptionsPopup=new Splunk.Popup($('.resultsOptions'),{
inlineMode:true});
$(".resultsOptions .splButton-primary").click(
resultsOptionsPopup.destroyPopup.bind(resultsOptionsPopup));
return false;});}}});;(function(ns){
ns.range=function(){
var l=arguments,start,stop,step,r=[];
if(l.length==1){
start=0;
stop=l[0];
step=1;}else{
start=l[0];
stop=l[1];
step=(l[2]==null)?1:l[2];}
for(var i=start;(step>0)?i<stop:i>stop;i+=step){
r.push(i);}
return r;};
ns.Google=function(item_count,options){
var options=options||{};
this.item_count=item_count;
this.max_items_page=options.max_items_page||10;
this.max_pages=options.max_pages||10;
this.item_offset=options.item_offset||0;
this.total_pages=this.__total_pages();
this.active_page=this.__active_page();
this.page_range=this.__page_range();};
ns.Google.prototype={
__page_range:function(){
if(this.total_pages==1){
return[];}else{
page_mid_point=parseInt(Math.floor(this.max_pages/2),10);}
if(this.active_page<=page_mid_point){
start=1;
end=Math.min(this.total_pages,this.max_pages)+1;}else{
end=Math.min(this.active_page+page_mid_point,this.total_pages)+1;
start=Math.max(end-this.max_pages,1);}
return ns.range(start,end);},
__total_pages:function(){
return parseInt(Math.ceil(this.item_count/this.max_items_page),10);},
__active_page:function(){
return parseInt(Math.floor((this.item_offset/this.max_items_page)+1),10);},
next_exists:function(){
if(this.page_range.length==0){
return false;}
if(this.active_page<this.total_pages){
return true;}else{
return false;}},
next_offset:function(){
if(this.next_exists()){
page=this.active_page+1;
return this.page_item_offset(page);}else{
return-1;}},
previous_exists:function(){
if(this.page_range.length==0){
return false;}
if(this.active_page>1){
return true;}
return false;},
previous_offset:function(){
if(this.previous_exists()){
var page=this.active_page-1;
return this.page_item_offset(page);}
return-1;},
page_item_offset:function(page_num){
return(this.max_items_page*page_num)-this.max_items_page},
is_active_page:function(page_num){
if(page_num==this.active_page){
return true;}
return false}};})(Splunk.namespace('Splunk.paginator'));;Splunk.namespace("Splunk.Print");
Splunk.Print=$.klass({
START_EVENT:"PrintStart",
END_EVENT:"PrintEnd",
PAGE_EVENT:"PrintPage",
PAGE_WIDTH:($.browser.msie&&$.browser.version in{"6.0":true,"7.0":true,"8.0":true})?"700px":"800px",
WINDOW_PRINT_END_EVENT_DELAY:1000,
initialize:function(){
this.logger=Splunk.Logger.getLogger("Splunk.Print");
$(document).bind(this.START_EVENT,this.onPrintStart.bind(this));
$(document).bind(this.END_EVENT,this.onPrintEnd.bind(this));
$(document).bind(this.PAGE_EVENT,this.onPrintPage.bind(this));
if(window.onbeforeprint!==undefined){
this.bindIEPrintEvents();}},
onPrintEnd:function(event){
this.logger.info("Splunk.Print.END_EVENT fired");},
onPrintPage:function(event){
var bodyStyle=$('body')[0].style,
currentX=window.pageXOffset,
currentY=window.pageYOffset,
printPrepare=function(){
$('body').css('width',this.PAGE_WIDTH);
window.scrollTo(0,document.body.offsetHeight);}.bind(this),
printCleanup=function(){
bodyStyle.width="";
window.scrollTo(currentX,currentY);};
this.logger.info("Splunk.Print.PAGE_EVENT fired");
if($.browser.msie){
printPrepare();
$(document).trigger(this.START_EVENT);
window.print();
printCleanup();
$(document).trigger(this.END_EVENT);}
else if(this.isChromeThirteenPlus()){
var printPreviewMode=false;
$(window).bind('blur.splunkPrint',function(){
printPreviewMode=true;
$(window).bind('focus.splunkPrint',function(){
printCleanup();
$(document).trigger(this.END_EVENT);
$(window).unbind('.splunkPrint');}.bind(this));}.bind(this));
printPrepare();
setTimeout(function(){
$(document).trigger(this.START_EVENT);}.bind(this),0);
setTimeout(function(){
window.print();
setTimeout(function(){
if(!printPreviewMode){
printCleanup();
$(window).unbind('.splunkPrint');
$(document).trigger(this.END_EVENT);}}.bind(this),this.WINDOW_PRINT_END_EVENT_DELAY);}.bind(this),0);}
else{
printPrepare();
setTimeout(function(){
$(document).trigger(this.START_EVENT);}.bind(this),0);
setTimeout(function(){
window.print();
setTimeout(function(){
printCleanup();
$(document).trigger(this.END_EVENT);}.bind(this),this.WINDOW_PRINT_END_EVENT_DELAY);}.bind(this),0);}},
onPrintStart:function(event){
this.logger.info("Splunk.Print.START_EVENT fired");},
bindIEPrintEvents:function(){
if(window.attachEvent){
window.attachEvent('onbeforeprint',function(){
$('body').css('width',this.PAGE_WIDTH);
$(document).trigger(this.START_EVENT);}.bind(this));
window.attachEvent('onafterprint',function(){
$('body').css('width',"");
$(document).trigger(this.START_EVENT);}.bind(this));}},
isChromeThirteenPlus:function(){
var chromeRegex=/chrome\/(\d+)/i,
chromeInfo=chromeRegex.exec(navigator.userAgent);
return!!(chromeInfo&&(parseInt(chromeInfo[1],10)>=13));}});
Splunk.Print.instance=null;
Splunk.Print.getInstance=function(){
if(!Splunk.Print.instance){
Splunk.Print.instance=new Splunk.Print();}
return Splunk.Print.instance;};;Splunk.namespace("Splunk.PageStatus");
Splunk.PageStatus=$.klass({
READY:"PageReady",
initialize:function(){
this.logger=Splunk.Logger.getLogger("Splunk.PageStatus");
$(document).bind(this.READY,this._onPageReady.bind(this));
this._reset();
this._registerJobs();
this._registerModuleLoader();},
_registerJobs:function(){
var handler=this;
var callbackMap={};
var jobCreatedCallback=function(event,job){
var sid=job.getSearchId();
callbackMap[sid]=handler.register('Job is running - '+sid);}
$(document).bind('jobDispatched',jobCreatedCallback);
$(document).bind('jobResurrected',jobCreatedCallback);
$(document).bind('jobProgress',function(event,job){
var sid=job.getSearchId();
if(callbackMap&&callbackMap.hasOwnProperty(sid)&&(job.isDone()||job.isRealTimeSearch())){
callbackMap[sid].loadComplete();}});},
_registerModuleLoader:function(){
if(Splunk.hasOwnProperty("ModuleLoader")){
var monitor=this.register('ModuleLoader - initializing all modules, loading them with context data.');
$(document).bind('allModulesInHierarchy',function(){
monitor.loadComplete();});}else{
this.logger.debug("no dependent ModuleLoader detected");}},
register:function(desc){
++this.last_id;
var id=this.last_id;
this.pending[id]=desc;
this.pending_count++;
var handler=this;
return{
id:id,
loadComplete:function(){return handler._loadComplete(this.id);}};},
setupComplete:function(){
this.logger.info('Splunk.PageStatus setup complete');
this.page_setup=true;
this._checkPageComplete();},
_loadComplete:function(id){
if(!id in this.pending)
return false;
delete this.pending[id];
this.pending_count--;
this._checkPageComplete();
return true;},
_checkPageComplete:function(){
if(this.pending_count||!this.page_setup)
return;
this.logger.info('Splunk.PageStatus page done after '+this.last_id+' dependents completed.');
if(document.createEvent){
var evt=document.createEvent("Events");
evt.initEvent(this.READY,true,false);
document.dispatchEvent(evt);}else{
$(document).trigger(this.READY);}},
_onPageReady:function(evt){
this.logger.info("Splunk.PageStatus.READY fired");},
_reset:function(){
this.pending={};
this.pending_count=0;
this.last_id=0;
this.page_setup=false;}});
Splunk.PageStatus.instance=null;
Splunk.PageStatus.getInstance=function(){
if(!Splunk.PageStatus.instance){
Splunk.PageStatus.instance=new Splunk.PageStatus();}
return Splunk.PageStatus.instance;};;Splunk.Dev={
init:function(){
if($.cookie('devToolbar')){
Splunk.Dev.enable();
Splunk.Dev.logger=Splunk.Logger.getLogger("dev.js");}},
enable:function(){
var toolbar=$('<div id="splunkDevToolbar"><div id="devOpener">Dev</div></div>');
toolbar.appendTo(document.body);
$('#devOpener',toolbar).css('left',$(window).width()/2);
var menu=[
{
label:'Toggle module info',
callback:function(){Splunk.Dev.toggleModuleOverlay();}},
{
label:'Show view source',
callback:function(){
window.open(Splunk.util.make_url(
sprintf('/app/%s/%s?showsource=1',
Splunk.util.getCurrentApp(),
Splunk.util.getCurrentView())));}},
{
label:'Commit snapshot',
callback:function(){Splunk.Dev.commitCurrentSnapshot();}}];
var activator=$('#devOpener');
if(activator){
var menuObject=new Splunk.MenuBuilder({
containerDiv:$('#splunkDevToolbar'),
menuDict:menu,
activator:$('#devOpener'),
menuClasses:'whiteSplunkMenu'});}else{
Splunk.Dev.logger.error("Splunk.Dev tried to enable, but failed for lack of an #devOpener element");}
$.cookie('devToolbar','on',{expires:1000});},
disable:function(){
$.cookie('devToolbar',null);
$('#splunkDevToolbar').remove();
Splunk.Dev.toggleModuleOverlay(true);},
toggleModuleOverlay:function(kill){
if(kill||$('.devModuleOverlay',document.body).size()>0){
$('.devModuleOverlay').remove();
return;}
$('.SplunkModule').each(function(){
$(this).css('position','relative');
var context=Splunk.Globals.ModuleLoader.getModuleInstanceById($(this).attr('id')).getContext();
var contextOutput=[];
var contextHash=context.getAll();
for(var k in contextHash){
if(contextHash.hasOwnProperty(k)){
contextOutput.push(k+'='+contextHash[k]);}}
var moduleId=$(this).attr('id');
var overlay=$('<div class="devModuleOverlay"><span class="devModuleLabel">'+moduleId+'</span><div class="devModuleSettings">'+contextOutput.join('<br />')+'</div></div>');
overlay.css('width',$(this).outerWidth());
overlay.css('height',$(this).outerHeight());
overlay.hover(
function(){
$(this).css('opacity',0.9).css('background-color','#486573');},
function(){
$(this).css('opacity',null).css('background-color',null);});
overlay.click(function(){
window.console.log('getContext() for module: '+moduleId);
window.console.dir(context||'(none)');});
overlay.appendTo($(this));});
$(document).keypress(function(evt){if(evt.keyCode==27)Splunk.Dev.toggleModuleOverlay(true);});},
toggleTreeLines:function(){},
commitCurrentSnapshot:function(){
var messenger=Splunk.Messenger.System.getInstance();
var vs_id=Splunk.Globals.ModuleLoader.commitViewParams();
var uri=Splunk.util.make_url('app',
Splunk.util.getCurrentApp(),
Splunk.util.getCurrentView())
+'?vs='+encodeURIComponent(vs_id);
messenger.send('info','Splunk.Dev','Viewstate created - '+vs_id+' - '+uri);
return vs_id;}};i18n_register({"catalog":{"+-Cannot open job inspector; no search job ID provided!":"Cannot open job inspector; no search job ID provided!"},"plural":function(n){return n==1?0:1;}});
Splunk.window={
open:function(uri,name,options){
options=$.extend({
resizable:true,
scrollbars:true,
toolbar:true,
location:true,
menubar:true,
width:$(window).width(),
height:$(window).height()},options);
if(!options['top'])options['top']=Math.max(0,screen.availHeight/2-options['height']/2);
if(!options['left'])options['left']=Math.max(0,screen.availWidth/2-options['width']/2);
options['screenX']=options['left'];
options['screenY']=options['top'];
var compiled_options=[];
for(var key in options){
if(options[key]===true)options[key]='yes';
if(options[key]===false)options[key]='no';
compiled_options.push(key+'='+options[key]);}
name='w'+name.replace(/[^a-zA-Z 0-9]+/g,'');
var newWindow=window.open(uri,name,compiled_options.join(','));
if(newWindow&&newWindow.focus)newWindow.focus();
return newWindow;},
openJobManager:function(getArgs){
var app=Splunk.util.getCurrentApp();
if(app=="UNKNOWN_APP")app="search";
var url=Splunk.util.make_url('app',app,'job_management');
if(getArgs)url+="?"+Splunk.util.propToQueryString(getArgs);
var spawnedWindow=this.open(
url,'splunk_job_manager',
{
width:900,
height:600,'menubar':false});
return spawnedWindow;},
openAerts:function(href){
return this.open(href,'splunk_alerts',{width:900,height:600,'menubar':false});},
openJobInspector:function(sid){
var url=Splunk.util.make_url('search','inspector');
if(!sid){
alert(_('Cannot open job inspector; no search job ID provided!'));
return false;}
var getArgs={
sid:sid,
namespace:Splunk.util.getCurrentApp()};
url+="?"+Splunk.util.propToQueryString(getArgs);
var spawnedWindow=this.open(
url,'splunk_job_inspector',
{
width:870,
height:560,'menubar':false});
return spawnedWindow;}};i18n_register({"catalog":{"+-(numeric)":"(numeric)","+-Invalid status code for %(url)s":"Invalid status code for %(url)s","+-top values by time":"top values by time","+-Value":"Value","+-top values overall":"top values overall","+-<b>%(label)s</b>: %(value)s":"<b>%(label)s</b>: %(value)s","+-values of %s ":"values of %s ","+-Report on:":"Report on:","+-Stdev":"Stdev","+-Could not retrieve field summary information. Check if the job has been canceled or expired.":"Could not retrieve field summary information. Check if the job has been canceled or expired.","+-Max":"Max","+-maximum value over time":"maximum value over time","+-Could not load %(url)s":"Could not load %(url)s","+-minimum value over time":"minimum value over time","+-Top %(pageCount)s %(name)s":"Top %(pageCount)s %(name)s","+-Mean":"Mean","+-average over time":"average over time","+-Min":"Min","+-(categorical)":"(categorical)"},"plural":function(n){return n==1?0:1;}});
Splunk.Popup.FieldSummaryLayer=$.klass({
search:null,
popupLayer:null,
fieldName:null,
count:0,
distinctCount:0,
reportLinkViewTarget:null,
reportLinkSelector:".reportLinks",
fieldLinksContainer:".fieldLinks",
headerContainer:".fieldHeader",
tbodySelector:".popupContent table tbody",
categoricalReportLabels:[_("Top values by time"),_("Top values overall")],
numericalReportLabels:[_("Average over time"),_("Maximum value over time"),_("Minimum value over time")],
initialize:function(popupLayerTemplate,popupLayerContainer,reportLinkViewTarget){
this.popupLayer=popupLayerTemplate.clone()
this.popupLayer.prependTo('body')
this.reportLinkViewTarget=reportLinkViewTarget;
this.logger=Splunk.Logger.getLogger("FieldSummaryLayer");
$(document).bind('fieldSummaryOpened',function(event,fieldSummaryInstance){
if(fieldSummaryInstance!==this){
this.close();}}.bind(this));},
setField:function(search,fieldName,initialCount,initialDistinctCount,initialEventCount,isNumeric,customLinks,module){
this.search=search;
this.module=module;
this.fieldName=fieldName;
this.count=initialEventCount;
this.distinctCount=initialDistinctCount;
this.eventCount=initialEventCount;
this.customLinks=customLinks
this.buildReportLinks(isNumeric);
this.updateFieldLinks(customLinks);
this.updateHeader(10,isNumeric);},
open:function(openerElement,onCancelled){
this.popupLayer.find('.splHeader h2').text("Loading...").end().css("left",openerElement.offset().left+openerElement.outerWidth()).css("top",openerElement.offset().top).css("visibility","visible").css('z-index','499').show()
var tbody=$(this.popupLayer).find(this.tbodySelector);
tbody.html('');
this.onCancelled=onCancelled||function(){};
this.popupLayer.find('.splHeader .splIcon-close').click(this.close.bind(this));
$(document).trigger("fieldSummaryOpened",[this]);},
close:function(){
this.popupLayer.hide();
if(this.onCancelled)this.onCancelled();},
refresh:function(onRendered,onFieldValueClick,pageSize){
var args={
field_list:this.fieldName,
top_count:pageSize,
min_freq:0};
$.ajax({
type:"GET",
url:this.search.getUrl('summary',args),
dataType:"xml",
error:function(){
this.logger.error("Could not load FieldSummary");}.bind(this),
complete:function(data,textStatus){
if(data.status==200){
this.renderResults(data.responseXML,onRendered,onFieldValueClick,pageSize);}else if(data.status==404){
this.popupLayer.find(this.headerContainer).text(_("Could not retrieve field summary information. Check if the job has been canceled or expired."));}}.bind(this)});},
renderResults:function(resultXML,onRendered,onFieldValueClick,pageSize){
if(onRendered)onRendered();
this.eventCount=parseInt($(resultXML).find("summary").attr("c"),10);
var fieldNode=$(resultXML).find("summary").find("field");
this.distinctCount=parseInt(fieldNode.attr("dc"),10);
var isNumeric=(parseInt(fieldNode.attr("nc"),10)>this.eventCount/2);
if(fieldNode.attr("k")!=this.fieldName){
this.logger.error("Assertion failed - asked for "+this.fieldName+" and received "+fieldNode.attr("k"));}
this.updateNumericalStats(fieldNode,isNumeric);
this.updateHeader(pageSize,isNumeric);
var colTitle=_('Values');
if(pageSize){
var displayedCount=Math.min(pageSize,this.distinctCount);
if(this.distinctCount>displayedCount){
var displayText=_("Top %(pageCount)s values")
var displayArgs={pageCount:displayedCount,name:this.pluralizeNoun(this.fieldName)};
colTitle=sprintf(displayText,displayArgs);}}
var tbody=$(this.popupLayer).find(this.tbodySelector);
tbody.html('');
tbody.hide();
var moduleInstance=this;
tbody.html('<tr class="fieldNameHeaderRow"><th class="fieldName">'+colTitle+'</th><th style="text-align:right;">#</th><th style="text-align:right;">%</th><th>&nbsp;</th></tr>');
fieldNode.find("value").each(function(index){
moduleInstance.renderTableRowFromFieldNode(tbody,$(this),onFieldValueClick)});
if($.browser.msie)tbody.css("display","block");
else tbody.css("display","table-row-group");
var posY=$(this.popupLayer).offset().top;
var height=$(this.popupLayer).height();
var wh=$(window).height();
var wst=$(window).scrollTop();
if(wh+wst<posY+height){
var diff=(posY+height)-(wh+wst)+5;
if(diff>0){
var shiftUp=Math.max(posY-diff,0);
$(this.popupLayer).animate({
top:shiftUp},"fast");}}},
updateNumericalStats:function(fieldNode,isNumeric){
var container=$(".numericalStats",this.popupLayer)
container.html('');
if(isNumeric){
var numericalStats=[
{key:"min",label:_("Min")},
{key:"max",label:_("Max")},
{key:"mean",label:_("Mean")},
{key:"stdev",label:_("Stdev")}];
for(var i=0;i<numericalStats.length;i++){
numericalStats[i].value=format_number(fieldNode.find(numericalStats[i].key).text());
$("<span>").html(sprintf(_("<b>%(label)s</b>: %(value)s"),numericalStats[i])).appendTo(container);}}},
updateHeader:function(pageSize,isNumeric){
var suffix=(isNumeric)?_(" (numeric)"):_(" (categorical)");
this.popupLayer.find('.splHeader h2').text(this.fieldName+suffix)},
updateFieldLinks:function(customLinks){
var container=$(this.fieldLinksContainer,this.popupLayer);
container.html('');
if(customLinks){
for(var i=0,len=customLinks.length;i<len;i++){
container.append(customLinks[i]);}}},
renderTableRowFromFieldNode:function(tbody,fieldNode,onFieldValueClick){
var fieldValue=fieldNode.find("text").text();
var count=fieldNode.attr("c");
var percentage=Math.round(100*count/this.eventCount)
var countLength=count.toString().length;
if((fieldValue.length+countLength)>33){
var trimToLength=(30-parseInt(countLength,10));
var trimmedFieldValue=Splunk.util.smartTrim(fieldValue,trimToLength);}else{
trimmedFieldValue=fieldValue;}
percentage=Math.round(100*percentage)/100;
percentage=Math.min(percentage,100);
var graphBar=$('<div class="splBarGraphBar"></div>').css('width',percentage+'%');
var graph=$('<div class="splBarGraph"></div>').append(graphBar);
var graphCell=$('<td class="fieldValueGraphCell"></td>').append(graph);
var graphFieldName=$('<a></a>').attr('href','#').text(trimmedFieldValue);
var graphHeader=$('<th></th>').addClass("fieldName").append(graphFieldName).attr('title',fieldValue);
var graphRow=$('<tr></tr>').append(graphHeader).append($("<td></td>").text(format_number(count))).append($("<td></td>").text(format_percent(count/this.eventCount))).append(graphCell);
if(onFieldValueClick){
graphRow.click(function(evt){
onFieldValueClick(evt,this.fieldName,fieldValue);
this.close();
return false;}.bind(this));}
tbody.append(graphRow);},
pluralizeNoun:function(nounStr){
if(!nounStr.length)return nounStr;
var fallback=sprintf(_("values of %s "),nounStr);
if(nounStr.length<3)return fallback;
else if(Splunk.util.getConfigValue('LOCALE','en-US').indexOf("en-")!=0){
return fallback;}
var lastChar=nounStr.charAt(nounStr.length-1);
var lastTwoChars=nounStr.substring(nounStr.length-2);
if(lastChar in{"s":1,"z":1,"y":1}){
return fallback;}
if(lastTwoChars in{"ch":1,"sh":1,"ex":1}){
return nounStr+"es";}
return nounStr+"s";},
buildCountAndNoun:function(){
if(this.distinctCount==1){
return this.distinctCount+" "+this.fieldName;}else{
return this.distinctCount+" "+this.pluralizeNoun(this.fieldName);}},
buildReportLinks:function(isNumeric){
var fallbackURL=Splunk.util.make_url("app",Splunk.util.getCurrentApp(),this.reportLinkViewTarget);
var moduleInstance=this;
var container=$(this.reportLinkSelector,this.popupLayer).html('<h4>'+_('Charts')+' </h4>');
var labelSet=(isNumeric)?this.numericalReportLabels.concat(this.categoricalReportLabels):this.categoricalReportLabels;
for(var i=0;i<labelSet.length;i++){
var label=labelSet[i];
var anchor=$('<a></a>').text(label).attr("rel","popup").attr("href",fallbackURL).click(function(event){
event.preventDefault();
try{
moduleInstance.launchReportLink($(this).text());}catch(e){
moduleInstance.logger.error(e)
moduleInstance.logger.error("error launching report link");}
return false;}).appendTo(container)}},
launchReportLink:function(label){
var args={
base_sid:this.search.job.getSearchId()}
var linkSearch=this.search.clone();
var eventSearch=linkSearch.job.getEventSearch();
linkSearch.abandonJob();
if(!this.module){
linkSearch.setBaseSearch(eventSearch);
linkSearch.addIntention(this.getIntentionForReportLink(label,this.fieldName));
linkSearch.sendToView(this.reportLinkViewTarget,args,true,true,{autosize:true});
return false;}
var escapedField=Splunk.util.searchEscape(this.fieldName);
var reportSearch=null;
var chartType=null;
switch(label){
case this.categoricalReportLabels[0]:
reportSearch="timechart count by "+escapedField;
chartType="line";
break;
case this.categoricalReportLabels[1]:
reportSearch="top limit=10000 "+escapedField;
chartType="bar";
break;
case this.numericalReportLabels[0]:
reportSearch="timechart avg("+escapedField+")";
chartType="line";
break;
case this.numericalReportLabels[1]:
reportSearch="timechart max("+escapedField+")";
chartType="line";
break;
case this.numericalReportLabels[2]:
reportSearch="timechart min("+escapedField+")";
chartType="line";
break;}
if(reportSearch){
linkSearch=new Splunk.Search($.trim(eventSearch)+" | "+reportSearch);
var context=new Splunk.Context();
context.set("search",linkSearch);
context.set("charting.chart",chartType);
var parent=this.module;
while(parent.parent){
parent=parent.parent;}
parent.baseContext=context;
parent.onContextChange();
parent.pushContextToChildren();}
this.close();
return false;},
getIntentionForReportLink:function(label,fieldName){
switch(label){
case this.categoricalReportLabels[0]:
return{"name":"plot","arg":{"mode":"timechart","fields":[["count","__events"]],"splitby":fieldName}}
case this.categoricalReportLabels[1]:
return{"name":"plot","arg":{"mode":"top","limit":10000,"fields":[fieldName]}}
case this.numericalReportLabels[0]:
return{"name":"plot","arg":{"mode":"timechart","fields":[["avg",fieldName]]}};
case this.numericalReportLabels[1]:
return{"name":"plot","arg":{"mode":"timechart","fields":[["max",fieldName]]}};
case this.numericalReportLabels[2]:
return{"name":"plot","arg":{"mode":"timechart","fields":[["min",fieldName]]}};
default:
this.logger.error("no intention for label=",label," fieldName=",fieldName);
break;}
return false;}});
Splunk.Popup.FieldSummaryLayerTwo=$.klass({
URL_PATTERN:"/field/summary/%(sid)s/%(fieldName)s",
POPUP_SELECTOR:".fieldValuePopup",
initialize:function(sid,fieldName,target,opener,dispatcher,options){
this.logger=Splunk.Logger.getLogger("Splunk.FieldSummary");
this.sid=sid;
this.target=$(target);
this.opener=$(opener);
this.dispatcher=dispatcher;
this.options=options||{};
this.url=Splunk.util.make_url(sprintf(this.URL_PATTERN,{sid:this.sid,fieldName:encodeURIComponent(fieldName)}));},
onUIEvent:function(event){
var reportSearch;
var chartType;
var eventType=event.type;
var eventTarget=$(event.target);
var type=eventTarget.attr("s:type");
if(eventType=="click"&&type){
var intention=eventTarget.attr("s:intention")||null;
if(intention){
try{
intention=JSON.parse(intention);}catch(e){
this.logger.error("Could not serialize intention",e);
return false;}
if(intention.hasOwnProperty("arg")){
for(var i in intention.arg){
intention.arg[i]=intention.arg[i];}}}else{
intention={};}
reportSearch=eventTarget.attr("s:reportsearch");
chartType=eventTarget.attr("s:charttype");
return this.dispatcher({"type":type,"intention":intention,"event":event,"reportSearch":reportSearch,"chartType":chartType});}},
show:function(){
$.ajax({
type:"GET",
url:this.url,
dataType:"html",
error:function(){
this.logger.error(sprintf(_("Could not load %(url)s"),{url:this.url}));}.bind(this),
complete:function(data,textStatus){
if(data.status==200){
this.renderResults(data.responseText);}else{
this.logger.error(sprintf(_("Invalid status code for %(url)s"),{url:url}));}}.bind(this)});},
hide:function(){
this.target.html("");
var popup=$(this.POPUP_SELECTOR,this.target);
popup.css("visibility","hidden");},
renderResults:function(html){
this.target.html(html);
var popup=$(this.POPUP_SELECTOR,this.target);
popup.bind("click",this.onUIEvent.bind(this));
popup.css("visibility","visible");
this.position(popup);},
position:function(popup){
var startTop=(this.options.positionFromChild)?this.opener.position():this.opener.offset().top;
popup.css("left",this.opener.offset().left+this.opener.outerWidth()).css("top",startTop)
var tbody=$(popup).find('.popupContent table tbody');
if($.browser.msie)tbody.css("display","block");
else tbody.css("display","table-row-group");
var posY=popup.offset().top;
var height=popup.height();
var wh=$(window).height();
var wst=$(window).scrollTop();
if(wh+wst<posY+height){
var diff=(posY+height)-(wh+wst)+5;
if(this.options.positionFromChild){
var pwo=popup.parents().filter(function(){
return $(this).css('overflow')=='hidden';}).filter(":first");
if(pwo.length){
var pwoTop=pwo.offset().top;
if(pwoTop>(posY-diff)){
var d=posY-pwoTop;
diff=(d>0)?d:0;}}}
if(diff>0){
var shiftUp;
if(this.options.animateOpen){
shiftUp="-="+diff+"px";
popup.animate({
top:shiftUp},"fast");}else{
shiftUp=Math.max(posY-diff,0);
popup.css("top",shiftUp);}}}}});;i18n_register({"catalog":{"+-Create new dashboard":"Create new dashboard","+-Unexpected error while creating a dashboard":"Unexpected error while creating a dashboard","+-Cancel":"Cancel","+-Save":"Save","+-Are you sure you want to delete this panel?":"Are you sure you want to delete this panel?","+-Edit %s":"Edit %s","+-Edit panel":"Edit panel","+-Create":"Create","+-Close":"Close"},"plural":function(n){return n==1?0:1;}});Splunk.Viewmaster=$.klass({
dashPopupInstance:null,
panelPopupInstance:null,
_dashPageIsStale:false,
logger:Splunk.Logger.getLogger("viewmaster.js"),
_getFormContainer:function(slot){
slot=slot||1;
var cont=$("#viewmasterFormContainer"+slot);
if(!cont.length){
cont=$('<div id="viewmasterFormContainer'+slot+'"/>').hide().appendTo('body');}
return cont;},
_buildUri:function(is_api,view_id,panel_type,panel_sequence){
var output=['viewmaster',Splunk.util.getCurrentApp()];
if(view_id!=undefined)output.push(view_id);
if(panel_type!=undefined)output.push(panel_type);
if(panel_sequence!=undefined)output.push(panel_sequence);
if(is_api)output.splice(0,1,'api');
return Splunk.util.make_url(output.join('/'));},
openDashCreateForm:function(){
this._getFormContainer().load(
this._buildUri(),
this.openDashCreateFormCallback.bind(this));},
openDashCreateFormCallback:function(){
this.dashPopupInstance=new Splunk.Popup(this._getFormContainer(),{
title:_('Create new dashboard'),
buttons:[
{
label:_('Cancel'),
type:'secondary',
callback:function(){return true;}},
{
label:_('Create'),
type:'primary',
callback:this.handleDashCreate.bind(this)}]});
$('form',this.dashPopupInstance.getPopup()).bind('submit',
this.handleDashCreate.bind(this));},
handleDashCreate:function(evt){
var formElement=$('form[name="vmCreateDashboard"]',this.dashPopupInstance.getPopup());
formElement.ajaxSubmit({'success':this.handleDashCreateCallback.bind(this),'dataType':'json'});
return false;},
handleDashCreateCallback:function(jsonObject){
if(jsonObject.success){
var newViewId=jsonObject.data['view_id'];
if(newViewId){
window.location.href=Splunk.util.make_url('app',Splunk.util.getCurrentApp(),newViewId);
this.dashPopupInstance.destroyPopup();}else{
alert(_('Unexpected error while creating a dashboard'));}}else{
for(var i=0,L=jsonObject['messages'].length;i<L;i++){
alert(jsonObject['messages'][i]['message']);}}},
dashEditFormDom:null,
panelEditFormDom:null,
activeViewId:null,
openPanelFormHelper:function(view_id,mode){
this.mode=mode;
this._getFormContainer().load(
this._buildUri(false,view_id)+(mode?'?mode='+mode:''),
this.openDashEditFormCallback.bind(this));
this.activeViewId=view_id;},
openDashEditForm:function(view_id){
this._getFormContainer().load(
this._buildUri(false,view_id),
this.openDashEditFormCallback.bind(this));
this.activeViewId=view_id;},
openDashEditFormCallback:function(){
if(this.dashPopupInstance&&this.dashPopupInstance.isActive){
this.dashPopupInstance.setPopupContents(this._getFormContainer());}else{
var title,buttons;
if(this.mode=='add'){
title=_('New panel');
buttons=[
{
label:_('Cancel'),
type:'secondary',
callback:function(){return true;}},
{
label:_('Save'),
type:'primary',
callback:function(){
this.handleAddPanel();}.bind(this)}];}else{
title=sprintf(_('Edit %s'),this.activeViewId);
buttons=[{
label:_('Close'),
type:'primary',
callback:function(){
if(this._dashPageIsStale){
window.location.href=Splunk.util.make_url('app',
Splunk.util.getCurrentApp(),
this.activeViewId);
return false;}else{
return true;}}.bind(this)}];}
this.dashPopupInstance=new Splunk.Popup(this._getFormContainer(),{
title:title,
buttons:buttons});
this.dashPopupInstance.getPopup().click(function(evt){
var target=$(evt.target);
if(!target.is('a')||!target.attr('panel_action'))return true;
switch(target.attr('panel_action')){
case'edit':
this.handleEditPanelClick(target.attr('panel_sequence'));
break;
case'delete':
this.handleDeletePanelClick(target.attr('panel_sequence'));
break;
default:
break;}
return false;}.bind(this));
this._dashPageIsStale=false;}
this.dashEditFormDom=$('form[name="vmEditDashboard"]',this.dashPopupInstance.getPopup());
this.dashAddFormDom=$('form[name="vmAddPanel"]',this.dashPopupInstance.getPopup());
var popupDom=this.dashPopupInstance.getPopup();
var searchMode=$('#vmpSearchCommandSaved').length?'saved':'string';
this.setActiveSearchModeOptions(searchMode,this.dashAddFormDom);
this.dashAddFormDom.click(
function(evt){
var target=$(evt.target);
if(target.is('input')&&target.attr('name')=='searchMode'){
this.setActiveSearchModeOptions(target.attr('value'),this.dashAddFormDom);}}.bind(this));
$('ul.vmEditReorderCanvasRow',popupDom).sortable({'forcePlaceholderSize':true,'placeholder':'vmPanelDropPlaceholder','connectWith':$('ul.vmEditReorderCanvasRow',popupDom),'cursor':'move'}).disableSelection();
$('ul.vmEditReorderCanvasRow',popupDom).bind('sortstop',
this.handleEditDashSave.bind(this));
$('#vmAddPanelSubmit',popupDom).click(this.handleAddPanel.bind(this));},
handleAddPanel:function(){
var formElement=$('form[name="vmAddPanel"]',this.dashPopupInstance.getPopup());
formElement.ajaxSubmit({'success':this.handleAddPanelCallback.bind(this),'dataType':'json'});
return false;},
handleAddPanelCallback:function(jsonObject){
if(jsonObject.success){
if(this.mode=='add'){
this.mode=null;
this.dashPopupInstance.destroyPopup();
$(document).trigger('RefreshPage');
return;}
this.openDashEditForm(this.dashEditFormDom.attr('view_id'));
this._dashPageIsStale=true;}else{
for(var i=0,L=jsonObject['messages'].length;i<L;i++){
alert(jsonObject['messages'][i]['message']);}}},
handleDeletePanelClick:function(panel_sequence){
if(!confirm(_('Are you sure you want to delete this panel?'))){
return;}
$.post(
this._buildUri(false,
this.dashEditFormDom.attr('view_id'),'panel',
panel_sequence),
{'action':'delete'},
this.handleDeletePanelClickCallback.bind(this),'json');},
handleDeletePanelClickCallback:function(jsonObject){
if(jsonObject.success){
this.openDashEditForm(this.dashEditFormDom.attr('view_id'));
this._dashPageIsStale=true;}else{
alert('delete failed');}},
handleEditDashSave:function(evt,ui){
$.post(
this._buildUri(
false,
this.dashEditFormDom.attr('view_id')),
{'action':'edit','view_json':JSON.stringify(this.dashFormToJson())},
this.handleEditDashSaveCallback.bind(this),'json');
this._lastUpdateTime=new Date();},
handleEditDashSaveCallback:function(jsonObject){
if(jsonObject.success){
this.logger.info('Updated dashboard');
if(this.mode=='move'){
this._dashPageIsStale=true;
return;}
this.openDashEditForm(this.dashEditFormDom.attr('view_id'));
this._dashPageIsStale=true;}else{
for(var i=0,L=jsonObject.messages.length;i<L;i++){
alert('dashboard failed in updating: '+jsonObject.messages[i].message);}}},
dashFormToJson:function(){
var output={'new_panel_sequence':[]};
var rowSet;
$('.vmEditReorderCanvas ul',this.dashEditFormDom).each(function(){
rowSet=[];
$('li',this).each(function(){
var s=parseInt($(this).attr('panel_sequence'),10);
if(!isNaN(s)){rowSet.push(s);}});
output['new_panel_sequence'].push(rowSet);});
return output;},
handleEditPanelClick:function(panel_sequence){
this._getFormContainer('2').load(
this._buildUri(false,
this.dashEditFormDom.attr('view_id'),'panel',
panel_sequence),
this.handleEditPanelClickCallback.bind(this));},
handleEditPanelClickCallback:function(jsonObject){
this.panelPopupInstance=new Splunk.Popup(this._getFormContainer('2'),{
title:_('Edit panel'),
buttons:[
{
label:_('Cancel'),
type:'secondary',
callback:function(){return true;}},
{
label:_('Save'),
type:'primary',
callback:this.handleEditPanelSave.bind(this)}]});
$('form',this.panelPopupInstance.getPopup()).bind('submit',
this.handleEditPanelSave.bind(this));
var popupDom=this.panelPopupInstance.getPopup();
this.panelEditFormDom=$('form',popupDom);
popupDom.css('z-index',
parseInt(popupDom.css('z-index')+1,10));
this.setActiveSearchModeOptions(this.panelEditFormDom.attr('current_search_mode'));
this.setActiveDrilldownOptions();
this.panelEditFormDom.click(
function(evt){
var target=$(evt.target);
if(target.is('input')&&target.attr('name')=='searchMode'){
this.setActiveSearchModeOptions(target.attr('value'));}}.bind(this));
$("select#vmpPanelClass").change(
function(evt){
var target=$(evt.target);
this.logger.debug(target.attr('name'));
this.setActiveDrilldownOptions(target.val());}.bind(this));},
setActiveDrilldownOptions:function(panelStyle){
if(!panelStyle){
panelStyle=$("select#vmpPanelClass").val();}
var tableOptions=$("div.tableDrilldown",this.panelEditFormDom);
var chartOptions=$("div.chartDrilldown",this.panelEditFormDom);
var entireFieldSet=$("fieldset.drilldownOptions",this.panelEditFormDom);
switch(panelStyle){
case"table":
tableOptions.show();
chartOptions.hide();
entireFieldSet.show();
break;
case"chart":
chartOptions.show();
tableOptions.hide();
entireFieldSet.show();
break;
default:
entireFieldSet.hide();
break;}},
setActiveSearchModeOptions:function(searchMode,targetDom){
var panelForm=targetDom||this.panelEditFormDom;
switch(searchMode){
case'string':
$('#vmpSearchModeString',panelForm).prop('checked',true);
$('.searchModeString',panelForm).show();
$('.searchModeSaved',panelForm).hide();
$('.searchModeString .control',panelForm).prop('disabled',null);
$('.searchModeSaved .control',panelForm).prop('disabled','disabled');
break;
case'saved':
$('#vmpSearchModeSaved',panelForm).prop('checked',true);
$('.searchModeString',panelForm).hide();
$('.searchModeSaved',panelForm).show();
$('.searchModeString .control',panelForm).prop('disabled','disabled');
$('.searchModeSaved .control',panelForm).prop('disabled',null);
break;
default:
break;}},
handleEditPanelSave:function(){
var form=$("select#vmpPanelClass")[0].form;
var panelStyle=$("select#vmpPanelClass").val();
var drilldownEnabledStyles=["chart","table"];
var hiddenInput=$(form["option.drilldown"]);
for(var i=0;i<drilldownEnabledStyles.length;i++){
var radioElt=$('input[name='+drilldownEnabledStyles[i]+'_option.drilldown]:checked');
if(panelStyle==drilldownEnabledStyles[i]){
hiddenInput.val(radioElt.val());}
radioElt.remove();}
if(drilldownEnabledStyles.indexOf(panelStyle)==-1){
hiddenInput.remove();}
this.panelEditFormDom.ajaxSubmit({'success':this.handleEditPanelSaveCallback.bind(this),'dataType':'json','url':this.panelEditFormDom.attr('action')+'/'+this.panelEditFormDom.attr('panel_sequence')});
return false;},
handleEditPanelSaveCallback:function(jsonObject){
if(jsonObject.success==true){
this._dashPageIsStale=true;
this.panelPopupInstance.destroyPopup();
this.openDashEditForm(this.panelEditFormDom.attr('view_id'));}else{
for(var i=0,L=jsonObject.messages.length;i<L;i++){
alert('saved panel FAILED: '+jsonObject.messages[i].message);}}}});;
Splunk.TextareaResize=$.klass({
MAX_HEIGHT_MULTIPLE:5,
MAX_HEIGHT:null,
LINE_HEIGHT:null,
initialize:function(textarea,options){
this.logger=Splunk.Logger.getLogger("textarea_resize.js");
if(!textarea){
this.logger.error('Splunk.TextareaResize: No textarea to resize specified');}else{
this.input=$(textarea);
this.inputContent=null;
this.shadow=null;
this._options={
max_lines:this.MAX_HEIGHT_MULTIPLE};
if(options)$.extend(this._options,options);
this.LINE_HEIGHT=parseInt(this.input.css('lineHeight'),10)||parseInt(this.input.css('fontSize'),10)+1||20;
this.MAX_HEIGHT=this._options['max_lines']*this.LINE_HEIGHT;
this._createShadow();
this._setupEventHandlers();
this._resizeSearchBar();}},
_setupEventHandlers:function(){
this.input.focus(this._startObserving.bind(this));
this.input.blur(this._stopObserving.bind(this));
this.input.one('keyup',this._onKeyUp.bind(this));
$(window).resize(this._onResize.bind(this));},
_createShadow:function(){
if(!this.shadow){
var styleAttrs=new Array('paddingTop','paddingRight','paddingBottom','paddingLeft','fontSize','lineHeight','fontFamily','fontWeight','wordWrap','whiteSpace');
this.shadow=$('<div class="shadowTextarea"></div>').css({'position':'absolute','left':'-9999px','top':'-9999px','marginRight':"-3000px"}).appendTo(this.input.parent());
if($.browser.mozilla&&$.browser.version.substr(0,3)<"1.9"){
this.shadow.css('position','fixed');}
var context=this;
$.each(styleAttrs,function(){
attr=this.toString();
value=context.input.css(attr);
value=(value=="pre")?"normal":value;
context.shadow.css(attr,value);});
this._adjustShadowWidth();}},
_adjustShadowWidth:function(){
if(this.shadow){
this.shadow.css('width',this.input.width());}},
_resizeSearchBar:function(){
if(this.input.val()!=this.inputContent){
this.inputContent=this.input.val();
var textareaContent=$('<div/>').text(this.inputContent).html().replace(/\n/g,'<br />')
+"<span class=''></span>";
this.shadow.html(textareaContent);
this._adjustShadowWidth();
if(Math.abs(this.shadow.height()-this.input.height())>3){
var newHeight=this.shadow.height();
if(newHeight>=this.MAX_HEIGHT)
this._setHeight(this.MAX_HEIGHT,'auto');
else if(newHeight<=this.LINE_HEIGHT)
this._setHeight(this.LINE_HEIGHT,'hidden');
else
this._setHeight(newHeight,'hidden');}}},
_setHeight:function(height,overflow){
curratedHeight=Math.floor(parseInt(height,10));
if(this.input.height()!=curratedHeight){
this.input.css({'height':curratedHeight+'px','overflow':overflow});}},
_startObserving:function(){
this.timer=setInterval(function(){
this._resizeSearchBar()}.bind(this),50);},
_stopObserving:function(){
clearInterval(this.timer);},
_onResize:function(){
this._adjustShadowWidth();
this._resizeSearchBar();},
_onKeyUp:function(){
this._startObserving();},
_getcaretPosition:function(){
var caretPos=0;
inputControl=this.input[0];
if(document.selection){
inputControl.focus();
var sel=document.selection.createRange();
sel.moveStart('character',-inputControl.value.length);
caretPos=sel.text.length;}else if(inputControl.selectionStart||inputControl.selectionStart=='0'){
caretPos=inputControl.selectionStart;}
return(caretPos);},
caretIsLast:function(){
return(this._getcaretPosition()>=this.input.val().length);},
isMultiline:function(){
lineCount=Math.round(this.input.height()/this.LINE_HEIGHT);
return(lineCount>1);}});;Splunk.namespace("Splunk.scroller");
Splunk.scroller.YAxis=$.klass({
RESIZE_BUFFER_TIME:250,
SCROLL_BUFFER_TIME:250,
UPDATE_SCROLLER_PIXEL_ADJUSTMENT:{other:-12,msie:-22},
initialize:function(scrollerMinHeight,scrollerMaxHeight,container,enabledClassName,options){
this.logger=Splunk.Logger.getLogger("Splunk.scroller.YAxis");
this.scrollerMinHeight=scrollerMinHeight;
this.scrollerMaxHeight=scrollerMaxHeight;
this.container=$(container);
this.enabledClassName=enabledClassName;
this.options=options||{};
this.bottomLockHeight=this.options.hasOwnProperty("bottomLockHeight")?this.options.bottomLockHeight:-1;
this.topLockHeight=this.options.hasOwnProperty("topLockHeight")?this.options.topLockHeight:-1;
this.scrollHeightAdjust=this.options.hasOwnProperty("scrollHeightAdjust")?this.options.scrollHeightAdjust:0;
this.logScrollHeightDelta=this.options.hasOwnProperty("logScrollHeightDelta")?this.options.logScrollHeightDelta:false;
this.lockBottom=false;
this.lockTop=false;
this.onResizeBuffer=[];
this.onScrollBuffer=[];
$(window).bind("resize",this.onResize.bind(this));
$(this.container).bind("scroll",this.onScroll.bind(this));
this.container.addClass(this.enabledClassName);
this.onResize();},
destroy:function(){
$(window).unbind("resize",this.onResize.bind(this));
$(this.container).unbind("scroll",this.onScroll.bind(this));
this.container.removeClass(this.enabledClassName);
this.container.height("");},
onResize:function(){
this.onResizeBuffer.push("");
setTimeout(
function(){
if(this.onResizeBuffer.length>0){
var pixelAdjustment=(jQuery.browser.msie)?this.UPDATE_SCROLLER_PIXEL_ADJUSTMENT.msie:this.UPDATE_SCROLLER_PIXEL_ADJUSTMENT.other;
var height=($(window).height()+Splunk.util.getPageYOffset()+pixelAdjustment)-Splunk.util.getCumlativeOffsetTop(this.container[0]);
height=Math.min(height,this.scrollerMaxHeight);
height=Math.max(height,this.scrollerMinHeight);
this.onResizeBuffer=[];
this.container.height(height);}}.bind(this),
this.RESIZE_BUFFER_TIME);},
onScroll:function(){
this.onScrollBuffer.push("");
setTimeout(
function(){
if(this.onScrollBuffer.length>0){
this.onScrollBuffer=[];
var bottomPosition=this.container[0].offsetHeight+this.container[0].scrollTop
if(this.logScrollHeightDelta){
this.logger.info("logScrollHeightDelta",(this.container[0].offsetHeight+this.container[0].scrollTop)-(this.scrollHeight()-this.scrollHeightAdjust));}
if(bottomPosition>=this.scrollHeight()){
this.lockBottom=true;
this.lockTop=false;
return;}
this.lockBottom=false;
if(this.container[0].scrollTop<=this.topLockHeight){
this.lockTop=true;
this.lockBottom=false;
return;}
this.lockTop=false;
return;}}.bind(this),
this.SCROLL_BUFFER_TIME);},
scrollHeight:function(){
return this.container[0].scrollHeight+parseInt(this.container.css("margin-top"),10)+parseInt(this.container.css("margin-bottom"),10)+this.scrollHeightAdjust;},
snap:function(){
if(this.lockBottom){
this.logger.info("snap back to bottom");
this.container[0].scrollTop=this.scrollHeight();}else if(this.lockTop){
this.logger.info("snap back to top");
this.container[0].scrollTop=0;}},
reset:function(){
this.onResize();
this.snap();}});;
Splunk.TimeSpinner=$.klass({
initialize:function(el,options){
this.logger=Splunk.Logger.getLogger("timespinner.js");
if(!el){
this.logger.error('Splunk.TimeSpinner: No container element specified');}else{
this.wrapperEl=$(el);
this._options={
hours:'00',
minutes:'00',
seconds:'00',
milliseconds:'000'};
if(options)$.extend(this._options,options);
this._createDom();
this._initializeSpinners();}},
_createDom:function(){
var tsHtml=$("<div class='TimeSpinner'></div>");
var hours=$("<input class='hours tsInput' />").attr('value',this._options['hours']);
var minutes=$("<input class='minutes tsInput' />").attr('value',this._options['minutes']);
var seconds=$("<input class='seconds tsInput' />").attr('value',this._options['seconds']);
var milliseconds=$("<input class='milliseconds tsInput' />").attr('value',this._options['milliseconds']);
tsHtml.append(hours).append("<div class='colon'>:</div>").append(minutes).append("<div class='colon'>:</div>").append(seconds).append("<div class='colon'>.</div>").append(milliseconds);
this.wrapperEl.append(tsHtml);},
_initializeSpinners:function(){
var context=this;
$('input',this.wrapperEl).each(function(){
var padding=$(this).val().length;
$(this).bind('keyup',function(e){
context._keyup(e,this,padding);}).bind('keydown',function(e){
return context._keydown(e,this,padding);}).bind('click',function(){
$(this).focus();
$(this).select();}).bind('focus',function(){
var reference=this;
setTimeout(function(){$(reference).select();},0);}).bind('blur',function(){
context._formatEntry(this,padding);});});},
_getCaretPosition:function(ctrl){
var CaretPos=0;
if(document.selection){
ctrl.focus();
var Sel=document.selection.createRange();
var SelLength=document.selection.createRange().text.length;
Sel.moveStart('character',-ctrl.value.length);
CaretPos=Sel.text.length-SelLength;}
else if(ctrl.selectionStart||ctrl.selectionStart=='0')
CaretPos=ctrl.selectionStart;
return(CaretPos);},
_setCaretPosition:function(elem,caretPos){
elem=$(elem)[0];
if(elem!=null){
if(elem.createTextRange){
var range=elem.createTextRange();
range.move('character',caretPos);
range.select();}else{
if(elem.selectionStart){
elem.focus();
elem.setSelectionRange(caretPos,caretPos);}else
elem.focus();}}},
_keydown:function(e,el,padding){
if((e.keyCode>=96&&e.keyCode<=105)||(e.keyCode>=48&&e.keyCode<=57)){
if($(el).val().length>=padding&&!this._isTextHighlighted($(el)[0])){
return false;}}
return true;},
_keyup:function(e,el,padding){
if(e.keyCode==9||e.keyCode==16){
return;}
if(e.keyCode==$.ui.keyCode.RIGHT||e.keyCode==$.ui.keyCode.LEFT){
var len=$(el).val().toString().length;
var carPos=this._getCaretPosition(el);
var nextInput;
if((e.keyCode==$.ui.keyCode.RIGHT)&&(carPos==len)&&!$(el).is('.milliseconds')){
$(el).blur();
nextInput=$('input',this.wrapperEl).eq($('input',this.wrapperEl).index(el)+1);
nextInput.focus();}else if((e.keyCode==$.ui.keyCode.LEFT)&&(carPos==0)&&!$(el).is('.hours')){
$(el).blur();
nextInput=$('input',this.wrapperEl).eq($('input',this.wrapperEl).index(el)-1);
nextInput.focus();}}else if((e.keyCode>=96&&e.keyCode<=105)||(e.keyCode>=48&&e.keyCode<=57)){
if($(el).val().length>padding){
$(el).val($(el).val().substr(0,2));}}else{
$(el).val($(el).val().replace(/[^0-9]/g,''));}},
_formatEntry:function(el,padding){
$(el).val($(el).val().replace(/[^0-9]/g,''));
var result=$(el).val();
while(padding&&(result.length<padding)){
result='0'+result;}
$(el).val(result);},
disable:function(){
this.wrapperEl.addClass('tsDisabled').find('input').attr('disabled','disabled');},
enable:function(){
this.wrapperEl.removeClass('tsDisabled').find('input').removeAttr('disabled');},
_isTextHighlighted:function(ctrl){
if(document.selection){
ctrl.focus();
var Sel=document.selection.createRange();
var SelLength=document.selection.createRange().text.length;
if(SelLength>0){
return true;}}
else if(ctrl.selectionStart!=ctrl.selectionEnd){
return true;}
return false;}});;i18n_register({"catalog":{"+-No updates found.":"No updates found.","+-<a href='/' class='splButton-primary connectErrorContinue'><span>Continue &raquo;</span></a>":"<a href='/' class='splButton-primary connectErrorContinue'><span>Continue &raquo;</span></a>","+-Loading...":"Loading...","+-Checking for updates...":"Checking for updates...","+-Skip update":"Skip update"},"plural":function(n){return n==1?0:1;}});
var REMOTE_SCRIPT_LOAD_TIMEOUT=10000;
var MESSAGE_DISPLAY_DELAY=5000;
var NON_MESSAGE_DISPLAY_DELAY=1000;
var UPDATE_CHECKER_DISPLAY_DELAY=1500;
var D={
debug:function(msg){this.msg(msg);},
info:function(msg){this.msg(msg);},
warn:function(msg){this.msg(msg);},
error:function(msg){this.msg(msg);},
msg:function(msg){if(window.console)window.console.log(msg);}};
function getLicenseType(){
return CONFIG.licenseType;}
function getTipsOffset(){
var count=$.cookie("tipsOffset")||0;
return parseInt(count,10);}
function incrementTipsOffset(){
var count=getTipsOffset();
$.cookie("tipsOffset",count+1,{'expires':1000});}
function goHome(timeOutInMilliseconds,allowRedirect){
var location="/";
if(allowRedirect&&CONFIG.return_to){
location=CONFIG.return_to;}
if(timeOutInMilliseconds){
setTimeout('document.location = "'+location+'"',timeOutInMilliseconds);}else{
document.location=location;}}
function getUpdateCheckerURL(checkerLocation){
var segments=[
getLicenseType(),
CONFIG.versionNumber,
checkerLocation,
CONFIG.installType,
CONFIG.skin];
var uidParam=encodeURIComponent($.cookie('uid')||null);
var url=CONFIG.updateCheckerBaseURL
+segments.join("/")
+'?locale='+CONFIG.locale
+'&cpu_arch='+encodeURIComponent(CONFIG.cpu_arch)
+'&os_name='+encodeURIComponent(CONFIG.os_name)
+'&guid='+CONFIG.guid
+'&uid='+uidParam
+'&license_desc='+encodeURIComponent(CONFIG.license_desc);
if(checkerLocation=="tips"){
url+="&offset="+getTipsOffset();}
return url;}
function initUpdateChecker(){
D.debug('initUpdateChecker - START');
if(getLicenseType()=="free"){
$('#mainPanel').hide();
$('#freeMessageContainer').html('<div class="checkingForUpdatesWrapper"><div class="checkingForUpdates">'+_('Checking for updates...')+'</div></div>').show();
D.debug('checking for updates');
var nullTimeout=setTimeout(fireInitialSplunkDotComRequest,UPDATE_CHECKER_DISPLAY_DELAY);}else{
fireInitialSplunkDotComRequest();}}
function fireInitialSplunkDotComRequest(){
sendSplunkDotComRequest("login");
window.cannotConnectTimeout=setTimeout(handleInitUpdateTimeout,REMOTE_SCRIPT_LOAD_TIMEOUT);}
function handleInitUpdateTimeout(timerId){
if($("#updateCheckerContainer").hasClass("updatesActive")||$("#tipsCheckerContainer").hasClass("tipsActive")||$("#freeUpdateCheckerContainer").hasClass("updatesActive")){
return false;}else{
D.debug("The request to splunk.com is taking so long that we assume we cannot connect.");
if(getLicenseType()=="free"&&!CONFIG.hasErrorMessage){
displayFallbackTipsContent();
$("#freeMessageContainer").html(_("<a href='/' class='splButton-primary connectErrorContinue'><span>Continue &raquo;</span></a>")).show();}else{
D.debug("handleInitUpdateTimeout - license not free or there is error");
displayBannerFrame('connectError');}}}
function sendSplunkDotComRequest(checkerLocation){
D.debug('sendSplunkDotComRequest - trying: '+getUpdateCheckerURL(checkerLocation));
$.ajax({
dataType:'script',
type:'GET',
url:getUpdateCheckerURL(checkerLocation)});}
function displaySpot(spotParams){
if(window.cannotConnectTimeout)clearTimeout(window.cannotConnectTimeout);
var allBetsAreOff=false;
var spotLocation=spotParams["location"]||false;
if(!spotLocation){
D.error("displaySpot - response did not contain a 'location' key. This should never happen.");
spotLocation="login";
allBetsAreOff=true;}
var url=spotParams["url"]||false;
D.debug("displaySpot - splunk.com responded for location="+spotLocation+" and is sending us to url="+url);
var product=getLicenseType();
if(spotLocation=="tips"){
incrementTipsOffset();}
if((product=="free")&&(spotLocation=="login")){
D.debug('displaySpot - rendering free update');
var message='';
if(spotParams['hasNewVersion']){
message='<div class="freeMessageUpdate"><a href="http://www.splunk.com/r/download" class="splButton-primary"><span>Download</span></a>';
message+='|<a class="skipUpdate" href="javascript:sendSplunkDotComRequest(\'tips\');">'
+_('Skip update')
+'</a></div>';}else if(!CONFIG.hasErrorMessage){
message="<div class='checkingForUpdatesWrapper'><div class='noUpdatesFound'>"+_('No updates found.')+"</div></div>";
if(allBetsAreOff){
goHome(MESSAGE_DISPLAY_DELAY,true);}else{
sendSplunkDotComRequest('tips');}}
if(url){
D.debug('displaySpot - rendering URL: '+url);
displayBannerFrame(url);}
$('#mainPanel').hide();
$("#freeMessageContainer").html(message).show();}else{
if(url){
D.debug('displaySpot - rendering URL: '+url);
if(spotLocation=="login"){
displayBannerFrame(url);}else if(spotLocation=="tips"){
displayTipsFrame(url);}else{
D.error('Update checker got unrecognized location: '+spotLocation);}}else if((product=="free")&&(spotLocation=="tips")){
D.debug('displaySpot - no URL when requesting free/tips');
$("#freeMessageContainer").html(_('Loading...')).show();
goHome(NON_MESSAGE_DISPLAY_DELAY,true);}}}
function displayBannerFrame(url,spotParams){
spotParams=spotParams||{};
D.debug('displayBannerFrame - spotParams='+spotParams);
if(url=='connectError'){
$('#connectError').show();}else{
var product=getLicenseType();
var iframe;
if(product=="free"){
$("#freeUpdateCheckerContainer").addClass("updatesActive").show();
iframe=$("#freeUpdateChecker");}else{
$("#updateCheckerContainer").addClass("updatesActive").show();
iframe=$("#updateChecker");}
iframe.attr('src',url);
if(spotParams.hasOwnProperty('height')){
iframe.height(spotParams["height"]);}
if(spotParams.hasOwnProperty("failsafeCSSText")){
iframe.css(""+spotParams["failsafeCSSText"]);}}}
function displayTipsFrame(url){
$("#updateCheckerContainer").hide();
if(url=='connectError'){
$('#connectError').show();}else{
$('#userMessaging').hide();
$('#authWrapper').hide();
$("#freeMessageContainer").hide();
$("#infoContainer").hide();
$("#tipsCheckerContainer").addClass('tipsActive').show();
$("#tipsChecker").attr('src',url);}}
function displayFallbackTipsContent(){
var fallbackURL=CONFIG.tipsCheckerCannotConnectBannerPath;
D.debug("displayFallbackTipsContent - START");
displayTipsFrame('connectError');}
function passwordHintClick(){
if($('#protrial').is(':visible')){
$('#protrial').hide();}else{
$('#protrial').fadeIn('fast');}
return false;}
function hidePasswordHint(){
$('#protrial').hide();};i18n_register({"catalog":{"+-<p class=\"dashboardPromptMessage\">This dashboard is empty. <a href=\"#\">Edit the dashboard</a> to add a panel.</p>":"<p class=\"dashboardPromptMessage\">This dashboard is empty. <a href=\"#\">Edit the dashboard</a> to add a panel.</p>","+-refreshed: <b>%(dateText)s</b>":"refreshed: <b>%(dateText)s</b>","+-today at %(timeText)s.":"today at %(timeText)s."},"plural":function(n){return n==1?0:1;}});
Splunk.DashboardManager=$.klass({
dateDict:{},
NOW_REFRESHED_TIME:_("<b>real-time</b>"),
TODAY_REFRESHED_TIME:_("today at %(timeText)s."),
GENERIC_REFRESHED_TIME:_("<b>%(dateText)s ago</b>"),
FULL_REFRESHED_TIME:_("refreshed: %(dateText)s"),
DISPLAY_REFLOW_EVENT:'Splunk.Events.REDRAW',
PANEL_DROP_EVENT:'Splunk.Events.PANEL_DROP',
windowWidth:$(window).width(),
initialize:function(){
$(document).bind('jobResurrected',this.onJobExists.bind(this));
$(document).bind('jobDispatched',this.onJobExists.bind(this));
$(document).bind('jobProgress',this.onJobProgress.bind(this));
var that=this;
this.titleHeaders=$('.layoutCell .splHeader h2');
this.handlePanelResize();
var timeoutID=null;
$(window).bind('resize',function(){
if($(window).width()!=that.windowWidth){
that.windowWidth=$(window).width();
if(timeoutID)
window.clearTimeout(that.timeoutID);
timeoutID=window.setTimeout(function(){
$(window).trigger("real_resize");},100);}});
$(window).bind('real_resize',this.handlePanelResize.bind(this));
$(document).bind('allModulesLoaded',this.handlePanelResize.bind(this));
$(document).bind('jobDone',function(){
if(!this.editMode){
setTimeout(this.equalizeHeights,500);}}.bind(this));
$(document).bind('ChartManualResize',this.handlePanelResize.bind(this));
$(document).bind('RefreshPage',this.softRefresh.bind(this));
$(document).bind('PrintStart',this.insertPageBreakers.bind(this));
$(document).bind('PrintEnd',this.removePageBreakers.bind(this));
this.searchIdToGroupNames={};
this.panelRowsSelector='div.layoutRow[class*="panel_row"]';
this.$panelRows=$(this.panelRowsSelector);
this.$isAwesomeBrowser=!($.browser.msie&&$.browser.version<9);
this.equalizeHeights();
var dragAndDropEnabled=false;
if(Splunk.ViewConfig&&!($.browser.msie&&$.browser.version==6)&&0==$(".FlashWrapperContainer").length){
dragAndDropEnabled=(Splunk.ViewConfig.view.nativeObjectMode=="SimpleDashboard")&&Splunk.ViewConfig.view.canWrite&&!Splunk.ViewConfig.view.hasRowGrouping;}
this.editMode=false;
$(document).bind('Splunk.Module.DashboardTitleBar.editMode',function(event,enabled){
var $paneledit=$('.paneledit');
if(enabled){
$paneledit.show();
if(dragAndDropEnabled){
that.dragAndDropControllerInit();
that.editMode=true;}}else{
$paneledit.hide();
if(dragAndDropEnabled){
that.dragAndDropControllerDestroy();
that.editMode=false;}}}.bind(this));
that.panelEditInit();
this.messenger=Splunk.Messenger.System.getInstance();},
softRefresh:function(excludeGimpId){
var frag={};
var gimps=$('.Gimp');
for(var i=0;i<gimps.length;i++){
var gimpId=gimps[i].id;
if(gimpId==excludeGimpId){
continue;}
var gimpModule=Splunk.Globals['ModuleLoader'].getModuleInstanceById(gimpId);
var search=gimpModule.getContext().get("search");
if(!search||!search.job)continue;
var sid=search.job.getSearchId();
if(!sid)continue;
var meta=gimpModule.container.closest('.dashboardCell').find('.paneledit').attr("data-sequence");
frag['panel_'+meta+".sid"]=sid;
search.job.setAsAutoCancellable(false);}
frag['edit']=1;
window.location.hash=Splunk.util.propToQueryString(frag);
window.location.reload();},
menusGC:function(orig){
var that=this;
$('.paneledit').each(function(){
if(this!=orig){
that.hideMenu(this.actionsMenu);}});},
hideMenu:function(menu){
if(menu){
menu.getMenu().remove();
menu=null;}},
panelEditInit:function(){
var that=this;
$('.paneledit').click(function(event){
that.menusGC(this);
if(this.actionsMenu&&this.actionsMenu.getMenu().is(':visible')){
that.hideMenu(this.actionsMenu);
event.stopImmediatePropagation();
return false;}
that.hideMenu(this.actionsMenu);
var meta=$(this);
var sequence=meta.attr('data-sequence');
var intersectX=meta.attr('data-intersect-x');
var intersectY=meta.attr('data-intersect-y');
var dashboardId=meta.attr('data-dashboard-id');
var app=meta.attr('data-app');
var panelType=meta.attr('data-paneltype');
var id=$($('.Gimp')[sequence]).attr('id');
var gimpModule=Splunk.Globals['ModuleLoader'].getModuleInstanceById(id);
var panelSettings=gimpModule.getPanelSettings(panelType,'options.');
panelSettings.id=dashboardId;
panelSettings.panelType=panelType;
panelSettings.enable_fragment_id=0;
panelSettings.enable_controls=1;
var context=null,search=null,job=null;
context=gimpModule.getContext();
if(context)search=context.get('search');
if(search)job=search.job;
if(!job||job.areResultsTransformed())
panelSettings.is_transforming=true;
else
panelSettings.is_transforming=false;
var editVisualizationHref=Splunk.util.make_url('paneleditor',app,'edit',intersectX,intersectY)+'?'+Splunk.util.propToQueryString(panelSettings);
var menuDict=[
{
label:'Edit search',
uri:Splunk.util.make_url('paneleditor',app,'searchedit',intersectX,intersectY)+'?id='+encodeURIComponent(dashboardId),
callback:function(event){
$(document).trigger('SessionTimeout.Jobber');
that.showExpose(id);
var options={
onBeforeDestroy:function(){
$(document).trigger('SessionStart.Jobber');
$(".dashboardCellEditable").removeClass("dashboardCellActive");
that.hideExpose();},
onFrameLoad:function(popup,iframe){
$(document).bind('panelsave',function(){
popup.destroyPopup();
that.softRefresh(id);});},
isModal:false,
pclass:'panelEditorPopup'};
Splunk.Popup.IFramer(event.target.href,_("Edit search"),options);
return false;}},
{
label:'Edit visualization',
uri:editVisualizationHref,
callback:function(event){
$(document).trigger('SessionTimeout.Jobber');
var id=$($('.Gimp')[sequence]).attr('id');
that.showExpose(id);
var options={
onBeforeDestroy:function(){
$(document).trigger('SessionStart.Jobber');
$(".dashboardCellEditable").removeClass("dashboardCellActive");
that.hideExpose();},
onFrameLoad:function(popup,iframe){
$(document).bind('panelsave',function(){
popup.destroyPopup();
that.softRefresh();});},
isModal:false,
pclass:'panelEditorPopup'};
Splunk.Popup.IFramer(event.target.href,_("Edit visualization"),options);
return false;}},
{
label:'Delete',
uri:'',
callback:function(event){
that.showExpose(id);
setTimeout(function(){
var deletePanel=confirm(_('Are you sure you would like to delete this panel?'));
that.hideExpose();
if(deletePanel){
var url=Splunk.util.make_url('paneleditor',app,'delete',intersectX,intersectY)+'?'+Splunk.util.propToQueryString({id:dashboardId});
$.ajax({
url:url,
type:'POST',
timeout:10000,
complete:function(jqXHR,textStatus){
if(jqXHR.status==204){
meta.closest('.layoutCell').remove();
that.resetSequence();
that.softRefresh(id);}else{
alert(_('Sorry, the specified panel could not be deleted.'));}}});}},600);
return false;}}];
this.actionsMenu=new Splunk.MenuBuilder({
menuDict:menuDict,
activator:(that.$isAwesomeBrowser?meta:meta.parent()),
menuClasses:'splMenu-primary'});
this.actionsMenu.showMenu();
return false;});},
panelRowsAddOverlayLayers:function(doBind){
var that=this;
that.isDNDEditMode=doBind;
if(doBind){
$(window).unbind("real_resize",doAddOverlays);
$(window).bind("real_resize",doAddOverlays);
doAddOverlays();}
function doAddOverlays(e){
if(!that.isDNDEditMode){
return;}
var start=DebugUtils.getCurrfentTime();
var mySelection=$(that.panelRowsSelector);
mySelection.find(".vmPanelDropPlaceholderOverlay").remove();
if(!that.$isAwesomeBrowser){
mySelection.children().css({"z-index":"1"});}
mySelection.find(".layoutCellInner").each(function(){
var overlayNode=$(document.createElement("div")).addClass("layoutCellInner vmPanelDropPlaceholderOverlay");
$(this).after(overlayNode);
var ieThingy=25;
var height=($(this).parent().height());
if(!that.$isAwesomeBrowser)
height-=ieThingy;
height+="px";
var top=that.$isAwesomeBrowser?"0":ieThingy+"px";
bindAttributes(overlayNode,($(this).parent().width()-15)+"px",height,top);
if(!that.$isAwesomeBrowser){
var overlayNode=$(document.createElement("div")).addClass("layoutCellInner vmPanelDropPlaceholderOverlay");
$(this).after(overlayNode);
bindAttributes(overlayNode,($(this).parent().width()-100)+"px",ieThingy+"px",0);}});
function bindAttributes(element,width,height,top){
element.css({'width':width,'height':height,'z-index':2,'top':top}).bind({
mouseover:function(){
var selection=$(this).parent().children().first();
selection.css("box-shadow","0 0 5px #1d7c9b");
selection.find(".dashboardContent, .splHeader").css("opacity","0.6");},
mouseout:function(){
that.dragAndDropMouseOut($(this).parent().children().first());}});}
DebugUtils.trace("doAddOverlays",start);}},
dragAndDropMouseOut:function(selection){
if(selection){
selection.css("box-shadow","0 0 5px #CCCCCC");
selection.find(".dashboardContent, .splHeader").css("opacity","1.0");}
else{
this.dragAndDropMouseOut($(this.panelRowsSelector).find('.layoutCellInner'));}},
dragAndDropControllerInit:function(){
var that=this;
var maxHeight=250;
var newRowHeight=20;
var sortableParameters={
connectWith:that.panelRowsSelector,
placeholder:'vmPanelDropPlaceholder',
opacity:0.7,
tolerance:'pointer',
cursor:'move',
delay:100,
cursorAt:{top:(maxHeight/2)},
handle:'.vmPanelDropPlaceholderOverlay'};
if(!this.$isAwesomeBrowser){
sortableParameters.helper=function(){
return $('<div style="border:4px dashed #cccccc;"></div>');};
sortableParameters.opacity=1;}
$('.splLastRefreshed').hide();
$(that.panelRowsSelector).fadeOut('fast',function(){$(this).fadeIn('fast');});
$(".editmode > .splButton-tertiary.move").hide();
_removeEmptyRows();
$(that.panelRowsSelector).find(".layoutCell").css({"max-height":(maxHeight+"px")}).find(".layoutCellInner").css({"min-height":"0","max-height":((maxHeight-10)+"px"),"overflow":"hidden"}).find(".dashboardContent").css({"max-height":((maxHeight-60)+"px"),"overflow":"hidden"});
that.panelRowsAddOverlayLayers(true);
_generateEmptyRows(false);
that.changeChartFlow();
function _bindEvents(){
var myRowSelection=$(that.panelRowsSelector);
myRowSelection.unbind('sortstart');
myRowSelection.unbind('sortactivate');
myRowSelection.unbind('sortover');
myRowSelection.unbind('sortstop');
myRowSelection.bind("sortstart",_sortableStart);
myRowSelection.bind("sortactivate",_sortableActivate);
myRowSelection.bind("sortover",_sortableOver);
myRowSelection.bind("sortstop",_sortableStop);}
function _sortableStart(event,ui){
$('.vmPanelDropPlaceholder').css("height",$(ui.item).css("height"));
$('.vmPanelDropPlaceholder').css("width",Math.floor($(ui.item).width()*0.9)+'px');}
function _sortableActivate(event,ui){
if(!(this===ui.item.parent()[0])){
if($(this).children().length>2){
$(this).sortable("disable");
_sortableRefresh();}}
else if($(this).children().length==2){
$(this).next().sortable("disable");
$(this).prev().sortable("disable");
_sortableRefresh();}}
function _sortableOver(event,ui){
that.equalizeWidths(event,ui);
var numItems=$(this).children().length;
if($(ui.sender).context===$(this).context)
numItems--;
var width=Math.floor(96/numItems)+"%";
$('.vmPanelDropPlaceholder').css("width",width);}
function _sortableStop(event,ui){
var start=DebugUtils.getCurrfentTime();
that.dragAndDropMouseOut();
that.menusGC();
DebugUtils.trace("_sortableStop invoked");
$(that.panelRowsSelector).sortable('destroy');
_removeEmptyRows();
that.equalizeWidths(event,ui,true);
_save();
that.changeChartFlow();
$(".vmPanelDropPlaceholderOverlay",$(that.panelRowsSelector)).remove();
_generateEmptyRows(true);
that.panelRowsAddOverlayLayers(true);
$(document).trigger(that.PANEL_DROP_EVENT,{droppedElement:ui.item[0]});
DebugUtils.trace("_sortableStop end",start);}
function _sortableInit(setParams){
var start=DebugUtils.getCurrfentTime();
var sortable;
if(setParams)
sortable=$(that.panelRowsSelector).sortable(sortableParameters);
else
sortable=$(that.panelRowsSelector).sortable();
sortable.disableSelection();
_bindEvents();
DebugUtils.trace("_sortableInit ("+(setParams)+") ",start);
return sortable;}
function _sortableRefresh(setParams){
var start=DebugUtils.getCurrfentTime();
var sortable=_sortableInit(setParams).sortable("refresh");
DebugUtils.trace("_sortableRefresh",start);
return sortable;}
function _generateEmptyRows(doRefresh){
var counter=1;
$(that.panelRowsSelector).each(function(){
_addEmptyRow($(this),"before");});
_addEmptyRow($(that.panelRowsSelector).last(),"after",100);
$(".layoutRow").fadeTo(0,1);
doRefresh?_sortableRefresh(true):_sortableInit(true);
function _addEmptyRow(element,where,rowHeight){
var start=DebugUtils.getCurrfentTime();
rowHeight=rowHeight?rowHeight:newRowHeight;
var newElement=$(document.createElement("div")).addClass("layoutRow equalHeightRow splClearfix panel_row1_col").css("min-height",rowHeight+"px");
(where=="after")?element.after(newElement):element.before(newElement);
DebugUtils.trace("_addEmptyRow",start);}}
function _removeEmptyRows(){
var start=DebugUtils.getCurrfentTime();
$(that.panelRowsSelector).each(function(){
if($(this).children().length==0)
$(this).remove();});
DebugUtils.trace("_removeEmptyRows",start);}
function _save(){
$.post(Splunk.util.make_url(['viewmaster',Splunk.util.getCurrentApp(),Splunk.ViewConfig.view.id].join('/')),
{'action':'edit','view_json':JSON.stringify(_toJSON())},
_onSaveCallback,'json');
function _toJSON(){
var output={};
output['new_panel_sequence']=[];
$(that.panelRowsSelector).each(function(){
var rowSet=[];
$('.paneledit',this).each(function(){
var s=parseInt($(this).attr('data-sequence'),10);
if(!isNaN(s))
rowSet.push(s);});
output['new_panel_sequence'].push(rowSet);});
return output;}
function _onSaveCallback(jsonObject){
if(jsonObject.success){
that.resetSequence();}
else{
for(var i=0,L=jsonObject.messages.length;i<L;i++){
alert('dashboard failed in updating: '+jsonObject.messages[i].message);}}}}},
resetSequence:function(){
var sequence=0;
var x=0;
$(this.panelRowsSelector).each(function(){
if($(this).children().length==0)
return;
var y=0;
$('.paneledit',this).each(function(){
$(this).attr("data-sequence",sequence++);
$(this).attr("data-intersect-y",y++);
$(this).attr("data-intersect-x",x);});
x++;});},
equalizeWidths:function(event,ui,fullSize){
start=DebugUtils.getCurrfentTime();
$(this.panelRowsSelector).each(function(index,value){
var children=$(this).children();
var numPanels=children.length;
if(event&&($(ui.sender).context===$(this).context))
numPanels--;
fullSize=(!event||fullSize);
var width=(Math.floor((fullSize?100:96)/numPanels))+"%";
children.css("width",width);
if(fullSize&&numPanels==3)
children.last().css("width","34%");
$(".vmPanelDropPlaceholderOverlay",children).each(function(){
$(this).css("width",$(this).parent().children().first().width()+"px");});});
DebugUtils.trace("equalizeWidths",start);
this.changeChartFlow();},
changeChartFlow:function(){
if(true||this.$isAwesomeBrowser){
var start=DebugUtils.getCurrfentTime();
$(document).trigger(this.DISPLAY_REFLOW_EVENT);
DebugUtils.trace("DISPLAY_REFLOW_EVENT",start);}},
dragAndDropControllerDestroy:function(){
var theSelection=$(this.panelRowsSelector);
theSelection.fadeOut('fast',function(){$(this).fadeIn('fast');});
try{
theSelection.sortable('destroy');}
catch(e){}
$(".vmPanelDropPlaceholderOverlay").remove();
$('.splLastRefreshed').show();
theSelection.find(".layoutCell").css({"max-height":"none","overflow":"none"}).find(".layoutCellInner").css({"max-height":"none","overflow":"none"}).find(".dashboardContent").css({"max-height":"none","overflow":"none"});
theSelection.each(function(){
var children=$(this).children();
var width=(Math.floor(100/children.length))+"%";
children.css("width",width);
if($(this).children().length==0)
$(this).remove();});
this.equalizeWidths();
this.equalizeHeights();
this.panelRowsAddOverlayLayers(false);
this.changeChartFlow();},
showExpose:function(id){
var that=this;
var gimpModule=Splunk.Globals['ModuleLoader'].getModuleInstanceById(id);
var moduleContentEl=$($(gimpModule.container).attr('s:parentmodule'));
if(!moduleContentEl.hasClass("JSChart")){
moduleContentEl=$(moduleContentEl).children()[0];}
var content=$(moduleContentEl).closest('.SplunkModule');
content.addClass('dashboardVisActive');
content.addClass('dashboardCellExpose');
content.expose({
color:'#000',
closeOnClick:false,
opacity:0.5,
loadSpeed:0,
closeSpeed:0,
onLoad:function(e){
$('.splIcon-close').click(function(){
that.hideExpose();});},
onClose:function(e){
content.removeClass('dashboardCellExpose');}});
content.expose().load();},
hideExpose:function(){
$.mask.close();
$(".dashboardVisActive").removeClass("dashboardVisActive");},
dragndropInit:function(){
var that=this;
this.$panelRows.sortable({
connectWith:this.panelRowsSelector,
update:function(event,ui){
var rows=[];
that.isMoving=false;
that.$panelRows.each(function(){
var row=[];
$('.move a',this).each(function(){
row.push(parseInt($(this).attr('data-sequence'),10));});
if(row.length){
rows.push(row);}});
that.save(rows);}}).disableSelection();},
save:function(rows){
var params={
url:Splunk.util.make_url('/paneleditor/'),
type:'POST',
timeout:50000,
data:JSON.stringify(rows),
contentType:'application/json',
complete:function(response){}};
$.ajax(params);},
getEarliestCreateTimeForGroup:function(group){
var earliest=null;
for(var i=0,l=this.dateDict[group].length;i<l;i++){
if(!earliest){
earliest=this.dateDict[group][i];
continue;}
if(this.dateDict[group][i]<earliest){
earliest=this.dateDict[group][i];}}
return earliest;},
linkSearchIdToGroup:function(job,group){
var sid=job.getSearchId();
if(this.searchIdToGroupNames.hasOwnProperty(sid)){
this.searchIdToGroupNames[sid].push(group);}else{
this.searchIdToGroupNames[sid]=[group];}},
getGroupNamesForSearchId:function(sid){
if(this.searchIdToGroupNames.hasOwnProperty(sid)){
return $.extend([],this.searchIdToGroupNames[sid]);}
return[];},
onJobExists:function(event,job,group){
this.linkSearchIdToGroup(job,group);
this.dateDict[group]=[];
this.updateRefreshedTimeForGroup(event,job,group);},
onJobProgress:function(event,job){
var group=this.getGroupNamesForSearchId(job.getSearchId());
if(job.isRealTimeSearch()){
this.updateRefreshedTimeForGroup(event,job,group);}},
updateRefreshedTimeForGroup:function(event,job,group){
if(!group)return;
if(job.isRealTimeSearch()){
var now=new Date();
this.dateDict[group]=[now];
this.setLastRefreshedHeaderText(group,this.NOW_REFRESHED_TIME);}else if(job.getCreateTime()){
if(!this.dateDict.hasOwnProperty(group)){
this.dateDict[group]=[];}
this.dateDict[group].push(job.getCreateTime());
var earliest=this.getEarliestCreateTimeForGroup(group);
var diff=Math.max((new Date().getTime()-earliest.getTime())/1000,0);
var dateText;
if(diff===0){
dateText='1s';}else if(diff<60){
dateText='&lt; 1m';}else if(diff<3600){
dateText=Math.ceil(diff/60)+'m';}else if(diff<86400){
dateText=Math.ceil(diff/3600)+'h';}else{
dateText=Math.ceil(diff/86400)+'d';}
this.setLastRefreshedHeaderText(group,dateText,format_time(earliest,"medium"));
this.intSet=this.intSet||[];
var that=this;
if(!this.intSet[job.getSearchId()]){
setInterval(function(){
that.updateRefreshedTimeForGroup(event,job,group);},60000);
that.intSet[job.getSearchId()]=true;}}},
setLastRefreshedHeaderText:function(group,shortDateText,longDateText){
var lastRefreshedSpan;
if(shortDateText===this.NOW_REFRESHED_TIME){
lastRefreshedSpan=$("<span>").addClass("splLastRefreshed").attr("title",sprintf(this.FULL_REFRESHED_TIME,{dateText:longDateText})).html(sprintf(this.NOW_REFRESHED_TIME));}else{
lastRefreshedSpan=$("<span>").addClass("splLastRefreshed").attr("title",sprintf(this.FULL_REFRESHED_TIME,{dateText:longDateText})).html(sprintf(this.GENERIC_REFRESHED_TIME,{dateText:shortDateText}));}
$(".splHeader-dashboard").each(function(i){
if($(this).find("h2").attr('title')==group){
var $meta=$(this).closest('.dashboardCell').find('.meta');
$meta.find("span.splLastRefreshed").remove();
$meta.prepend(lastRefreshedSpan);}});},
handlePanelResize:function(){
this.titleHeaders.each(function(){
if($(this).attr('title')){
var charWidth=parseInt(Math.pow($(this).parent().width()/12-15,1.15),10);}});
if(!this.editMode){
this.equalizeHeights();}},
showDashboardPrompts:function(){
var view_config=Splunk.util.getCurrentViewConfig();
if(view_config.hasOwnProperty('view')&&view_config['view']['objectMode']!='SimpleDashboard'){
return false;}
var panelCount=$('.dashboardCell').length;
if(panelCount==0){
var link=$(
_('<p class="dashboardPromptMessage">This dashboard is empty. <a href="#">Edit the dashboard</a> to add a panel.</p>')).bind('click',function(){
Splunk.Globals.Viewmaster.openDashEditForm(Splunk.util.getCurrentView());
return false;}).appendTo($('.layoutRow.firstRow'));}},
equalizeHeights:function(){
start=DebugUtils.getCurrfentTime();
$(".equalHeightRow").each(function(){
$(this).find('.layoutCellInner').css({'min-height':0});
if($.browser.msie&&$.browser.version==6.0){
$(this).children().css({'height':0});}
var max=0;
$(this).find('.layoutCellInner').each(function(i){
if($(this).height()>max){max=$(this).height();}});
if($.browser.msie&&$.browser.version==6.0){$(this).find('.layoutCellInner').css({'height':max});}
$(this).find('.layoutCellInner').css({'min-height':max});});
DebugUtils.trace("equalizeHeights",start);},
insertPageBreakers:function(){
if($.browser.msie&&$.browser.version==="9.0"){
return;}
var $row,rowHeight,
currentHeight=0,
$pageBreaker=$('<div class="page-breaker"></div>'),
pageBreakHeight=($.browser.msie)?800:900;
$('.equalHeightRow').each(function(i,row){
$row=$(row);
rowHeight=($row.is(':empty'))?0:$row.outerHeight(true);
if(rowHeight>0&&currentHeight+rowHeight>=pageBreakHeight){
$pageBreaker.clone().insertBefore($row);
currentHeight=rowHeight;}
else{
currentHeight+=rowHeight;}});},
removePageBreakers:function(){
if($.browser.msie&&$.browser.version==="9.0"){
return;}
$('.page-breaker').remove();}});
var DebugUtils={
traceEnabled:false,
getCurrfentTime:function(){
if(this.traceEnabled)
return(new Date()).getTime();},
trace:function(arg,start){
if(this.traceEnabled&&window.console){
var now=this.getCurrfentTime();
arg=this._addSpaces(arg,30);
if(start)
arg+=["\t",(now-start)].join('');
console.log([now,"\t",arg].join(''));}},
_addSpaces:function(str,len){
var newStr=str;
while(newStr.length<len)
newStr+=" ";
return newStr;}};;
jg_namespace("splunk.time",function()
{
this.ITimeZone=jg_extend(Object,function(ITimeZone,base)
{
this.getStandardOffset=function()
{};
this.getOffset=function(time)
{};});});
jg_namespace("splunk.time",function()
{
var ITimeZone=jg_import("splunk.time.ITimeZone");
this.SimpleTimeZone=jg_extend(ITimeZone,function(SimpleTimeZone,base)
{
this._offset=0;
this.constructor=function(offset)
{
this._offset=(offset!==undefined)?offset:0;};
this.getStandardOffset=function()
{
return this._offset;};
this.getOffset=function(time)
{
return this._offset;};});});
jg_namespace("splunk.time",function()
{
var ITimeZone=jg_import("splunk.time.ITimeZone");
this.LocalTimeZone=jg_extend(ITimeZone,function(LocalTimeZone,base)
{
this.getStandardOffset=function()
{
var date=new Date(0);
return-date.getTimezoneOffset()*60;};
this.getOffset=function(time)
{
var date=new Date(time*1000);
return-date.getTimezoneOffset()*60;};});});
jg_namespace("splunk.time",function()
{
var LocalTimeZone=jg_import("splunk.time.LocalTimeZone");
var SimpleTimeZone=jg_import("splunk.time.SimpleTimeZone");
this.TimeZones=jg_static(function(TimeZones)
{
TimeZones.LOCAL=new LocalTimeZone();
TimeZones.UTC=new SimpleTimeZone(0);});});
jg_namespace("splunk.time",function()
{
var ITimeZone=jg_import("splunk.time.ITimeZone");
var SimpleTimeZone=jg_import("splunk.time.SimpleTimeZone");
var TimeZones=jg_import("splunk.time.TimeZones");
this.DateTime=jg_extend(Object,function(DateTime,base)
{
var _ISO_DATE_TIME_PATTERN=/([\+\-])?(\d{4,})(?:(?:\-(\d{2}))(?:(?:\-(\d{2}))(?:(?:[T ](\d{2}))(?:(?:\:(\d{2}))(?:(?:\:(\d{2}(?:\.\d+)?)))?)?(?:(Z)|([\+\-])(\d{2})(?:\:(\d{2}))?)?)?)?)?/;
var _normalizePrecision=function(value)
{
return Number(value.toFixed(6));};
var _pad=function(value,digits,fractionDigits)
{
if(value!=value)
return"NaN";
if(value==Infinity)
return"Infinity";
if(value==-Infinity)
return"-Infinity";
digits=(digits!==undefined)?digits:0;
fractionDigits=(fractionDigits!==undefined)?fractionDigits:0;
var str=value.toFixed(20);
var decimalIndex=str.indexOf(".");
if(decimalIndex<0)
decimalIndex=str.length;
else if(fractionDigits<1)
str=str.substring(0,decimalIndex);
else
str=str.substring(0,decimalIndex)+"."+str.substring(decimalIndex+1,decimalIndex+fractionDigits+1);
for(var i=decimalIndex;i<digits;i++)
str="0"+str;
return str;};
this._year=0;
this._month=1;
this._day=1;
this._weekday=0;
this._hours=0;
this._minutes=0;
this._seconds=0;
this._timeZone=TimeZones.LOCAL;
this._timeZoneOffset=0;
this._time=0;
this._isValid=true;
this.constructor=function(yearOrTimevalue,month,day,hours,minutes,seconds,timeZone)
{
switch(arguments.length)
{
case 0:
var now=new Date();
this._time=now.getTime()/1000;
this._updateProperties();
break;
case 1:
if(typeof yearOrTimevalue==="number")
{
this._time=yearOrTimevalue;
this._updateProperties();}
else if(typeof yearOrTimevalue==="string")
{
var matches=_ISO_DATE_TIME_PATTERN.exec(yearOrTimevalue);
var numMatches=matches?matches.length:0;
var match;
match=(numMatches>1)?matches[1]:null;
var yearSign=(match=="-")?-1:1;
match=(numMatches>2)?matches[2]:null;
this._year=match?yearSign*Number(match):0;
match=(numMatches>3)?matches[3]:null;
this._month=match?Number(match):1;
match=(numMatches>4)?matches[4]:null;
this._day=match?Number(match):1;
match=(numMatches>5)?matches[5]:null;
this._hours=match?Number(match):0;
match=(numMatches>6)?matches[6]:null;
this._minutes=match?Number(match):0;
match=(numMatches>7)?matches[7]:null;
this._seconds=match?Number(match):0;
match=(numMatches>8)?matches[8]:null;
var timeZoneUTC=(match=="Z");
match=(numMatches>9)?matches[9]:null;
var timeZoneSign=(match=="-")?-1:1;
match=(numMatches>10)?matches[10]:null;
var timeZoneHours=match?Number(match):NaN;
match=(numMatches>11)?matches[11]:null;
var timeZoneMinutes=match?Number(match):NaN;
if(timeZoneUTC)
this._timeZone=TimeZones.UTC;
else if(!isNaN(timeZoneHours)&&!isNaN(timeZoneMinutes))
this._timeZone=new SimpleTimeZone(timeZoneSign*(timeZoneHours*60+timeZoneMinutes)*60);
else
this._timeZone=TimeZones.LOCAL;
this._updateTime();}
else
{
this._time=NaN;
this._updateProperties();}
break;
default:
if(typeof yearOrTimevalue==="number")
{
this._year=yearOrTimevalue;
this._month=(month!==undefined)?month:1;
this._day=(day!==undefined)?day:1;
this._hours=(hours!==undefined)?hours:0;
this._minutes=(minutes!==undefined)?minutes:0;
this._seconds=(seconds!==undefined)?seconds:0;
this._timeZone=(timeZone instanceof ITimeZone)?timeZone:TimeZones.LOCAL;
this._updateTime();}
else
{
this._time=NaN;
this._updateProperties();}
break;}};
this.getYear=function()
{
return this._year;};
this.setYear=function(value)
{
this._year=value;
this._updateTime();};
this.getMonth=function()
{
return this._month;};
this.setMonth=function(value)
{
this._month=value;
this._updateTime();};
this.getDay=function()
{
return this._day;};
this.setDay=function(value)
{
this._day=value;
this._updateTime();};
this.getWeekday=function()
{
return this._weekday;};
this.getHours=function()
{
return this._hours;};
this.setHours=function(value)
{
this._hours=value;
this._updateTime();};
this.getMinutes=function()
{
return this._minutes;};
this.setMinutes=function(value)
{
this._minutes=value;
this._updateTime();};
this.getSeconds=function()
{
return this._seconds;};
this.setSeconds=function(value)
{
this._seconds=value;
this._updateTime();};
this.getTimeZone=function()
{
return this._timeZone;};
this.setTimeZone=function(value)
{
this._timeZone=(value instanceof ITimeZone)?value:TimeZones.LOCAL;
this._updateTime();};
this.getTimeZoneOffset=function()
{
return this._timeZoneOffset;};
this.getTime=function()
{
return this._time;};
this.setTime=function(value)
{
this._time=value;
this._updateProperties();};
this.toUTC=function()
{
return this.toTimeZone(TimeZones.UTC);};
this.toLocal=function()
{
return this.toTimeZone(TimeZones.LOCAL);};
this.toTimeZone=function(timeZone)
{
var date=new DateTime();
date.setTimeZone(timeZone);
date.setTime(this._time);
return date;};
this.clone=function()
{
var date=new DateTime();
date.setTimeZone(this._timeZone);
date.setTime(this._time);
return date;};
this.equals=function(toCompare)
{
return((this._time===toCompare._time)&&(this._timeZoneOffset===toCompare._timeZoneOffset));};
this.toString=function()
{
if(!this._isValid)
return"Invalid Date";
var str="";
if(this._year<0)
str+="-"+_pad(-this._year,4);
else
str+=_pad(this._year,4);
str+="-"+_pad(this._month,2)+"-"+_pad(this._day,2);
str+="T"+_pad(this._hours,2)+":"+_pad(this._minutes,2)+":"+_pad(this._seconds,2,3);
var timeZoneOffset=this._timeZoneOffset/60;
if(timeZoneOffset==0)
{
str+="Z";}
else
{
if(timeZoneOffset<0)
str+="-";
else
str+="+";
if(timeZoneOffset<0)
timeZoneOffset=-timeZoneOffset;
var timeZoneHours=Math.floor(timeZoneOffset/60);
var timeZoneMinutes=Math.floor(timeZoneOffset%60);
str+=_pad(timeZoneHours,2)+":"+_pad(timeZoneMinutes,2);}
return str;};
this.valueOf=function()
{
return this._time;};
this._updateTime=function()
{
if(this._validate())
{
var years=this._year;
var months=this._month-1;
var days=this._day-1;
var hours=this._hours;
var minutes=this._minutes;
var seconds=this._seconds;
var secondsPerMinute=60;
var secondsPerHour=secondsPerMinute*60;
var secondsPerDay=secondsPerHour*24;
var totalMonths=months+years*12;
var wholeMonths=Math.floor(totalMonths);
var subMonths=totalMonths-wholeMonths;
var totalSeconds=seconds+(minutes*secondsPerMinute)+(hours*secondsPerHour)+(days*secondsPerDay);
var wholeSeconds=Math.floor(totalSeconds);
var subSeconds=totalSeconds-wholeSeconds;
var date=new Date(0);
date.setUTCFullYear(0);
date.setUTCMonth(wholeMonths);
if(subMonths!=0)
{
date.setUTCMonth(date.getUTCMonth()+1);
date.setUTCDate(0);
var monthsTotalSeconds=date.getUTCDate()*subMonths*secondsPerDay;
var monthsWholeSeconds=Math.floor(monthsTotalSeconds);
var monthsSubSeconds=monthsTotalSeconds-monthsWholeSeconds;
wholeSeconds+=monthsWholeSeconds;
subSeconds+=monthsSubSeconds;
if(subSeconds>=1)
{
subSeconds--;
wholeSeconds++;}
date.setUTCDate(1);}
date.setUTCSeconds(wholeSeconds);
var time=(date.getTime()/1000)+subSeconds;
var timeZone=this._timeZone;
this._time=time-timeZone.getOffset(time-timeZone.getStandardOffset());
this._updateProperties();}};
this._updateProperties=function()
{
if(this._validate())
{
var time=_normalizePrecision(this._time);
var timeZoneOffset=_normalizePrecision(this._timeZone.getOffset(time));
var totalSeconds=time+timeZoneOffset;
var wholeSeconds=Math.floor(totalSeconds);
var subSeconds=_normalizePrecision(totalSeconds-wholeSeconds);
if(subSeconds>=1)
{
subSeconds=0;
wholeSeconds++;}
var date=new Date(wholeSeconds*1000);
this._year=date.getUTCFullYear();
this._month=date.getUTCMonth()+1;
this._day=date.getUTCDate();
this._weekday=date.getUTCDay();
this._hours=date.getUTCHours();
this._minutes=date.getUTCMinutes();
this._seconds=date.getUTCSeconds()+subSeconds;
this._time=time;
this._timeZoneOffset=timeZoneOffset;
this._validate();}};
this._validate=function()
{
if(this._isValid)
{
this._year*=1;
this._month*=1;
this._day*=1;
this._weekday*=1;
this._hours*=1;
this._minutes*=1;
this._seconds*=1;
this._timeZoneOffset*=1;
this._time*=1;
var checksum=this._year+this._month+this._day+this._weekday+this._hours+this._minutes+this._seconds+this._timeZoneOffset+this._time;
if(isNaN(checksum)||(checksum==Infinity)||(checksum==-Infinity)||!this._timeZone)
this._isValid=false;}
else
{
this._year*=1;
this._time*=1;
if((this._year>-Infinity)&&(this._year<Infinity))
{
this._month=1;
this._day=1;
this._hours=0;
this._minutes=0;
this._seconds=0;
this._isValid=true;}
else if((this._time>-Infinity)&&(this._time<Infinity))
{
this._isValid=true;}}
if(!this._isValid)
{
this._year=NaN;
this._month=NaN;
this._day=NaN;
this._weekday=NaN;
this._hours=NaN;
this._minutes=NaN;
this._seconds=NaN;
this._timeZoneOffset=NaN;
this._time=NaN;}
return this._isValid;};});});
jg_namespace("splunk.time",function()
{
this.Duration=jg_extend(Object,function(Duration,base)
{
var _ISO_DURATION_PATTERN=/P(?:(\-?\d+(?:\.\d+)?)Y)?(?:(\-?\d+(?:\.\d+)?)M)?(?:(\-?\d+(?:\.\d+)?)D)?(?:T(?:(\-?\d+(?:\.\d+)?)H)?(?:(\-?\d+(?:\.\d+)?)M)?(?:(\-?\d+(?:\.\d+)?)S)?)?/;
this.years=0;
this.months=0;
this.days=0;
this.hours=0;
this.minutes=0;
this.seconds=0;
this.constructor=function(yearsOrTimestring,months,days,hours,minutes,seconds)
{
if((arguments.length==1)&&(typeof yearsOrTimestring==="string"))
{
var matches=_ISO_DURATION_PATTERN.exec(yearsOrTimestring);
var numMatches=matches?matches.length:0;
var match;
match=(numMatches>1)?matches[1]:null;
this.years=match?Number(match):0;
match=(numMatches>2)?matches[2]:null;
this.months=match?Number(match):0;
match=(numMatches>3)?matches[3]:null;
this.days=match?Number(match):0;
match=(numMatches>4)?matches[4]:null;
this.hours=match?Number(match):0;
match=(numMatches>5)?matches[5]:null;
this.minutes=match?Number(match):0;
match=(numMatches>6)?matches[6]:null;
this.seconds=match?Number(match):0;}
else
{
this.years=(typeof yearsOrTimestring==="number")?yearsOrTimestring:0;
this.months=(months!==undefined)?months:0;
this.days=(days!==undefined)?days:0;
this.hours=(hours!==undefined)?hours:0;
this.minutes=(minutes!==undefined)?minutes:0;
this.seconds=(seconds!==undefined)?seconds:0;}};
this.clone=function()
{
return new Duration(this.years,this.months,this.days,this.hours,this.minutes,this.seconds);};
this.equals=function(toCompare)
{
return((this.years==toCompare.years)&&
(this.months==toCompare.months)&&
(this.days==toCompare.days)&&
(this.hours==toCompare.hours)&&
(this.minutes==toCompare.minutes)&&
(this.seconds==toCompare.seconds));};
this.toString=function()
{
var str="";
str+="P"+this.years+"Y"+this.months+"M"+this.days+"D";
str+="T"+this.hours+"H"+this.minutes+"M"+this.seconds+"S";
return str;};});});
jg_namespace("jgatt.utils",function()
{
this.IComparator=jg_extend(Object,function(IComparator,base)
{
this.compare=function(value1,value2)
{};});});
jg_namespace("jgatt.utils",function()
{
var IComparator=jg_import("jgatt.utils.IComparator");
this.NaturalComparator=jg_extend(IComparator,function(NaturalComparator,base)
{
this.compare=function(value1,value2)
{
if(value1<value2)
return-1;
if(value1>value2)
return 1;
return 0;};});});
jg_namespace("jgatt.utils",function()
{
var IComparator=jg_import("jgatt.utils.IComparator");
var NaturalComparator=jg_import("jgatt.utils.NaturalComparator");
this.ArrayUtils=jg_static(function(ArrayUtils)
{
var _NATURAL_COMPARATOR=new NaturalComparator();
ArrayUtils.indexOf=function(a,value)
{
if(a==null)
throw new Error("Parameter a must be non-null.");
if(!(a instanceof Array))
throw new Error("Parameter a must be an array.");
for(var i=0,l=a.length;i<l;i++)
{
if(a[i]===value)
return i;}
return-1;};
ArrayUtils.lastIndexOf=function(a,value)
{
if(a==null)
throw new Error("Parameter a must be non-null.");
if(!(a instanceof Array))
throw new Error("Parameter a must be an array.");
for(var i=a.length-1;i>=0;i--)
{
if(a[i]===value)
return i;}
return-1;};
ArrayUtils.sort=function(a,comparator)
{
if(a==null)
throw new Error("Parameter a must be non-null.");
if(!(a instanceof Array))
throw new Error("Parameter a must be an array.");
if((comparator!=null)&&!(comparator instanceof IComparator))
throw new Error("Parameter comparator must be an instance of jgatt.utils.IComparator.");
if(!comparator)
comparator=_NATURAL_COMPARATOR;
var compare=function(value1,value2)
{
return comparator.compare(value1,value2);};
a.sort(compare);};
ArrayUtils.binarySearch=function(a,value,comparator)
{
if(a==null)
throw new Error("Parameter a must be non-null.");
if(!(a instanceof Array))
throw new Error("Parameter a must be an array.");
if((comparator!=null)&&!(comparator instanceof IComparator))
throw new Error("Parameter comparator must be an instance of jgatt.utils.IComparator.");
var high=a.length-1;
if(high<0)
return-1;
if(!comparator)
comparator=_NATURAL_COMPARATOR;
var low=0;
var mid;
var comp;
while(low<=high)
{
mid=low+Math.floor((high-low)/2);
comp=comparator.compare(value,a[mid]);
if(comp<0)
high=mid-1;
else if(comp>0)
low=mid+1;
else
return mid;}
return-low-1;};});});
jg_namespace("splunk.time",function()
{
var ArrayUtils=jg_import("jgatt.utils.ArrayUtils");
var ITimeZone=jg_import("splunk.time.ITimeZone");
this.SplunkTimeZone=jg_extend(ITimeZone,function(SplunkTimeZone,base)
{
this._standardOffset=0;
this._serializedTimeZone=null;
this._isConstant=false;
this._offsetList=null;
this._timeList=null;
this._indexList=null;
this.constructor=function(serializedTimeZone)
{
if(serializedTimeZone==null)
throw new Error("Parameter serializedTimeZone must be non-null.");
if(typeof serializedTimeZone!=="string")
throw new Error("Parameter serializedTimeZone must be a string.");
this._serializedTimeZone=serializedTimeZone;
this._offsetList=[];
this._timeList=[];
this._indexList=[];
this._parseSerializedTimeZone(serializedTimeZone);};
this.getSerializedTimeZone=function()
{
return this._serializedTimeZone;};
this.getStandardOffset=function()
{
return this._standardOffset;};
this.getOffset=function(time)
{
if(this._isConstant)
return this._standardOffset;
var offsetList=this._offsetList;
var numOffsets=offsetList.length;
if(numOffsets==0)
return 0;
if(numOffsets==1)
return offsetList[0];
var timeList=this._timeList;
var numTimes=timeList.length;
if(numTimes==0)
return 0;
var timeIndex;
if(numTimes==1)
{
timeIndex=0;}
else
{
timeIndex=ArrayUtils.binarySearch(timeList,time);
if(timeIndex<-1)
timeIndex=-timeIndex-2;
else if(timeIndex==-1)
timeIndex=0;}
var offsetIndex=this._indexList[timeIndex];
return offsetList[offsetIndex];};
this._parseSerializedTimeZone=function(serializedTimeZone)
{
if(!serializedTimeZone)
return;
var entries=serializedTimeZone.split(";");
var entry;
for(var i=0,l=entries.length;i<l;i++)
{
entry=entries[i];
if(entry)
{
switch(entry.charAt(0))
{
case"C":
if(this._parseC(entry.substring(1,entry.length)))
return;
break;
case"Y":
this._parseY(entry.substring(1,entry.length));
break;
case"@":
this._parseAt(entry.substring(1,entry.length));
break;}}}
this._standardOffset=this.getOffset(0);};
this._parseC=function(entry)
{
if(!entry)
return false;
var time=Number(entry);
if(isNaN(time))
return false;
this._standardOffset=time;
this._isConstant=true;
return true;};
this._parseY=function(entry)
{
if(!entry)
return;
var elements=entry.split(" ");
if(elements.length<1)
return;
var element=elements[0];
if(!element)
return;
var offset=Number(element);
if(isNaN(offset))
return;
this._offsetList.push(offset);};
this._parseAt=function(entry)
{
if(!entry)
return;
var elements=entry.split(" ");
if(elements.length<2)
return;
var element=elements[0];
if(!element)
return;
var time=Number(element);
if(isNaN(time))
return;
element=elements[1];
if(!element)
return;
var index=Number(element);
if(isNaN(index))
return;
index=Math.floor(index);
if((index<0)||(index>=this._offsetList.length))
return;
this._timeList.push(time);
this._indexList.push(index);};});});
jg_namespace("splunk.time",function()
{
var DateTime=jg_import("splunk.time.DateTime");
var Duration=jg_import("splunk.time.Duration");
var SimpleTimeZone=jg_import("splunk.time.SimpleTimeZone");
var TimeZones=jg_import("splunk.time.TimeZones");
this.TimeUtils=jg_static(function(TimeUtils)
{
TimeUtils.EPOCH=new DateTime(0).toUTC();
TimeUtils.daysInMonth=function(date)
{
date=new DateTime(date.getYear(),date.getMonth()+1,0,0,0,0,TimeZones.UTC);
return date.getDay();};
TimeUtils.addDurations=function(duration1,duration2)
{
return new Duration(duration1.years+duration2.years,duration1.months+duration2.months,duration1.days+duration2.days,duration1.hours+duration2.hours,duration1.minutes+duration2.minutes,duration1.seconds+duration2.seconds);};
TimeUtils.addDateDuration=function(date,duration)
{
if((duration.years==0)&&(duration.months==0)&&(duration.days==0))
date=date.clone();
else
date=new DateTime(date.getYear()+duration.years,date.getMonth()+duration.months,date.getDay()+duration.days,date.getHours(),date.getMinutes(),date.getSeconds(),date.getTimeZone());
date.setTime(date.getTime()+(duration.hours*3600+duration.minutes*60+duration.seconds));
return date;};
TimeUtils.subtractDates=function(date1,date2)
{
date2=date2.toTimeZone(date1.getTimeZone());
var isNegative=(date1.getTime()<date2.getTime());
if(isNegative)
{
var temp=date1;
date1=date2;
date2=temp;}
var sameTimeZoneOffset=(date1.getTimeZoneOffset()==date2.getTimeZoneOffset());
var years;
var months;
var days;
var hours;
var minutes;
var seconds;
var date3;
if(sameTimeZoneOffset)
{
date3=date1;}
else if((date1.getYear()==date2.getYear())&&(date1.getMonth()==date2.getMonth())&&(date1.getDay()==date2.getDay()))
{
date3=date2;}
else
{
date3=new DateTime(date1.getYear(),date1.getMonth(),date1.getDay(),date2.getHours(),date2.getMinutes(),date2.getSeconds(),date2.getTimeZone());
if(date3.getTime()>date1.getTime())
{
date3=new DateTime(date1.getYear(),date1.getMonth(),date1.getDay()-1,date2.getHours(),date2.getMinutes(),date2.getSeconds(),date2.getTimeZone());
if((date3.getTime()<date2.getTime())||((date3.getYear()==date2.getYear())&&(date3.getMonth()==date2.getMonth())&&(date3.getDay()==date2.getDay())))
date3=date2;}}
years=date3.getYear()-date2.getYear();
months=date3.getMonth()-date2.getMonth();
days=date3.getDay()-date2.getDay();
if(sameTimeZoneOffset)
{
hours=date3.getHours()-date2.getHours();
minutes=date3.getMinutes()-date2.getMinutes();
seconds=date3.getSeconds()-date2.getSeconds();
if(seconds<0)
{
seconds+=60;
minutes--;}
if(minutes<0)
{
minutes+=60;
hours--;}
if(hours<0)
{
hours+=24;
days--;}
seconds=_normalizePrecision(seconds);}
else
{
seconds=date1.getTime()-date3.getTime();
var wholeSeconds=Math.floor(seconds);
var subSeconds=_normalizePrecision(seconds-wholeSeconds);
if(subSeconds>=1)
{
subSeconds=0;
wholeSeconds++;}
minutes=Math.floor(wholeSeconds/60);
seconds=(wholeSeconds%60)+subSeconds;
hours=Math.floor(minutes/60);
minutes%=60;}
if(days<0)
{
date3=new DateTime(date2.getYear(),date2.getMonth()+1,0,0,0,0,TimeZones.UTC);
days+=date3.getDay();
months--;}
if(months<0)
{
months+=12;
years--;}
if(isNegative)
{
years=-years;
months=-months;
days=-days;
hours=-hours;
minutes=-minutes;
seconds=-seconds;}
return new Duration(years,months,days,hours,minutes,seconds);};
TimeUtils.subtractDurations=function(duration1,duration2)
{
return new Duration(duration1.years-duration2.years,duration1.months-duration2.months,duration1.days-duration2.days,duration1.hours-duration2.hours,duration1.minutes-duration2.minutes,duration1.seconds-duration2.seconds);};
TimeUtils.subtractDateDuration=function(date,duration)
{
if((duration.years==0)&&(duration.months==0)&&(duration.days==0))
date=date.clone();
else
date=new DateTime(date.getYear()-duration.years,date.getMonth()-duration.months,date.getDay()-duration.days,date.getHours(),date.getMinutes(),date.getSeconds(),date.getTimeZone());
date.setTime(date.getTime()-(duration.hours*3600+duration.minutes*60+duration.seconds));
return date;};
TimeUtils.multiplyDuration=function(duration,scalar)
{
return new Duration(duration.years*scalar,duration.months*scalar,duration.days*scalar,duration.hours*scalar,duration.minutes*scalar,duration.seconds*scalar);};
TimeUtils.divideDuration=function(duration,scalar)
{
return new Duration(duration.years/scalar,duration.months/scalar,duration.days/scalar,duration.hours/scalar,duration.minutes/scalar,duration.seconds/scalar);};
TimeUtils.ceilDate=function(date,units)
{
var date2=date.toTimeZone(new SimpleTimeZone(date.getTimeZoneOffset()));
_ceilDateInternal(date2,units);
return _toTimeZoneStable(date2,date.getTimeZone());};
TimeUtils.ceilDuration=function(duration,units,referenceDate)
{
if(!referenceDate)
referenceDate=TimeUtils.EPOCH;
var date=TimeUtils.addDateDuration(referenceDate,duration);
var isNegative=(date.getTime()<referenceDate.getTime());
duration=isNegative?TimeUtils.subtractDates(referenceDate,date):TimeUtils.subtractDates(date,referenceDate);
if(!units)
{
units=new Duration();
if(duration.years>0)
units.years=1;
else if(duration.months>0)
units.months=1;
else if(duration.days>0)
units.days=1;
else if(duration.hours>0)
units.hours=1;
else if(duration.minutes>0)
units.minutes=1;
else if(duration.seconds>0)
units.seconds=1;}
if(isNegative)
{
_floorDurationInternal(duration,units,date);
return TimeUtils.multiplyDuration(duration,-1);}
_ceilDurationInternal(duration,units,referenceDate);
return duration;};
TimeUtils.floorDate=function(date,units)
{
var date2=date.toTimeZone(new SimpleTimeZone(date.getTimeZoneOffset()));
_floorDateInternal(date2,units);
return _toTimeZoneStable(date2,date.getTimeZone());};
TimeUtils.floorDuration=function(duration,units,referenceDate)
{
if(!referenceDate)
referenceDate=TimeUtils.EPOCH;
var date=TimeUtils.addDateDuration(referenceDate,duration);
var isNegative=(date.getTime()<referenceDate.getTime());
duration=isNegative?TimeUtils.subtractDates(referenceDate,date):TimeUtils.subtractDates(date,referenceDate);
if(!units)
{
units=new Duration();
if(duration.years>0)
units.years=1;
else if(duration.months>0)
units.months=1;
else if(duration.days>0)
units.days=1;
else if(duration.hours>0)
units.hours=1;
else if(duration.minutes>0)
units.minutes=1;
else if(duration.seconds>0)
units.seconds=1;}
if(isNegative)
{
_ceilDurationInternal(duration,units,date);
return TimeUtils.multiplyDuration(duration,-1);}
_floorDurationInternal(duration,units,referenceDate);
return duration;};
TimeUtils.roundDate=function(date,units)
{
var date2=date.toTimeZone(new SimpleTimeZone(date.getTimeZoneOffset()));
_roundDateInternal(date2,units);
return _toTimeZoneStable(date2,date.getTimeZone());};
TimeUtils.roundDuration=function(duration,units,referenceDate)
{
if(!referenceDate)
referenceDate=TimeUtils.EPOCH;
var date=TimeUtils.addDateDuration(referenceDate,duration);
var isNegative=(date.getTime()<referenceDate.getTime());
duration=isNegative?TimeUtils.subtractDates(referenceDate,date):TimeUtils.subtractDates(date,referenceDate);
if(!units)
{
units=new Duration();
if(duration.years>0)
units.years=1;
else if(duration.months>0)
units.months=1;
else if(duration.days>0)
units.days=1;
else if(duration.hours>0)
units.hours=1;
else if(duration.minutes>0)
units.minutes=1;
else if(duration.seconds>0)
units.seconds=1;}
if(isNegative)
{
_roundDurationInternal(duration,units,date);
return TimeUtils.multiplyDuration(duration,-1);}
_roundDurationInternal(duration,units,referenceDate);
return duration;};
TimeUtils.normalizeDuration=function(duration,referenceDate)
{
if(!referenceDate)
referenceDate=TimeUtils.EPOCH;
var date=TimeUtils.addDateDuration(referenceDate,duration);
return TimeUtils.subtractDates(date,referenceDate);};
TimeUtils.durationToSeconds=function(duration,referenceDate)
{
if(!referenceDate)
referenceDate=TimeUtils.EPOCH;
var date=TimeUtils.addDateDuration(referenceDate,duration);
return _normalizePrecision(date.getTime()-referenceDate.getTime());};
TimeUtils.secondsToDuration=function(seconds,referenceDate)
{
if(!referenceDate)
referenceDate=TimeUtils.EPOCH;
var date=new DateTime(referenceDate.getTime()+seconds).toTimeZone(referenceDate.getTimeZone());
return TimeUtils.subtractDates(date,referenceDate);};
var _ceilDateInternal=function(date,units)
{
var ceilYear=(units.years>0);
var ceilMonth=ceilYear||(units.months>0);
var ceilDay=ceilMonth||(units.days>0);
var ceilHours=ceilDay||(units.hours>0);
var ceilMinutes=ceilHours||(units.minutes>0);
var ceilSeconds=ceilMinutes||(units.seconds>0);
if(!ceilSeconds)
return;
if(date.getSeconds()>0)
{
if(units.seconds>0)
date.setSeconds(Math.min(Math.ceil(date.getSeconds()/units.seconds)*units.seconds,60));
else
date.setSeconds(60);}
if(!ceilMinutes)
return;
if(date.getMinutes()>0)
{
if(units.minutes>0)
date.setMinutes(Math.min(Math.ceil(date.getMinutes()/units.minutes)*units.minutes,60));
else
date.setMinutes(60);}
if(!ceilHours)
return;
if(date.getHours()>0)
{
if(units.hours>0)
date.setHours(Math.min(Math.ceil(date.getHours()/units.hours)*units.hours,24));
else
date.setHours(24);}
if(!ceilDay)
return;
if(date.getDay()>1)
{
var daysInMonth=TimeUtils.daysInMonth(date);
if(units.days>0)
date.setDay(Math.min(Math.ceil((date.getDay()-1)/units.days)*units.days,daysInMonth)+1);
else
date.setDay(daysInMonth+1);}
if(!ceilMonth)
return;
if(date.getMonth()>1)
{
if(units.months>0)
date.setMonth(Math.min(Math.ceil((date.getMonth()-1)/units.months)*units.months,12)+1);
else
date.setMonth(12+1);}
if(!ceilYear)
return;
if(units.years>0)
date.setYear(Math.ceil(date.getYear()/units.years)*units.years);};
var _ceilDurationInternal=function(duration,units,referenceDate)
{
var ceilYears=(units.years>0);
var ceilMonths=ceilYears||(units.months>0);
var ceilDays=ceilMonths||(units.days>0);
var ceilHours=ceilDays||(units.hours>0);
var ceilMinutes=ceilHours||(units.minutes>0);
var ceilSeconds=ceilMinutes||(units.seconds>0);
var daysInMonth=TimeUtils.daysInMonth(referenceDate);
if(!ceilSeconds)
return;
if(duration.seconds>0)
{
if(units.seconds>0)
duration.seconds=Math.min(Math.ceil(duration.seconds/units.seconds)*units.seconds,60);
else
duration.seconds=60;
_normalizeDuration(duration,daysInMonth);}
if(!ceilMinutes)
return;
if(duration.minutes>0)
{
if(units.minutes>0)
duration.minutes=Math.min(Math.ceil(duration.minutes/units.minutes)*units.minutes,60);
else
duration.minutes=60;
_normalizeDuration(duration,daysInMonth);}
if(!ceilHours)
return;
if(duration.hours>0)
{
if(units.hours>0)
duration.hours=Math.min(Math.ceil(duration.hours/units.hours)*units.hours,24);
else
duration.hours=24;
_normalizeDuration(duration,daysInMonth);}
if(!ceilDays)
return;
if(duration.days>0)
{
if(units.days>0)
duration.days=Math.min(Math.ceil(duration.days/units.days)*units.days,daysInMonth);
else
duration.days=daysInMonth;
_normalizeDuration(duration,daysInMonth);}
if(!ceilMonths)
return;
if(duration.months>0)
{
if(units.months>0)
duration.months=Math.min(Math.ceil(duration.months/units.months)*units.months,12);
else
duration.months=12;
_normalizeDuration(duration,daysInMonth);}
if(!ceilYears)
return;
if(units.years>0)
{
duration.years=Math.ceil(duration.years/units.years)*units.years;
_normalizeDuration(duration,daysInMonth);}};
var _floorDateInternal=function(date,units)
{
var floorYear=(units.years>0);
var floorMonth=floorYear||(units.months>0);
var floorDay=floorMonth||(units.days>0);
var floorHours=floorDay||(units.hours>0);
var floorMinutes=floorHours||(units.minutes>0);
var floorSeconds=floorMinutes||(units.seconds>0);
if(!floorSeconds)
return;
if(date.getSeconds()>0)
{
if(units.seconds>0)
date.setSeconds(Math.floor(date.getSeconds()/units.seconds)*units.seconds);
else
date.setSeconds(0);}
if(!floorMinutes)
return;
if(date.getMinutes()>0)
{
if(units.minutes>0)
date.setMinutes(Math.floor(date.getMinutes()/units.minutes)*units.minutes);
else
date.setMinutes(0);}
if(!floorHours)
return;
if(date.getHours()>0)
{
if(units.hours>0)
date.setHours(Math.floor(date.getHours()/units.hours)*units.hours);
else
date.setHours(0);}
if(!floorDay)
return;
if(date.getDay()>1)
{
if(units.days>0)
date.setDay(Math.floor((date.getDay()-1)/units.days)*units.days+1);
else
date.setDay(1);}
if(!floorMonth)
return;
if(date.getMonth()>1)
{
if(units.months>0)
date.setMonth(Math.floor((date.getMonth()-1)/units.months)*units.months+1);
else
date.setMonth(1);}
if(!floorYear)
return;
if(units.years>0)
date.setYear(Math.floor(date.getYear()/units.years)*units.years);};
var _floorDurationInternal=function(duration,units,referenceDate)
{
var floorYears=(units.years>0);
var floorMonths=floorYears||(units.months>0);
var floorDays=floorMonths||(units.days>0);
var floorHours=floorDays||(units.hours>0);
var floorMinutes=floorHours||(units.minutes>0);
var floorSeconds=floorMinutes||(units.seconds>0);
var daysInMonth=TimeUtils.daysInMonth(referenceDate);
if(!floorSeconds)
return;
if(duration.seconds>0)
{
if(units.seconds>0)
duration.seconds=Math.floor(duration.seconds/units.seconds)*units.seconds;
else
duration.seconds=0;
_normalizeDuration(duration,daysInMonth);}
if(!floorMinutes)
return;
if(duration.minutes>0)
{
if(units.minutes>0)
duration.minutes=Math.floor(duration.minutes/units.minutes)*units.minutes;
else
duration.minutes=0;
_normalizeDuration(duration,daysInMonth);}
if(!floorHours)
return;
if(duration.hours>0)
{
if(units.hours>0)
duration.hours=Math.floor(duration.hours/units.hours)*units.hours;
else
duration.hours=0;
_normalizeDuration(duration,daysInMonth);}
if(!floorDays)
return;
if(duration.days>0)
{
if(units.days>0)
duration.days=Math.floor(duration.days/units.days)*units.days;
else
duration.days=0;
_normalizeDuration(duration,daysInMonth);}
if(!floorMonths)
return;
if(duration.months>0)
{
if(units.months>0)
duration.months=Math.floor(duration.months/units.months)*units.months;
else
duration.months=0;
_normalizeDuration(duration,daysInMonth);}
if(!floorYears)
return;
if(units.years>0)
{
duration.years=Math.floor(duration.years/units.years)*units.years;
_normalizeDuration(duration,daysInMonth);}};
var _roundDateInternal=function(date,units)
{
var roundYear=(units.years>0);
var roundMonth=roundYear||(units.months>0);
var roundDay=roundMonth||(units.days>0);
var roundHours=roundDay||(units.hours>0);
var roundMinutes=roundHours||(units.minutes>0);
var roundSeconds=roundMinutes||(units.seconds>0);
if(!roundSeconds)
return;
if(date.getSeconds()>0)
{
if(units.seconds>0)
date.setSeconds(Math.min(Math.round(date.getSeconds()/units.seconds)*units.seconds,60));
else if(date.getSeconds()>=30)
date.setSeconds(60);
else
date.setSeconds(0);}
if(!roundMinutes)
return;
if(date.getMinutes()>0)
{
if(units.minutes>0)
date.setMinutes(Math.min(Math.round(date.getMinutes()/units.minutes)*units.minutes,60));
else if(date.getMinutes()>=30)
date.setMinutes(60);
else
date.setMinutes(0);}
if(!roundHours)
return;
if(date.getHours()>0)
{
if(units.hours>0)
date.setHours(Math.min(Math.round(date.getHours()/units.hours)*units.hours,24));
else if(date.getHours()>=12)
date.setHours(24);
else
date.setHours(0);}
if(!roundDay)
return;
if(date.getDay()>1)
{
var daysInMonth=TimeUtils.daysInMonth(date);
if(units.days>0)
date.setDay(Math.min(Math.round((date.getDay()-1)/units.days)*units.days,daysInMonth)+1);
else if(date.getDay()>=Math.floor(daysInMonth/2+1))
date.setDay(daysInMonth+1);
else
date.setDay(1);}
if(!roundMonth)
return;
if(date.getMonth()>1)
{
if(units.months>0)
date.setMonth(Math.min(Math.round((date.getMonth()-1)/units.months)*units.months,12)+1);
else if(date.getMonth()>=(6+1))
date.setMonth(12+1);
else
date.setMonth(1);}
if(!roundYear)
return;
if(units.years>0)
date.setYear(Math.round(date.getYear()/units.years)*units.years);};
var _roundDurationInternal=function(duration,units,referenceDate)
{
var roundYears=(units.years>0);
var roundMonths=roundYears||(units.months>0);
var roundDays=roundMonths||(units.days>0);
var roundHours=roundDays||(units.hours>0);
var roundMinutes=roundHours||(units.minutes>0);
var roundSeconds=roundMinutes||(units.seconds>0);
var daysInMonth=TimeUtils.daysInMonth(referenceDate);
if(!roundSeconds)
return;
if(duration.seconds>0)
{
if(units.seconds>0)
duration.seconds=Math.min(Math.round(duration.seconds/units.seconds)*units.seconds,60);
else if(duration.seconds>=30)
duration.seconds=60;
else
duration.seconds=0;
_normalizeDuration(duration,daysInMonth);}
if(!roundMinutes)
return;
if(duration.minutes>0)
{
if(units.minutes>0)
duration.minutes=Math.min(Math.round(duration.minutes/units.minutes)*units.minutes,60);
else if(duration.minutes>=30)
duration.minutes=60;
else
duration.minutes=0;
_normalizeDuration(duration,daysInMonth);}
if(!roundHours)
return;
if(duration.hours>0)
{
if(units.hours>0)
duration.hours=Math.min(Math.round(duration.hours/units.hours)*units.hours,24);
else if(duration.hours>=12)
duration.hours=24;
else
duration.hours=0;
_normalizeDuration(duration,daysInMonth);}
if(!roundDays)
return;
if(duration.days>0)
{
if(units.days>0)
duration.days=Math.min(Math.round(duration.days/units.days)*units.days,daysInMonth);
else if(duration.days>=Math.floor(daysInMonth/2))
duration.days=daysInMonth;
else
duration.days=0;
_normalizeDuration(duration,daysInMonth);}
if(!roundMonths)
return;
if(duration.months>0)
{
if(units.months>0)
duration.months=Math.min(Math.round(duration.months/units.months)*units.months,12);
else if(duration.months>=6)
duration.months=12;
else
duration.months=0;
_normalizeDuration(duration,daysInMonth);}
if(!roundYears)
return;
if(units.years>0)
{
duration.years=Math.round(duration.years/units.years)*units.years;
_normalizeDuration(duration,daysInMonth);}};
var _toTimeZoneStable=function(date,timeZone)
{
var date2=date.toTimeZone(timeZone);
if((date2.getYear()==date.getYear())&&(date2.getMonth()==date.getMonth())&&(date2.getDay()==date.getDay())&&
(date2.getHours()==date.getHours())&&(date2.getMinutes()==date.getMinutes())&&(date2.getSeconds()==date.getSeconds()))
return date2;
var date3=date.clone();
date3.setTimeZone(timeZone);
if((date3.getYear()==date.getYear())&&(date3.getMonth()==date.getMonth())&&(date3.getDay()==date.getDay())&&
(date3.getHours()==date.getHours())&&(date3.getMinutes()==date.getMinutes())&&(date3.getSeconds()==date.getSeconds()))
return date3;
return date2;};
var _normalizeDuration=function(duration,daysInMonth)
{
var years=duration.years;
var wholeYears=Math.floor(years);
var subYears=years-wholeYears;
var months=duration.months+subYears*12;
var wholeMonths=Math.floor(months);
var subMonths=months-wholeMonths;
var days=duration.days+subMonths*daysInMonth;
var wholeDays=Math.floor(days);
var subDays=days-wholeDays;
var hours=duration.hours+subDays*24;
var wholeHours=Math.floor(hours);
var subHours=hours-wholeHours;
var minutes=duration.minutes+subHours*60;
var wholeMinutes=Math.floor(minutes);
var subMinutes=minutes-wholeMinutes;
var seconds=duration.seconds+subMinutes*60;
var wholeSeconds=Math.floor(seconds);
var subSeconds=_normalizePrecision(seconds-wholeSeconds);
if(subSeconds>=1)
{
subSeconds=0;
wholeSeconds++;}
wholeMinutes+=Math.floor(wholeSeconds/60);
wholeSeconds%=60;
wholeHours+=Math.floor(wholeMinutes/60);
wholeMinutes%=60;
wholeDays+=Math.floor(wholeHours/24);
wholeHours%=24;
wholeMonths+=Math.floor(wholeDays/daysInMonth);
wholeDays%=daysInMonth;
wholeYears+=Math.floor(wholeMonths/12);
wholeMonths%=12;
duration.years=wholeYears;
duration.months=wholeMonths;
duration.days=wholeDays;
duration.hours=wholeHours;
duration.minutes=wholeMinutes;
duration.seconds=wholeSeconds+subSeconds;};
var _normalizePrecision=function(value)
{
return Number(value.toFixed(6));};});});;
(function($){
$.support.touch=typeof Touch==='object';
if(!$.support.touch){
return;}
var proto=$.ui.mouse.prototype,
_mouseInit=proto._mouseInit;
$.extend(proto,{
_mouseInit:function(){
this.element.bind("touchstart."+this.widgetName,$.proxy(this,"_touchStart"));
_mouseInit.apply(this,arguments);},
_touchStart:function(event){
if(event.originalEvent.targetTouches.length!=1){
return true;}
this.element.bind("touchmove."+this.widgetName,$.proxy(this,"_touchMove")).bind("touchend."+this.widgetName,$.proxy(this,"_touchEnd"));
this._modifyEvent(event);
$(document).trigger($.Event("mouseup"));
this._mouseDown(event);},
_touchMove:function(event){
this._modifyEvent(event);
this._mouseMove(event);},
_touchEnd:function(event){
this.element.unbind("touchmove."+this.widgetName).unbind("touchend."+this.widgetName);
this._mouseUp(event);},
_modifyEvent:function(event){
event.which=1;
var target=event.originalEvent.targetTouches[0];
event.pageX=target.clientX;
event.pageY=target.clientY;}});})(jQuery);;
$(function(){
var HEADER_NAME='X-Splunk-Form-Key';
var FORM_KEY=Splunk.util.getConfigValue('FORM_KEY');
if(jQuery&&jQuery.cookie){
$.ajaxPrefilter(function(options,originalOptions,jqXHR){
if(options['type']&&options['type'].toUpperCase()=='GET')return;
jqXHR.setRequestHeader(HEADER_NAME,FORM_KEY);});
$(document).ready(function(){
$(document).bind('ajaxError',function(event,xhr,opts,err){
if(xhr.status===401&&window.location.pathname.toString().indexOf('/account/logout')!==6){
document.location=Splunk.util.make_url('account/login?return_to='+encodeURIComponent(document.location.pathname+document.location.search));
return;}});});}else{
throw"Splunk's jQuery.ajax extension requires jQuery and the jQuery.cookie plugin.";}});;
$(function(){
$('body').bind('ajaxComplete',function(event,xhr,opts){
if(xhr!==undefined&&xhr.readyState==4&&xhr.getResponseHeader('X-Splunk-Messages-Available')){
Splunk.Messenger.System.getInstance().getServerMessages();}});});;
(function($){
var radioSelector='.splRadio-control',
radioState='s-active';
$.fn.splRadioInit=function(){
this.find('input:checked').parents(radioSelector).addClass(radioState);
this.find('label').click(function(){
var $el=$(this);
$el.parent().siblings().removeClass(radioState);
$el.parent().addClass(radioState);
$for=$el.attr('for');
$input=$for?$('#'+$for):$el.find('input');
$input.attr('checked','checked');
$input.trigger('change');});
return this;};
$.fn.splRadioSet=function(value){
$inputs=this.find('input:radio');
$inputs.val([value]);
$inputs.parents(radioSelector).siblings().removeClass(radioState);
this.find('input:checked').parents(radioSelector).addClass(radioState);
return this;};})(jQuery);;