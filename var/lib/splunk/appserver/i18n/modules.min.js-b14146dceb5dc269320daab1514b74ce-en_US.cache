
try{i18n_register({"catalog":{"+-getParam: Splunk cannot get param; null key name passed":"getParam: Splunk cannot get param; null key name passed"},"plural":function(n){return n==1?0:1;}});
Splunk.Module=$.klass({
CURRENT_VIEWSTATE_KEY:'_current',
HIDDEN_MODULE_KEY:'hidden module',
_childModulesHaveFreshContexts:true,
_state:Splunk.util.moduleLoadStates["WAITING_FOR_INITIALIZATION"],
initialize:function(container){
this.logger=Splunk.Logger.getLogger("AbstractModule.js");
if(this.parent||this.container||this._children){
this.logger.error(this.moduleType,".initialize - Assertion Failed. Modules may not be reinitialized.");}
this.container=$(container);
this.resultsContainer=$('<div/>').appendTo(this.container);
this.parent=null;
this._children=[];
this.childEnforcement=0;
this.parentEnforcement=0;
this.baseContext=null;
this._paramsToUseAsSettings=[];
this._lastSuccessfulDispatchedContext=null;
this._previousResultParams=null;
this.moduleId=this.container.attr('id');
this._invisibilityModes={};
this.importParams();
this.getResultsRetryCounter=0;
this.getResultsRetryPolicy=3;
this.getResultsXHRObject=null;
this.pushContextWhenReady=false;
$(document).bind('viewDataChange',this.onViewDataChange.bind(this));
$(document).bind('moduleLoadStatusChange',function(event,module,statusInt){
if(module.moduleId==this.moduleId){
this.onLoadStatusChange(statusInt);}}.bind(this));},
getLoadState:function(){
return this._state;},
setLoadState:function(statusInt,suppressEvent){
var oldState=this._state;
if(oldState!=statusInt){
this._state=statusInt;
if(!suppressEvent){
$(document).trigger('moduleLoadStatusChange',[this,statusInt]);}}},
markPageLoadComplete:function(){
this._pageLoadComplete=true;},
isPageLoadComplete:function(){
return this._pageLoadComplete||false;},
requiresAsynchronousLoading:function(){return false;},
onLoadStatusChange:function(statusInt){
if(!this._hierarchyValidated&&(statusInt>=Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT)){
this.validateHierarchy();}},
mergeLoadParamsIntoContext:function(namespace,paramNames){
for(var i=0;i<paramNames.length;i++){
var pair={namespace:namespace,param:paramNames[i]};
this._paramsToUseAsSettings.push(pair);}},
requiresDispatch:function(search){return false;},
onContextChange:function(){},
_fireDispatch:function(search){
if(!search){
this.logger.error("Assertion failed.  required arg 'search' not passed to ",this.moduleType,"._fireDispatch");
return;}
if(this.dispatchAlreadyInProgress){
return false;}else{
this.dispatchAlreadyInProgress=true;
var USE_AUTOMATIC_STRING_REPLACEMENT=false;
if(USE_AUTOMATIC_STRING_REPLACEMENT){
var context=this.getContext();
var baseSearch=search.toString();
var tokens=Splunk.util.discoverReplacementTokens(baseSearch);
for(var i=0;i<tokens.length;i++){
var replacer=new RegExp("\\$"+tokens[i]+"\\$");
baseSearch=Splunk.util.replaceTokens(baseSearch,replacer,context.get(tokens[i]));
search.setBaseSearch(baseSearch);}}
search.dispatchJob(this._fireDispatchSuccessHandler.bind(this),this._fireDispatchFailHandler.bind(this),this.getGroupName());}},
_removeLastSearch:function(){
var lastSearch=this._lastSuccessfulDispatchedSearch;
if(lastSearch&&lastSearch.isJobDispatched()&&!lastSearch.job.canBeAutoCancelled()){
Splunk.Globals['Jobber'].removeJob(lastSearch.job.getSearchId());}else if(lastSearch&&lastSearch.isJobDispatched()&&lastSearch.job.canBeAutoCancelled()){
lastSearch.job.cancel();}},
_fireDispatchSuccessHandler:function(dispatchedSearch){
this.logger.debug("success - context dispatched for search=",dispatchedSearch.toString());
var context=this.getModifiedContext();
context.set("search",dispatchedSearch);
this.withEachDescendant(function(module){
module.reset();});
this.pushContextToChildren(context);
this._removeLastSearch();
this._lastSuccessfulDispatchedSearch=dispatchedSearch;
this.dispatchAlreadyInProgress=false;},
_fireDispatchFailHandler:function(failedSearch){
this.dispatchAlreadyInProgress=false;
this.logger.error(this.moduleType," Context failed to dispatch job for search=",failedSearch.toString());
this._removeLastSearch();
var descendants=this.getDescendants();
for(var i=0,len=descendants.length;i<len;i++){
descendants[i].reset();}},
someChildrenRequireDispatch:function(search){
var requireDispatch=false;
this.withEachChild(function(child){
if(child.requiresDispatch(search)){
requireDispatch=true;
return false;}});
return requireDispatch;},
onBeforeJobDispatched:function(search){},
ensureFreshContexts:function(){
if(this.getContext().get('search').isJobDispatched()){
return;}
var stale=null;
this.withEachAncestor(function(module){
if(module.getContext().get('search').isJobDispatched()){
return false;}
if(!module._childModulesHaveFreshContexts){
stale=module;}},true);
if(stale){
stale.withEachDescendant(function(child){
child.baseContext=null;});
stale.setChildContextFreshness(true);}},
setChildContextFreshness:function(bool){
this._childModulesHaveFreshContexts=(!!bool);},
getContext:function(){
var context=null;
if(this.baseContext){
context=this.baseContext.clone();}else{
if(this.parent){
var baseContext=this.parent.getModifiedContext();
if(baseContext!=null){
if(this.getLoadState()<Splunk.util.moduleLoadStates.HAS_CONTEXT){
this.logger.debug(this.moduleType+" - Although we're still loading the page we have to let modules cache contexts.");
this.parent.setChildContextFreshness(false);}
this.baseContext=baseContext;
context=baseContext.clone();}else{
var exception_msg=sprintf("getContext was called by %(moduleId)s with no baseContext. %(moduleId)s's parent returned a null context. This should not happen.",this);
throw(exception_msg);}}else{
context=new Splunk.Context();
var search=new Splunk.Search();
context.set("search",search);}}
for(var i=0,len=this._paramsToUseAsSettings.length;i<len;i++){
var pair=this._paramsToUseAsSettings[i];
var namespacedKey=pair.namespace+"."+pair.param;
if(this.getParam(pair.param)!=null&&!context.has(namespacedKey)){
context.set(namespacedKey,this.getParam(pair.param));}}
return context;},
pushContextToChildren:function(explicitContext){
var readiness=this.isReadyForContextPush()
if(readiness==Splunk.Module.CANCEL){
if(!this.isPageLoadComplete()){
var propagateLoadCompleteFlag=function(module){
module.markPageLoadComplete();
module.withEachChild(function(child){
propagateLoadCompleteFlag(child);});};
propagateLoadCompleteFlag(this);}
return;}else if(readiness==Splunk.Module.DEFER){
this.pushContextWhenReady=true;
return;}else if(readiness==Splunk.Module.CONTINUE){
if(this.pushContextWhenReady){
this.pushContextWhenReady=false;}}else{
this.logger.error(this.moduleType+" returned illegal value from isReadyForContextPush");}
this.ensureFreshContexts();
var childContext=explicitContext||this.getModifiedContext();
if(childContext==null||!childContext.has("search")){
this.logger.warn(this.moduleType,'TODO  - hit old behaviour of returning NULL - getModifiedContext returns a context with a "null" search, stopping the pushContextToChildren call.');
return;}else if(this.getLoadState()<Splunk.util.moduleLoadStates.HAS_CONTEXT){
return;}
this.withEachDescendant(function(module){
module.setLoadState(Splunk.util.moduleLoadStates.WAITING_FOR_CONTEXT);});
var search=childContext.get("search");
if(this.someChildrenRequireDispatch(search)){
search.abandonJob();
this.withEachDescendant(function(module){
module.onBeforeJobDispatched(search);});
this._fireDispatch(search);
return;}
this.withEachChild(function(child){
child.baseContext=childContext;
child.setLoadState(Splunk.util.moduleLoadStates.HAS_CONTEXT);
child.onContextChange();
child.pushContextToChildren();
if(!child.isPageLoadComplete()){
child.markPageLoadComplete();}});
this.setChildContextFreshness(true);},
isReadyForContextPush:function(){
if(this.getLoadState()<Splunk.util.moduleLoadStates.HAS_CONTEXT)return false;
return true},
resetContext:function(){
if(this.baseContext&&this.baseContext.has("search")){
var search=this.baseContext.get("search");
if(search.isJobDispatched()){
Splunk.Globals['Jobber'].removeJob(search.job.getSearchId());}}
this.baseContext=null;
this._lastSuccessfulDispatchedSearch=null;},
getModifiedContext:function(){
if(!this.baseContext){
this.logger.debug(this.moduleType,"does not override getModifiedContext, has no local cache and thus is backfilling");}
return this.getContext();},
applyContext:function(context){
if(!this.isPageLoadComplete()){
this.logger.warn(this.moduleType," does not implement applyContext");}},
passContextToParent:function(context){
if(this.parent){
if(!this.isPageLoadComplete()){
this.parent.applyContext(context)
this.parent.passContextToParent(context);}
else if(!this.parent.applyContext(context)){
return this.parent.passContextToParent(context);}}else if(!this.isPageLoadComplete()){
var newBaseContext=context.clone();
var topSearch=newBaseContext.get("search");
newBaseContext.set("search",topSearch);
this.baseContext=newBaseContext;
return;}
this.logger.warn("an upstream interaction made it to the top of the tree (to ",this.moduleType,") because none of its downstream modules were able to take any action.")
return false;},
addChild:function(child){
if(child.parent){
this.logger.error(this.moduleType,".addChild - Assertion failed. this",child.moduleType," instance already has a parentModule. There Can Be Only One.");}
this._children.push(child);
child.parent=this;},
removeChild:function(childModule){
var newChildrenList=[];
for(var i=0;i<this._children.length;i++){
if(childModule==this._children[i]){
this._children[i].parent=null;}else{
newChildrenList.push(this._children[i]);}}
this._children=newChildrenList;},
validateHierarchy:function(){
this._hierarchyValidated=true;
var msg=false;
if(this.childEnforcement==Splunk.Module.ALWAYS_REQUIRE&&this._children.length==0){
msg="This view has a %s module but it is configured with no child modules to push its changes to. This represents a configuration error.";}else if(this.childEnforcement==Splunk.Module.NEVER_ALLOW&&this._children.length>0){
msg="This view has a %s module configured to push changes to downstream modules. This module never has any changes to push so this represents a configuration error."}
if(this.parentEnforcement==Splunk.Module.ALWAYS_REQUIRE&&!this.parent){
msg="This view has a %s module but that module has no parent modules to receive changes from. This module will not work in this configuration so this represents a configuration error.";}else if(this.parentEnforcement==Splunk.Module.NEVER_ALLOW&&this.parent){
msg="This view has a %s module but that module receives changes from other modules upstream. Since this module will ignore all such changes, this represents a configuration error.";}
if(msg){
if($("div.Message").length>0){
var messenger=Splunk.Messenger.System.getInstance();
messenger.send('error','splunk',_(sprintf(msg,this.moduleType)));}else{
this.displayInlineErrorMessage(_(sprintf(msg,this.moduleType)));}}},
withEachAncestor:function(fn,reverse){
var ancestors=this.getAncestors();
if(reverse)ancestors.reverse();
for(var i=0,j=ancestors.length;i<j;i++){
var resp=fn(ancestors[i]);
if(resp===false)return false;}
return true;},
withEachChild:function(fn){
var children=this._children;
for(var i=0,j=children.length;i<j;i++){
var resp=fn(children[i]);
if(resp===false)return false;}
return true;},
withEachDescendant:function(fn){
this.withEachChild(function(child){
if(fn(child)===false)return false;
child.withEachDescendant(fn);});
return true;},
getRootAncestor:function(){
var pointer=this,resp=null;
while(pointer){
resp=pointer;
pointer=pointer.parent;}
return resp;},
getAncestors:function(){
var pointer=this.parent,resp=[];
while(pointer){
resp.unshift(pointer);
pointer=pointer.parent;}
return resp;},
getGroupName:function(){
if(this._params.hasOwnProperty("group")){
return this._params["group"]}
return(this.parent)?this.parent.getGroupName():false;},
getDescendants:function(){
var resp=this._children.slice();
for(var i=0;i<resp.length;i++){
resp=resp.concat(resp[i]._children);}
return resp;},
getModulesInTree:function(){
var root=this.getRootAncestor();
return[root].concat(root.getDescendants());},
show:function(invisibilityMode){
invisibilityMode=invisibilityMode||"global";
if(this._invisibilityModes.hasOwnProperty(invisibilityMode)){
delete this._invisibilityModes[invisibilityMode];}
this._changeVisibility();},
hide:function(invisibilityMode){
invisibilityMode=invisibilityMode||"global";
this._invisibilityModes[invisibilityMode]=1;
this._changeVisibility();},
showDescendants:function(invisibilityMode){
if(!this.isSwitcherLeaf){
for(var i=0;i<this._children.length;i++){
this._children[i].show(invisibilityMode);
this._children[i].showDescendants(invisibilityMode);}}},
hideDescendants:function(invisibilityMode){
if(!this.isSwitcherLeaf){
for(var i=0,len=this._children.length;i<len;i++){
this._children[i].hide(invisibilityMode);
this._children[i].hideDescendants(invisibilityMode);}}},
_changeVisibility:function(){
var visible=true;
for(var mode in this._invisibilityModes){
if(this._invisibilityModes.hasOwnProperty(mode)){
visible=false;}}
if(visible)this.container.show();
else this.container.hide();},
onViewDataChange:function(event,data){},
pushViewDataChange:function(){
Splunk.Globals.ModuleLoader.refreshViewData();},
importParams:function(){
this._params={};
this._stickyParamList=[];
this._persistableParamList=[];
if(!Splunk.Module.loadParams){
this.logger.info('importParams - view does not have any parameters defined');
return;}
if(Splunk.Module.loadParams.hasOwnProperty(this.moduleId)){
this._params=$.extend(true,{},Splunk.Module.loadParams[this.moduleId]);}
if(!Splunk.Module.paramConfig){
this.logger.info('importParams - view does not have parameter config defined');
return;}
if(Splunk.Module.paramConfig.sticky.hasOwnProperty(this.moduleId)){
this._stickyParamList=Splunk.Module.paramConfig.sticky[this.moduleId];}
if(Splunk.Module.paramConfig.persistable.hasOwnProperty(this.moduleId)){
this._persistableParamList=Splunk.Module.paramConfig.persistable[this.moduleId];}},
getParam:function(key,fallbackValue){
if(!key){
throw Error(_('getParam: Splunk cannot get param; null key name passed'));}
if(this._params.hasOwnProperty(key)){
return this._params[key];}else if(fallbackValue!=null){
return fallbackValue;}else{
return null;}},
setParam:function(key,value,isSessionOnly){
this._params[key]=value;
if(this.getContext().get("viewStateId")){
this.logger.debug('setParam - skipping param write; inside viewstate');
return;}
if($.inArray(key,this._stickyParamList)==-1&&!this._matchesWildcardParam(key)){
this.logger.info('setParam - skipping param write: "'+key+'" is not sticky');
return;}
if(!isSessionOnly){
if(!(typeof(value)=='string')&&!(typeof(value)=='boolean')&&isNaN(value)){
this.logger.debug('setParam - Cannot persist non-primitive value: key='
+key+' type='+typeof(value));
return;}
$.ajax({
type:'POST',
url:this._buildParamUri(),
data:this._buildParamName(key)+'='+encodeURIComponent(value),
dataType:'json',
success:this._setParamCallback.bind(this),
error:this._setParamErrorback.bind(this)});}},
snapshotParamset:function(){
var output={};
var value=null;
var wildcardPrefixes=this._getWildcardPrefixes();
for(var key in this._params){
if((this._params.hasOwnProperty(key)&&$.inArray(key,this._persistableParamList)>-1)||this._matchesWildcardParam(key))
{
value=this._params[key];
if(!(typeof(value)=='string')&&!(typeof(value)=='boolean')&&isNaN(value)){
this.logger.warn('snapshotParamset - Cannot persist non-primitive value: key='
+key+' type='+typeof(value));
continue;}
output[key]=this._params[key];}}
return output;},
_getWildcardPrefixes:function(){
var wildcardPrefixes={};
for(var i=0,L=this._persistableParamList.length;i<L;i++){
var paramName=this._persistableParamList[i];
if(paramName.substring(paramName.length-1)=="*"){
wildcardPrefixes[paramName.substring(0,paramName.length-1)]=1;}}
return wildcardPrefixes;},
_matchesWildcardParam:function(key,forceRefresh){
if(!this.hasOwnProperty('_wildcardPrefixes')){
this._wildcardPrefixes=this._getWildcardPrefixes();}
for(var prefix in this._wildcardPrefixes){
if(key.substring(0,prefix.length)==prefix&&this._wildcardPrefixes.hasOwnProperty(prefix)){
return prefix+'*';}}
return false;},
_setParamCallback:function(data,textStatus){
this.logger.debug('_setParamCallback - response: '+data);},
_setParamErrorback:function(xhr,status,error){
this.logger.error('_setParamCallback - error: '+xhr.responseText);},
_buildParamUri:function(viewstate_id){
viewstate_id=viewstate_id||'_current';
return Splunk.util.make_url('app',
Splunk.util.getCurrentApp(),
Splunk.util.getCurrentView(),
viewstate_id);},
_buildParamName:function(key){
if(key==null){
throw Error('_buildParamName - Cannot build name; null key');}
return encodeURIComponent(this.moduleId+'.'+key);},
getResultURL:function(params){
var uri=Splunk.util.make_url('module',Splunk.util.getConfigValue('SYSTEM_NAMESPACE'),this.moduleType,'render');
params=params||{};
if(!params.hasOwnProperty('client_app')){
params['client_app']=Splunk.util.getCurrentApp();}
uri+='?'+Splunk.util.propToQueryString(params);
return uri;},
getResultParams:function(){
return{};},
resetXHRStatus:function(){
this.getResultsXHRObject=null;
this.getResultsRetryCounter=0;},
getResultsErrorHandler:function(xhr,textStatus,errorThrown){
this.resetXHRStatus();
if(textStatus=='abort'){
this.logger.debug(this.moduleType,'.getResults() aborted');}else{
this.logger.warn(this.moduleType,'.getResults() error; textStatus='+textStatus+' errorThrown='+errorThrown);}},
getResultsCompleteHandler:function(xhr,textStatus){
this.resetXHRStatus();},
getResults:function(){
if(this.getResultsXHRObject){
if(this.getResultsXHRObject.readyState<4){
var job=this.getContext().get("search").job;
if(job&&!job.isDone()&&this.getResultsRetryCounter<this.getResultsRetryPolicy){
this.getResultsRetryCounter++;
this.logger.info('XHR already in-flight for module',this.moduleId,'attempt',this.getResultsRetryCounter,'of',this.getResultsRetryPolicy,'exit out');
return;}else{
this.abortGetResults();
this.resetXHRStatus();
this.logger.info('XHR in-flight destroyed for module',this.moduleId,'for job',job.getSearchId(),'and replaced with new one');}}else{
this.resetXHRStatus();}}
this.logger.info('XHR clear for takeoff for module',this.moduleId);
var params=this.getResultParams();
this._previousResultParams=$.extend(true,{},params);
if(Splunk._testHarnessMode){
this.logger.debug(this.moduleType,".getResults -- we are in _testHarnessMode. If you're not running unit tests right now, something is horribly wrong.")
return false;}
var resultUrl=this.getResultURL(params);
if(!resultUrl){
this.logger.warn("getResultsURL() appears to be unimplemented or returning null for this instance.");}
var callingModule=this.moduleType;
this.getResultsXHRObject=$.ajax({
type:"GET",
cache:($.browser.msie?false:true),
url:resultUrl,
beforeSend:function(xhr){
xhr.setRequestHeader('X-Splunk-Module',callingModule);},
success:function(htmlFragment,textStatus,xhr){
if(params["sid"]){
var job=this.getContext().get("search").job;
if(job&&(params["sid"]!=job.getSearchId())){
this.logger.warn(this.moduleType,"while a request to a particular sid was in-flight, it appears the sid changed underneath us. We are dropping the response and NOT calling renderResults. old sid is",params["sid"]," and the new sid is ",job.getSearchId());
return;}}
if(xhr.status==0){
return;}
this.renderResults(htmlFragment);
this.resetXHRStatus();}.bind(this),
complete:this.getResultsCompleteHandler.bind(this),
error:this.getResultsErrorHandler.bind(this)});},
haveResultParamsChanged:function(){
var currentResultParams=this.getResultParams();
return(!Splunk.util.objectSimilarity(this._previousResultParams,currentResultParams));},
abortGetResults:function(){
if(this.getResultsXHRObject&&this.getResultsXHRObject.readyState<4){
this.logger.info('Aborting getResults request for',this.moduleType);
this.getResultsXHRObject.abort();}},
renderResults:function(htmlFragment,turbo){
if(!htmlFragment){
this.resultsContainer.html('No content available.');
return;}
if(turbo){
this.resultsContainer=$(Splunk.util.turboInnerHTML(this.resultsContainer[0],htmlFragment));}else{
this.resultsContainer.html(htmlFragment);}
if(this.onResultsRendered){
this.onResultsRendered();}},
reset:function(){
this.abortGetResults();
this.resetXHRStatus();
this.resetContext();
this.resetUI();},
resetUI:function(){
this.logger.warn(this.moduleType,'has not implemented a resetUI method.');},
resizeWidthToParent:function(){
this.container.width(this.container.parent().width());},
displayInlineErrorMessage:function(message){
this.logger.error(message);
var errorDiv=$('div.error',this.container);
if(errorDiv.length==0){
errorDiv=$("<div>").addClass("error").appendTo(this.container);}
errorDiv.text(message);
this.container.show();},
printHierarchy:function(indentation){
if(!indentation)indentation="";
this.logger.debug(indentation,this.moduleType);
for(var i=0;i<this._children.length;i++){
this._children[i].printHierarchy(indentation+"    ");}}});
Splunk.Module.ALWAYS_REQUIRE=1;
Splunk.Module.NEVER_ALLOW=-1;
Splunk.Module.CANCEL=-1;
Splunk.Module.DEFER=0
Splunk.Module.CONTINUE=1;;}catch(e){var err="The module 'Splunk.Module' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.Module.DispatchingModule=$.klass(Splunk.Module,{
initialize:function($super,container){
this.logger=Splunk.Logger.getLogger("search_modules.js");
$(document).bind('jobProgress',function(event,progressingJob){
if(!this.baseContext||!this.baseContext.has("search"))return false;
var ourJob=this.baseContext.get("search").job;
if(ourJob.getSearchId()==progressingJob.getSearchId()){
this.onJobProgress(event);}}.bind(this));
$(document).bind('jobDone',function(event,doneJob){
if(!this.baseContext||!this.baseContext.has("search"))return false;
var ourJob=this.baseContext.get("search").job;
if(ourJob.getSearchId()==doneJob.getSearchId()){
this.onJobDone(event);}}.bind(this));
$(document).bind('jobStatusChanged',function(event,sid,status){
if(!this.baseContext||!this.baseContext.has("search"))return false;
var search=this.baseContext.get("search");
if((search.job.getSearchId()==sid)){
this.onJobStatusChange(event,status);}}.bind(this));
$super(container);},
baseContext:false,
requiresTransformedResults:function(){return false},
requiresDispatch:function(search){
search=search||new Splunk.Search();
if(this.requiresTransformedResults()){
var range=search.getTimeRange();
if(range.isSubRangeOfJob()){
return true;}}
try{
return!search.isJobDispatched();}catch(e){
this.logger.error("TypeError ",this.moduleType,".requiresDispatch() was given a null search instance.");
return false;}},
pushContextToChildren:function($super,explicitContext){
var context=explicitContext||this.getModifiedContext();
var search=context.get("search");
if(!search.isJobDispatched()&&this.requiresDispatch(search)){
this.logger.error(this.moduleType,".onContextChange - hit the corner case where a DispatchingModule instance requires dispatch for q=",search.toString(),"timeRange=",search.getTimeRange());
this._fireDispatch(search);}else{
$super(context);}},
onJobProgress:function(event){},
onJobDone:function(event){},
onJobStatusChange:function(event,status){
if(status=='cancel'){
this.reset();}}});
Splunk.Module.DispatchingModule.isAbstract=true;;}catch(e){var err="The module 'Splunk.Module.DispatchingModule' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.DispatchingModule",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.FieldSearch=$.klass(Splunk.Module,{
keys:{
ENTER:13,
UP_ARROW:38,
DOWN_ARROW:40,
LEFT_ARROW:37,
RIGHT_ARROW:39,
PAGE_DOWN:34,
PAGE_UP:33,
SPACE_BAR:32,
TAB:9,
ESCAPE:27},
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.logger=Splunk.Logger.getLogger("FieldSearch.js")
this.searchForm=$('form',this.container);
this.input=$('input',this.container);
this.fieldName=this.input.attr('name');
if(!this.fieldName){
this.logger.warn(this.moduleType,"Warning - there's no fieldName. using FIELD_NAME_UNSET");
this.fieldName="FIELD_NAME_UNSET";}
this.bindEventListeners();},
bindEventListeners:function(){
this.searchForm.submit(this._onFormSubmit.bind(this));
this.input.bind("keydown",this._onKeyDown.bind(this));},
getIntentionArg:function(){
var fieldValue=this.input.attr('value');
if(!fieldValue)return false;
var argumentDict={};
argumentDict[this.fieldName]=fieldValue;
return argumentDict;},
applyContext:function(context){
var search=context.get("search");
this.logger.debug(this.moduleType,".applyContext received ",search);
if(!this.isPageLoadComplete()){
this.clearInputField();}
var intention=search.popIntention('addterm',this.fieldName);
if(intention){
context.set("search",search);
this.logger.debug(this.moduleType,".applyContext has matched an intention and is removing it from context.");
var fieldValue=intention["arg"][this.fieldName];
if(this.input.attr('value')==fieldValue){
this.setInputField('');}else{
this.setInputField(fieldValue);}
if(this.isPageLoadComplete()){
this.pushContextToChildren();
return true;}}
return false;},
getModifiedContext:function(){
var context=this.getContext();
var argumentDict=this.getIntentionArg();
if(argumentDict){
var search=context.get("search");
search.abandonJob();
search.addIntention({"name":'addterm',"arg":argumentDict});
context.set("search",search);}
return context;},
_onFormSubmit:function(){
setTimeout(function(randomNumberOfDoom){this.pushContextToChildren()}.bind(this),0);
return false;},
setInputField:function(searchStr){
this.logger.debug(this.moduleType,".setInputField old=",this.input.text(),"new=",searchStr);
try{
this.input.attr("value",searchStr);}
catch(e){
this.input.text(searchStr);}},
clearInputField:function(){
try{
this.input.attr("value",'');}
catch(e){
this.input.text('');}},
_onKeyDown:function(evt){
var keyCode=evt.keyCode;
if(keyCode==this.keys['ENTER']){
evt.preventDefault();
this._onFormSubmit();
return false;}else{
for(var key in this.keys){
if(keyCode==this.keys[key])return;}
this.setChildContextFreshness(false);}}});;}catch(e){var err="The module 'Splunk.Module.FieldSearch' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.FieldSearch",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.ViewRedirector=$.klass(Splunk.Module,{
DEFAULT_WINDOW_FEATURES:"status=1,toolbar=1,location=1,menubar=1,resizable=1,scrollbars=1,directories=1",
URI_PARAM_PREFIX:'uriParam.',
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.NEVER_ALLOW;
this.parentEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.popupWindowFeatures=this.DEFAULT_WINDOW_FEATURES;
try{
this.defaultToPopup=Splunk.util.normalizeBoolean(this._params["popup"],true);}catch(e){
this.defaultToPopup=true;
this.popupWindowFeatures=this._params["popup"];}
this.hide(this.HIDDEN_MODULE_KEY);},
addChild:function($super,child){
this.logger.error(this.moduleType,'module is configured with a child module. There is no reason to do this and so it is probably a mistake.');
return $super(child);},
pushContextToChildren:function($super,explicitContext){
var context=explicitContext||this.getContext();
var openInPopup=context.get("click.modifierKey")||this.defaultToPopup;
var search=context.get("search");
if(!this.isPageLoadComplete()){
this.logger.debug(this.moduleType+" - initial page load detected. Not redirecting");
return false;}
var args={};
var qsDict=Splunk.util.queryStringToProp(document.location.search);
if(Splunk.util.normalizeBoolean(this._params["sendBaseSID"])){
if(qsDict.hasOwnProperty("base_sid")){
args["base_sid"]=qsDict["base_sid"];}
else if(qsDict.hasOwnProperty("sid")){
args["base_sid"]=qsDict["sid"];}
else if(search.isJobDispatched()){
args["base_sid"]=context.job.getSearchId();}else{
this.logger.error(this.moduleType," is configured to send the underlying sid, but its context hasnt been dispatched and there are no sids in the URL");}}
if(search.getViewStateId()){
args["vs"]=search.getViewStateId();}
for(var key in this._params){
if(this._params.hasOwnProperty(key)){
if(key.length>this.URI_PARAM_PREFIX.length&&key.indexOf(this.URI_PARAM_PREFIX)==0){
args[key.substring(this.URI_PARAM_PREFIX.length)]=this._params[key];}}}
this.sendToView(args,openInPopup);},
sendToView:function(additionalArgs,openInPopup){
var context=this.getContext();
var search=context.get("search");
var options={};
options["windowFeatures"]=this.popupWindowFeatures;
search.sendToView(this._params["viewTarget"],additionalArgs,Splunk.util.normalizeBoolean(this._params["dispatchBeforeRedirect"]),openInPopup,options);}});;}catch(e){var err="The module 'Splunk.Module.ViewRedirector' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.ViewRedirector",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.Module.HiddenSearch=$.klass(Splunk.Module,{
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.logger=Splunk.Logger.getLogger("hidden_search.js");
this.messenger=Splunk.Messenger.System.getInstance();
this.hide(this.HIDDEN_MODULE_KEY);
this.sid=null;
var hashParams=Splunk.util.queryStringToProp(Splunk.util.getHash());
var meta=this.container.closest('.dashboardCell').find('.paneledit').attr("data-sequence");
var key='panel_'+meta+'.sid';
if(meta&&hashParams.hasOwnProperty(key)){
this.sid=hashParams[key];
this.logger.info('Soft refresh; reuse job sid',this.sid);
delete hashParams[key];
window.location.hash=Splunk.util.propToQueryString(hashParams);}},
getModifiedContext:function(){
var context=this.getContext();
var search=context.get("search");
search.abandonJob();
if(this.sid){
search.job=Splunk.Globals.Jobber.buildJob(this.sid);
context.set("search",search);
return context;}
if(this._params.hasOwnProperty('search')){
search.setBaseSearch(this._params['search']);}
if(this._params["earliest"]||this._params["latest"]){
var range=new Splunk.TimeRange(this._params["earliest"],this._params["latest"]);
search.setTimeRange(range);}
if(this._params.hasOwnProperty("maxCount")){
search.setMaxCount(this._params["maxCount"]);}
if(this._params.hasOwnProperty("maxEvents")){
search.setMaxEvents(this._params["maxEvents"]);}
context.set("search",search);
return context;}});;}catch(e){var err="The module 'Splunk.Module.HiddenSearch' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.HiddenSearch",err);});}try{i18n_register({"catalog":{"+-(now)":"(now)","+-All dates after":"All dates after","+-All time":"All time","+-Invalid relative string":"Invalid relative string","+-Custom Time Range":"Custom Time Range","+-Error: Failed to load configured time ranges.":"Error: Failed to load configured time ranges.","+-Custom time...":"Custom time...","+-Earliest time must be before latest time":"Earliest time must be before latest time","+-Custom time":"Custom time","+-Invalid time string":"Invalid time string","+-Date range":"Date range","+-All dates before":"All dates before"},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.TimeRangePicker=$.klass(Splunk.Module,{
EARLIEST_TIME_ATTR:'earliest_time',
LATEST_TIME_ATTR:'latest_time',
ALL_TIME_LABEL:_('All time'),
CUSTOM_TIME_LABEL:_('Custom time'),
DATEPICKER_CLASS:'customDateTime',
DATE_RANGE_ERROR_MSG:_('Earliest time must be before latest time'),
DATE_RANGE_TEXT:_('Date range'),
DATES_BEFORE_TEXT:_('All dates before'),
DATES_AFTER_TEXT:_('All dates after'),
CUSTOM_DATE_SEAM:500,
_timeZone:null,
_selectedRange:null,
_menu:null,
_activator:null,
_haveMovedPopupDom:false,
_customEarliestDate:null,
_customLatestDate:null,
_earliestTime:null,
_latestTime:null,
_datePickerMode:false,
_customDateTimePopup:false,
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.logger=Splunk.Logger.getLogger("time_range_picker.js");
this._timeZone=new splunk.time.SplunkTimeZone(Splunk.util.getConfigValue("SERVER_ZONEINFO"));
this._activator=$('.timeRangeActivator',this.container)
var FALLBACK_MENU_DICT=[{"style":"timeRangePreset","attrs":{},"label":_("Error: Failed to load configured time ranges.")}];
try{
this._menuDict=this._params.timeRangeJson;}catch(e){
this.logger.error(e+", "+e.message);}
if(!this._menuDict){
this._menuDict=FALLBACK_MENU_DICT;}
var cust=this._buildCustomDateItem();
this._menuDict.push(cust);
this._customDateTimePopup=$('.trpCustomDateTime',this.container);
this._customDateTimePopupObj=null;
this._setupCustomDateTime();
this._menu=new Splunk.MenuBuilder({
containerDiv:this.container,
menuDict:this._menuDict,
activator:this._activator.parent('.timeRangeActivatorWrapper'),
menuClasses:'splMenu-primary timeRangeMenu'});
var selectedLabel=this.getParam('selected');
if(this._params.hasOwnProperty("default")){
selectedLabel=this.getParam('default');}
var menuReference=this._menu.getMenu();
menuReference.click(this._onMenuClick.bind(this));
var matchedSomePreset=false;
if(selectedLabel){
var moduleInstance=this;
menuReference.find('.timeRangePreset a').each(function(){
var thisText=moduleInstance._getRawLabel($(this).text()).toLowerCase();
if(thisText==selectedLabel.toLowerCase()){
matchedSomePreset=true;
moduleInstance._activator.text($(this).text());
moduleInstance._setSelectedRangeToPreset($(this));}});}
if(!matchedSomePreset){
if(selectedLabel){
this.logger.error(this.moduleType," specified a selected timeRange in its config, (",selectedLabel,") but that is not a valid option");
this._activator.text(this.ALL_TIME_LABEL);}else{
this._activator.text(this.ALL_TIME_LABEL);}}
this._menu.hideSubMenus();},
_getRawLabel:function(translatedTime){
for(var key in this._menuDict){
if(this._menuDict.hasOwnProperty(key)){
if(this._menuDict[key].hasOwnProperty("items")){
var subMenu=this._menuDict[key]["items"];
for(var subKey in subMenu){
if(translatedTime==subMenu[subKey]['label']){
return subMenu[subKey]['rawLabel'];}}}
else{
if(translatedTime==this._menuDict[key]['label']){
return this._menuDict[key]['rawLabel'];}}}}
return'';},
_setupCustomDateTime:function(){
var context=this;
$('.rangeType input[type="radio"]',this._customDateTimePopup).click(function(){
var justSelected='.'+$(this).val();
$('.visibleDateTimePanel',context._customDateTimePopup).removeClass('visibleDateTimePanel').fadeOut('fast',function(){
$('.dateTimePanel',context._customDateTimePopup).css('display','none');
$(justSelected,context._customDateTimePopup).fadeIn('fast').addClass('visibleDateTimePanel');});});
this._setupDateRangeMode();
this._setupRelativeMode();
this._setupRealtimeMode();
this._setupAdvancedMode();
$('.trpApply',this._customDateTimePopup).click(this._onApplyClick.bind(this));
$('.trpCancel',this._customDateTimePopup).click(this._onCancelClick.bind(this));},
_setupDateRangeMode:function(){
$('.earliestSpecificDateRadio',this._customDateTimePopup).click(function(){
this._enableDateTime('.earliestDateTime');}.bind(this));
$('.earliestDateRadio',this._customDateTimePopup).click(function(){
this._disableDateTime('.earliestDateTime');}.bind(this));
$('.latestSpecificDateRadio',this._customDateTimePopup).click(function(){
this._enableDateTime('.latestDateTime');}.bind(this));
$('.nowDateRadio',this._customDateTimePopup).click(function(){
this._disableDateTime('.latestDateTime');}.bind(this));
var module=this;
var dateFormat=$.datepicker._defaults['dateFormat'];
var defaultDate=new Date();
$('.latestDate',this._customDateTimePopup).val($.datepicker.formatDate(dateFormat,defaultDate));
defaultDate.setDate(defaultDate.getDate()-1);
$('.earliestDate',this._customDateTimePopup).val($.datepicker.formatDate(dateFormat,defaultDate));
$(this._customDateTimePopup).find('.earliestDate').datepicker({
currentText:'',
defaultDate:defaultDate,
prevText:'',
nextText:''});
$(this._customDateTimePopup).find('.latestDate').datepicker({
currentText:'',
prevText:'',
nextText:''});
this._earliestTime=new Splunk.TimeSpinner($('.earliestTime',this._customDateTimePopup));
this._latestTime=new Splunk.TimeSpinner($('.latestTime',this._customDateTimePopup));},
_setupRelativeMode:function(){
var module=this;
$('.relativeMode select.relativeUnit',this._customDateTimePopup).change(function(){
if($('.relativeSnap option:selected',this._customDateTimePopup).val()!='none'){
var selectedVal=$('.relativeUnit option:selected',module._customDateTimePopup).val();
$('.relativeSnap',module._customDateTimePopup).val(selectedVal);}
module._setRelativeDisplays();});
$('.relativeMode select.relativeSnap',this._customDateTimePopup).change(function(){
module._setRelativeDisplays();});
$('.relativeMode input',this._customDateTimePopup).keyup(function(){
this.value=this.value.replace(/[^0-9\.]/g,'');
module._setRelativeDisplays();});
this._setRelativeDisplays();},
_setRelativeDisplays:function(){
var relativeString=this._buildRelativeString();
this._setRelSearchLangEquivalent(relativeString);
this._setRelativeRealLangStringDisplay(relativeString);},
_buildRelativeString:function(){
var val=parseInt($('.relativeValue',this._customDateTimePopup).val(),10)||0;
var unit=$('.relativeUnit option:selected',this._customDateTimePopup).val()||'s';
var snap='';
if($('.relativeSnap option:selected',this._customDateTimePopup).val()!='none'){
snap='@'+$('.relativeSnap option:selected',this._customDateTimePopup).val();}
var relativeString='-'+val+unit+snap;
return relativeString;},
_setRelSearchLangEquivalent:function(relativeString){
$('.relativeEffectives .searchLangEquivalent',this._customDateTimePopup).html(relativeString);},
_setRelativeRealLangStringDisplay:function(relativeString){
$.getJSON(Splunk.util.make_url('/util/time/parser?ts='+relativeString),function(jsonObject){
var effectiveRange=_('Invalid relative string');
var effectiveIso='';
if(jsonObject[relativeString]){
effectiveRange=jsonObject[relativeString].localized+" - "+_('(now)');
effectiveIso=jsonObject[relativeString].iso;}
$('.relativeEffectives .effectiveRange',this._customDateTimePopup).html(effectiveRange).attr('title',effectiveIso);})},
_setupRealtimeMode:function(){
var module=this;
$('.realtimeMode select.rollingWindowUnit',this._customDateTimePopup).change(function(){
module._setRealtimeDisplays();});
$('.realtimeMode input',this._customDateTimePopup).keyup(function(){
this.value=this.value.replace(/[^0-9\.]/g,'');
module._setRealtimeDisplays();});
this._setRealtimeDisplays();},
_setRealtimeDisplays:function(){
var realtimeString=this._buildRealtimeString();
this._setRealtimeSearchLangEquivalent(realtimeString);},
_buildRealtimeString:function(){
var val=parseInt($('.rollingWindowSize',this._customDateTimePopup).val(),10)||0;
var unit=$('.rollingWindowUnit option:selected',this._customDateTimePopup).val()||'s';
var realtimeString='rt-'+val+unit;
return realtimeString;},
_setRealtimeSearchLangEquivalent:function(realtimeString){
$('.realtimeEffectives .searchLangEquivalent',this._customDateTimePopup).html(realtimeString);},
_setupAdvancedMode:function(){
var context=this;
var advancedStartTimer=null;
var advancedEndTimer=null;
$('.advancedStart',this._customDateTimePopup).bind('blur',function(){
clearTimeout(advancedStartTimer);
context._setAdvancedRealLanguage('start');}).bind('keyup',function(){
clearTimeout(advancedStartTimer);
advancedStartTimer=setTimeout(function(){context._setAdvancedRealLanguage('start')},1500);});
$('.advancedEnd',this._customDateTimePopup).bind('blur',function(){
clearTimeout(advancedEndTimer);
context._setAdvancedRealLanguage('end');}).bind('keyup',function(){
clearTimeout(advancedEndTimer);
advancedEndTimer=setTimeout(function(){context._setAdvancedRealLanguage('end')},1500);});},
_setAdvancedRealLanguage:function(whichAdvanced){
var advancedVal;
var toUpdate;
if(whichAdvanced=='start'){
advancedVal=Splunk.util.trim($('.advancedStart',this._customDateTimePopup).val());
toUpdate=$('.advancedEffectiveStart',this._customDateTimePopup);}else if(whichAdvanced=='end'){
advancedVal=Splunk.util.trim($('.advancedEnd',this._customDateTimePopup).val());
toUpdate=$('.advancedEffectiveEnd',this._customDateTimePopup);}else{
this.logger.error("TimeRangePicker: _setAdvancedRealLanguage called without a flag switch.");
return;}
if(!advancedVal){
return;}
var url=Splunk.util.make_url('/util/time/parser?ts='+encodeURIComponent(advancedVal));
$.getJSON(url,function(jsonObject){
var effectiveVal=_('Invalid time string');
var effectiveIso='';
if(jsonObject[advancedVal]){
if(advancedVal.substr(0,2)=='rt'){
effectiveVal=jsonObject[advancedVal].iso;}
else{
effectiveVal=jsonObject[advancedVal].localized;}
effectiveIso=jsonObject[advancedVal].iso;}
toUpdate.html(effectiveVal).attr('title',effectiveIso);})},
_buildCustomDateItem:function(){
var customDateItem={"label":_('Custom time...'),"style":"customDateItem","callback":function(){this._popCustomDateTime()}.bind(this)};
return customDateItem;},
_popCustomDateTime:function(){
if(!this._haveMovedPopupDom){
this._customDateTimePopup.appendTo('body');
this._haveMovedPopupDom=true;}
this._customDateTimePopupObj=new Splunk.Popup(this._customDateTimePopup,{
title:_('Custom Time Range'),
pclass:'trpCustom',
inlineMode:true,
onDestroy:this._onPopupDestroy.bind(this)});
$('input:visible:enabled:first',this._customDateTimePopup).focus();},
_onPopupDestroy:function(){
this._customDateTimePopupObj=null;},
_enableDateTime:function(el){
$(el,this._customDateTimePopup).find('.customDate').datepicker('enable');
$(el,this._customDateTimePopup).find('input').prop('disabled',false);
$(el,this._customDateTimePopup).removeClass('dateTimeDisabled');},
_disableDateTime:function(el){
$(el,this._customDateTimePopup).find('.customDate').datepicker('disable');
$(el,this._customDateTimePopup).find('input').prop('disabled',true);
$(el,this._customDateTimePopup).addClass('dateTimeDisabled');},
_onApplyClick:function(){
if(this._applyCustomDateTime()){
this._customDateTimePopupObj.destroyPopup();}},
_onCancelClick:function(){
this._customDateTimePopupObj.destroyPopup();},
_applyCustomDateTime:function(){
var toDate=null;
var fromDate=null;
var errMsg=null;
var mode=$('.rangeType input[type="radio"]:checked',this._customDateTimePopup).val();
switch(mode){
case'relativeMode':
var relativeString=this._buildRelativeString();
this._fireCustom(relativeString,'now');
return true;
break;
case'realtimeMode':
var realtimeString=this._buildRealtimeString();
this._fireCustom(realtimeString,'rt');
return true;
break;
case'advancedMode':
var earliest=$('.advancedStart',this._customDateTimePopup).val()||null;
var latest=$('.advancedEnd',this._customDateTimePopup).val()||null;
this._fireCustom(earliest,latest);
return true;
break;
default:
if(!$('.earliestDateTime',this._customDateTimePopup).is('.dateTimeDisabled')){
fromDate=this._getDateWithTime('.earliestDate','.earliestTime');}
if(!$('.latestDateTime',this._customDateTimePopup).is('.dateTimeDisabled')){
toDate=this._getDateWithTime('.latestDate','.latestTime');}
if(fromDate&&toDate&&(fromDate>toDate)){
this._showDatepickerError(this.DATE_RANGE_ERROR_MSG);
return false;}else{
this._clearDatepickerErrors();
this._datePickerMode=true;
this._customEarliestDate=fromDate;
this._customLatestDate=toDate;
this._setActivatorText(fromDate,toDate);
this._fireAbsolute(fromDate,toDate);
return true;}
break;}},
_fireCustom:function(earliest,latest){
this._selectedRange=new Splunk.TimeRange(earliest,latest);
$('body').trigger('menuOpening');
if(Splunk.util.normalizeBoolean(this.getParam('searchWhenChanged'))){
this.pushContextToChildren();}else{
this.setChildContextFreshness(false);}
this._activator.text(this.CUSTOM_TIME_LABEL);},
_fireAbsolute:function(fromDate,toDate){
var f=Splunk.util.getConfigValue("SEARCH_RESULTS_TIME_FORMAT");
var earliestEpochTime=null;
if(fromDate)
{
var earliestDateTime=new splunk.time.DateTime(fromDate.strftime(f));
earliestDateTime.setTimeZone(this._timeZone);
earliestEpochTime=earliestDateTime.getTime();}
var latestEpochTime=null;
if(toDate)
{
var latestDateTime=new splunk.time.DateTime(toDate.strftime(f));
latestDateTime.setTimeZone(this._timeZone);
latestEpochTime=latestDateTime.getTime();}
this._selectedRange=new Splunk.TimeRange(earliestEpochTime,latestEpochTime);
$('body').trigger('menuOpening');
if(Splunk.util.normalizeBoolean(this.getParam('searchWhenChanged'))){
this.pushContextToChildren();}else{
this.setChildContextFreshness(false);}},
_getDateWithTime:function(datepicker,timefield){
dateWithTime=$(datepicker,this._customDateTimePopup).datepicker('getDate');
t=$(timefield,this._customDateTimePopup);
var hours=t.find('.hours').val()||0;
var minutes=t.find('.minutes').val()||0;
var seconds=t.find('.seconds').val()||0;
var milliseconds=t.find('.milliseconds').val()||0;
dateWithTime.setHours(hours,minutes,seconds,milliseconds);
return dateWithTime;},
getResults:function($super){
this._selectedRange=null;
return $super()},
renderResults:function(xmlDoc){
responseDict=JSON.parse(xmlDoc.toString());
var earliestEpochTime=responseDict["earliestEpochTime"]||null;
var latestEpochTime=responseDict["latestEpochTime"]||null;
var earliestOffset=null;
var latestOffset=null;
if(responseDict["earliestOffset"]){
earliestOffset=parseInt(responseDict["earliestOffset"][0],10);}
if(responseDict["latestOffset"]){
latestOffset=parseInt(responseDict["latestOffset"][0],10);}
this._selectedRange=new Splunk.TimeRange(earliestEpochTime,latestEpochTime,earliestOffset,latestOffset);
$('body').trigger('menuOpening');
if(Splunk.util.normalizeBoolean(this.getParam('searchWhenChanged'))){
this.pushContextToChildren();}else{
this.setChildContextFreshness(false);}},
getResultParams:function(){
var f=Splunk.util.getConfigValue("SEARCH_RESULTS_TIME_FORMAT")
var params={};
if(this._customEarliestDate)params["earliest"]=this._customEarliestDate.strftime(f);
if(this._customLatestDate)params["latest"]=this._customLatestDate.strftime(f);
return params;},
_showDatepickerError:function(errMsg){
this._clearDatepickerErrors();
$('.datepickerErrMsg',this._customDateTimePopup).append('<p>'+errMsg+'</p>');},
_clearDatepickerErrors:function(){
$('.datepickerErrMsg',this._customDateTimePopup).empty();},
_setActivatorText:function(fromDate,toDate){
var newText=null;
var hasFromDate=(fromDate instanceof Date);
var hasToDate=(toDate instanceof Date);
var isFromDay=(hasFromDate&&(fromDate.getHours()==0)&&(fromDate.getMinutes()==0)&&(fromDate.getSeconds()==0)&&(fromDate.getMilliseconds()==0));
var isToDay=(hasToDate&&(toDate.getHours()==0)&&(toDate.getMinutes()==0)&&(toDate.getSeconds()==0)&&(toDate.getMilliseconds()==0));
if(hasFromDate&&hasToDate)
{
if(isFromDay&&isToDay)
{
var toDatePrev=new Date(toDate.getFullYear(),toDate.getMonth(),toDate.getDate()-1);
if(fromDate.getTime()<toDatePrev.getTime())
newText=format_date(fromDate,"medium")+" - "+format_date(toDatePrev,"medium");
else
newText=format_date(fromDate,"medium");}}
else if(hasFromDate)
{
if(isFromDay)
newText=this.DATES_AFTER_TEXT+" "+format_date(fromDate,"medium");}
else if(hasToDate)
{
if(isToDay)
newText=this.DATES_BEFORE_TEXT+" "+format_date(toDate,"medium");}
if(!newText)
newText=this.CUSTOM_TIME_LABEL;
this._activator.text(newText);},
getModifiedContext:function(){
var range=null;
if(this._selectedRange){
range=this._selectedRange;}else{
this.logger.error("Assertion Failed - we have no selected range.  If this occurs with the calendar-pickers its a possible race condition.");
range=new Splunk.TimeRange();}
var context=this.getContext();
var search=context.get("search");
search.abandonJob();
search.setTimeRange(range);
context.set("search",search);
return context;},
onContextChange:function(){
if(!this.getContext().has("from_history"))
return;
var search=this.getContext().get("search");
var range=search.getTimeRange();
if(range&&!(range._constructorArgs[0]==null&&range._constructorArgs[1]==null)){
this._datePickerMode=false;
this._insertNewMenuItem(range);}},
applyContext:function(context){
var search=context.get("search");
var range=search.getTimeRange();
var RECONCILE_TIME_INTENTIONS=false;
if(RECONCILE_TIME_INTENTIONS){
var timeIntentionToString=function(search,intentionName){
var intention=search.getIntentionReference(intentionName);
if(intention){
var arg=intention["arg"];
return Splunk.TimeRange.relativeArgsToString(arg["count"],arg["unit"],arg["snapUnit"]);}
return false;}
var earliestIntentionTerm=timeIntentionToString(search,"earliesttime");
var latestIntentionTerm=timeIntentionToString(search,"latesttime");
var needToRenormalize=earliestIntentionTerm||latestIntentionTerm;
if(needToRenormalize){
var earliestArg=earliestIntentionTerm||range.getEarliestTimeTerms();
var latestArg=latestIntentionTerm||range.getLatestTimeTerms();
range=new Splunk.TimeRange(earliestArg,latestArg);}}
var earliest=range.getEarliestTimeTerms()||null;
var latest=range.getLatestTimeTerms()||null;
if(!this.isPageLoadComplete()){
if(earliest||latest){
var moduleInstance=this;
var foundAMatch=false;
var self=this;
this._menu.getMenu().find('.timeRangePreset a').each(function(){
var thisEarliest=$(this).attr(self.EARLIEST_TIME_ATTR)||null;
var thisLatest=$(this).attr(self.LATEST_TIME_ATTR)||null;
var thisRange=new Splunk.TimeRange(thisEarliest,thisLatest);
if(range.equalToRange(thisRange)){
moduleInstance._activator.text($(this).text())
moduleInstance._datePickerMode=false;
moduleInstance._selectedRange=range;
foundAMatch=true;
return true;}});
if(foundAMatch){
return;}
else{
this._insertNewMenuItem(range);
return;}}
this._selectedRange=new Splunk.TimeRange();
this._activator.text(this.ALL_TIME_LABEL);}else if(range&&!(range._constructorArgs[0]==null&&range._constructorArgs[1]==null)){
this._datePickerMode=false;
this._insertNewMenuItem(range);
this.baseContext=null;
this.pushContextToChildren();}
return false;},
_insertNewMenuItem:function(timeRange){
var newOption={};
var link=$("<a>").attr(this.EARLIEST_TIME_ATTR,timeRange.getEarliestTimeTerms()).attr(this.LATEST_TIME_ATTR,timeRange.getLatestTimeTerms()).text(timeRange.toConciseString())
if($(".customTimeRange",this.container).size()==3){
$(".customTimeRange:first",this.container).remove();}
$("<li>").addClass("timeRangePreset customTimeRange").append(link).appendTo($(".innerMenuWrapper",this.container)[0]);
this._selectedRange=timeRange;
if(timeRange.getDuration()==-1){
this._activator.text(timeRange.toConciseString());}else{
this._activator.text(this.CUSTOM_TIME_LABEL);}},
_onMenuClick:function(evt){
var t=evt.target;
if($(t).parent('li').hasClass('timeRangePreset')){
this._setSelectedRangeToPreset($(t));
this.setParam('default',this._getRawLabel($(t).text()));
if(Splunk.util.normalizeBoolean(this.getParam('searchWhenChanged'))){
this.pushContextToChildren();}else{
this.setChildContextFreshness(false);}
$('.timeRangeActivator',this.container).text($(t).text());}},
_setSelectedRangeToPreset:function(presetElement){
var earliest=presetElement.attr(this.EARLIEST_TIME_ATTR);
var latest=presetElement.attr(this.LATEST_TIME_ATTR);
this._selectedRange=new Splunk.TimeRange(earliest,latest);}});;}catch(e){var err="The module 'Splunk.Module.TimeRangePicker' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.TimeRangePicker",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.StaticContentSample=$.klass(Splunk.Module,{
initialize:function($super,container){
$super(container);
$('a',this.container).each(function(i,el){
var new_url=$(el).attr('href');
if(!new_url||new_url.indexOf('/')!==0)
return;
new_url=Splunk.util.make_url(new_url);
$(el).attr('href',new_url);});}});;}catch(e){var err="The module 'Splunk.Module.StaticContentSample' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.StaticContentSample",err);});}try{i18n_register({"catalog":{"+-About Splunk":"About Splunk","+-Done":"Done"},"plural":function(n){return n==1?0:1;}});
Splunk.Module.AppBar=$.klass(Splunk.Module,{
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.NEVER_ALLOW;
this.parentEnforcement=Splunk.Module.NEVER_ALLOW;
this.logger=Splunk.Logger.getLogger("Splunk.Module.AppBar");
var menuData=[];
var unitTestListing=[];
try{
menuData=this.parseNavConfig(this._params.menuData);}catch(e){
this.logger.error("Unable to parse JSON navConfig for appbar menu",e);}
unitTestListing=this._params.unitTestListing;
this.unitTestMenu=null;
this.mainMenus=[];
this.generateMainMenus(menuData);
this.generateUnitTestMenu(unitTestListing);
this.bindEventListeners();},
onViewDataChange:function(event,data){
if(data.navConfig){
try{
var menuData=this.parseNavConfig(data.navConfig);}catch(e){
this.logger.error("Unable to parse JSON navConfig for appbar menu",e);
return;}
this.removeMainMenus();
this.generateMainMenus(menuData);
this.logger.info("onViewDataChange fired, successfully reloaded main menu data in AppBar");}},
removeMainMenus:function(){
for(var i=0;i<this.mainMenus.length;i++){
try{
this.mainMenus[i].removeMenu();}catch(e){
this.logger.error("Could not remove mainMenus item with an index of",i);}}
this.mainMenus=[];},
transposeMenuData:function(menu,viewLabel,options){
var output=[];
options=options||{};
isTop=(options.hasOwnProperty("isTop"))?options.isTop:false;
isActive=(options.hasOwnProperty("isActive"))?options.isActive:false;
for(var i=0;i<menu.length;i++){
var menuEntry=menu[i];
var replacement={};
if(menuEntry.hasOwnProperty("submenu")){
var transpose=this.transposeMenuData(menuEntry.submenu,viewLabel,{isActive:isActive});
var subnode=transpose.output;
var isActive=transpose.isActive;
replacement["items"]=subnode;
replacement["label"]=(menuEntry.hasOwnProperty("label"))?menuEntry.label:"";}else{
if(viewLabel==menuEntry.label){
isActive=true;}
replacement=menuEntry;
if(menuEntry['sharing']=='user'){
replacement['style']='splUserCreated';}}
if(isTop&&isActive){
replacement["isActive"]=true;}
output.push(replacement);}
return{output:output,isActive:isActive};},
parseNavConfig:function(navConfig){
var transpose=this.transposeMenuData(navConfig,Splunk.util.getCurrentViewConfig().app.label,{isTop:true});
var menuData={};
for(var i=0;i<transpose.output.length;i++){
if(transpose.output[i].hasOwnProperty("items")){
menuData["navmenu_"+i]=transpose.output[i].items;}else{
continue;}}
return menuData;},
generateMainMenus:function(menuData){
for(var key in menuData){
if(menuData.hasOwnProperty(key)){
this.mainMenus.push(
new Splunk.MenuBuilder({
containerDiv:this.container,
menuDict:menuData[key],
activator:$('#'+key),
menuClasses:'splMenu-primary '+key}));}}},
generateUnitTestMenu:function(menuData){
this.unitTestMenu=new Splunk.MenuBuilder({
containerDiv:this.container,
menuDict:menuData,
activator:$('#appBarUnitTests'),
menuClasses:'splMenu-primary'});},
bindEventListeners:function(){
$('a.aboutLink').unbind('click');
$('a.aboutLink').click(function(event){
Splunk.Popup.AboutPopup($('.aboutPopupContainer'));});}});;}catch(e){var err="The module 'Splunk.Module.AppBar' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.AppBar",err);});}try{i18n_register({"catalog":{"+-(No apps available)":"(No apps available)","+-Manage apps...":"Manage apps..."},"plural":function(n){return n==1?0:1;}});
Splunk.Module.AccountBar=$.klass(Splunk.Module,{
MAX_URI_LENGTH_IE:2048,
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.NEVER_ALLOW;
this.parentEnforcement=Splunk.Module.NEVER_ALLOW;
var appList=this.getParam('appList')||[{'label':_('(No apps available)'),'uri':'','id':''}];
var launcherApp=this.getParam('launcherApp');
var canInstallApps=this.getParam('canInstallApps');
if(appList.length==0){
this.logger.error('Unable to construct app list; no apps found');}
appList.push({'divider':'splDivider'});
if(launcherApp){
appList.push(launcherApp);}
appList.push({'label':_('Manage apps...'),'uri':Splunk.util.make_url('manager',Splunk.util.getCurrentApp(),'apps','local')});
if(canInstallApps){
appList.push({'label':_('Find more apps...'),'uri':Splunk.util.make_url('manager',Splunk.util.getCurrentApp(),'apps','remote')});}
if($('#applicationsMenuActivator',this.container).length){
var appsMenu=new Splunk.MenuBuilder({
containerDiv:this.container,
menuDict:appList,
activator:$('#applicationsMenuActivator',this.container),
menuClasses:'splMenu-secondary'});}
$('.alerts_opener',container).click(function(){
Splunk.window.openAerts(this.href);
return false;});
$('.job_manager_opener',container).click(function(){
Splunk.window.openJobManager();
return false;});
var self=this;
$('.user_options_opener',container).click(function(){
var path=window.location.href.replace(/https?:\/\/[^\/]+\/[^\/]+/,"");
if(/authentication\/changepassword/.exec(path))
return false;
var redirectUrl=this.href+'&redirect_override='+encodeURIComponent(path);
if($.browser.msie&&redirectUrl.length>self.MAX_URI_LENGTH_IE){
redirectUrl=this.href+'&redirect_override='+encodeURIComponent(path.split("#")[0]);}
window.location=redirectUrl;
return false;});
$('.wall_opener',container).click(function(){
Splunk.Popup.Wall();
return false;});
$('.splIcon-close',container).click(function(){
window.close();
return false;});
var cancelJobsOnLogoClick=Splunk.util.normalizeBoolean(this._params.cancelJobsOnLogoClick);
if(cancelJobsOnLogoClick){
$('.appLogo',container).click(function(event){
var target_uri=$(this).attr("href");
var jobs=Splunk.Globals.Jobber.listJobs(function(job){
return(job.canBeAutoCancelled());});
if(jobs.length>0){
jobs.cancel(function(){
if(target_uri){
document.location=target_uri;
return true;}});
if(target_uri){
event.preventDefault();
return false;}}});}}});;}catch(e){var err="The module 'Splunk.Module.AccountBar' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.AccountBar",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.GenericHeader=$.klass(Splunk.Module,{});;}catch(e){var err="The module 'Splunk.Module.GenericHeader' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.GenericHeader",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});
Splunk.Module.Message=$.klass(Splunk.Module,{
EXCLUDE_LEVELS:[],
EXTERNAL_LINK_REX:/\[(\!?)(\w+\:\/\/[^\s]+)\s+([^\]]+)\]/g,
INTERNAL_LINK_REX:/\[\[(\!?)([^\|]+)\|([^\]]+)\]\]/g,
TARGET_BLANK_TOKEN_REX:/#~#!#~#/g,
TARGET_SAME_TOKEN_REX:/\s*#~##~#/g,
SERVER_DELETE_RESOURCE:Splunk.util.make_url("/api/messages/delete"),
initialize:function($super,container){
$super(container);
this.logger=Splunk.Logger.getLogger("message.js");
this.displayedMessages=[];
this.allMessages=[];
if(this._params['filter']=="*"){
this.maxQueueSize=20;
this.defaultDisplaySize=3;}else{
this.maxSize=parseInt(this._params['maxSize'],10);
this.defaultDisplaySize=this.maxSize;
this.maxQueueSize=this.maxSize;}
this.selectedDisplaySize=this.defaultDisplaySize;
this.clearOnJobDispatch=Splunk.util.normalizeBoolean(this._params['clearOnJobDispatch']);
this.defaults=this._params['default']||[];
this.filter=this._params['filter'];
this.levels={};
switch((""+this._params['level']).toLowerCase()){
case'*':
this.levels=null;
break;
default:
case'debug':
this.levels['debug']=1;
case'info':
this.levels['info']=1;
case'warn':
this.levels['warn']=1;
case'error':
this.levels['error']=1;
case'fatal':
this.levels['fatal']=1;}
this.list=$(".MessageList",this.container);
var self=this;
$("a.remove",this.container).live('click',function(){
var message_id=$(this).attr("data-id");
if($(this).hasClass("splunkd")){
$.ajax({
type:"POST",
url:self.SERVER_DELETE_RESOURCE,
dataType:"text",
data:"message_id="+message_id,
error:function(){self.onMessageDeleted(message_id);},
success:function(){self.onMessageDeleted(message_id);}});}else{
self.onMessageDeleted(message_id);}
return false;});
$("a.showall",this.container).live('click',function(){
self.onShowAll();});
$("a.hide",this.container).live('click',function(){
self.onHide();});
this.messenger=Splunk.Messenger.System.getInstance();
this.messenger.receive(this.filter,this.unshift.bind(this),undefined,true);
this.sendDefaults();
if(this.clearOnJobDispatch){
$(document).bind('jobDispatched',this.onJobDispatched.bind(this));}},
onServerMessagesError:function(data){
alert("Could not delete message: ");},
clear:function(){
var levels=arguments[0]||[];
var allMessages=[];
this.logger.warn("Clearing messages with the exclusion of levels",levels);
for(var i=0;i<this.allMessages.length;i++){
var message=this.allMessages[i];
if($.inArray(message.level,levels)!=-1){
allMessages.push(message);}}
this.allMessages=allMessages;
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageClear",this.container);},
handleControlMessage:function(message){
switch(message.content){
case'CLEAR':
this.clear();
break;
default:
break;}},
onJobDispatched:function(event,context){
this.clear(this.EXCLUDE_LEVELS);},
getHTMLTransform:function(){
var html=[];
for(var i=0;i<this.displayedMessages.length;i++){
var message=this.displayedMessages[i];
html.push('<li class="message '+message.level+'">');
html.push('<div style="float:left">');
html.push(this.getWikiTranform(message.content));
html.push('</div>');
var myClass='';
if(isNaN(message.id)){
myClass='splunkd';
html.push('<div style="float:right"><a href="#" data-id="'+Splunk.util.escapeHtml(message.id)+'" class="remove '+myClass+'">x</a></div>');}
var dataId=Splunk.util.escapeHtml(message.id||"");
html.push('<div style="clear:both"/>');
html.push('</li>');}
var numhiddenmessages=this.allMessages.length-this.selectedDisplaySize;
if(numhiddenmessages>0){
var content=""+numhiddenmessages+" messages not shown.";
html.push('<li class="info">');
html.push(this.getWikiTranform(content));
html.push('<a href="#" class="showall"> Show all </a>');
html.push('</li>');}
if(this.selectedDisplaySize==this.maxQueueSize&&this.allMessages.length>this.defaultDisplaySize){
html.push('<li class="info"> <a href="#" class="hide">Hide messages</a> </li>');}
return html.join('');},
getWikiTranform:function(str){
var text=Splunk.util.escapeHtml(str);
text=text.replace(this.EXTERNAL_LINK_REX,'<a href="$2" #~#$1#~#>$3</a>');
text=text.replace(this.INTERNAL_LINK_REX,this._generateInternalLink);
text=text.replace(this.TARGET_BLANK_TOKEN_REX,'target="_blank"');
text=text.replace(this.TARGET_SAME_TOKEN_REX,'');
return text;},
_generateInternalLink:function(str,blank_token,url,text){
url=Splunk.util.make_url(url);
return'<a href="'+url+'"#~#'+blank_token+'#~#>'+text+'</a>';},
sendDefaults:function(){
for(var i=0;i<this.defaults.length;i++){
var level=this.defaults[i].level||null;
var content=this.defaults[i].content||null;
var className=this.defaults[i].className||null;
if(level&&content&&className){
this.messenger.send(level,className,content);}else{
this.logger.error("Invalid default settings for entry with level:",level,"content:",content,"className:",className);}}},
onMessageDeleted:function(message_id){
for(var j=0;j<this.allMessages.length;j++){
var id=this.allMessages[j].id;
if(message_id==id){
this.allMessages.splice(j,1);
j--;}}
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);},
onShowAll:function(){
this.selectedDisplaySize=this.maxQueueSize;
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);},
onHide:function(){
this.selectedDisplaySize=this.defaultDisplaySize;
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);},
unshift:function(){
var previousMessages=[].concat(this.allMessages);
for(var i=arguments.length-1;i>-1;i--){
var message=arguments[i];
if(message.control){
this.handleControlMessage(message);
continue;}
if(this.levels&&!(message.level.toLowerCase()in this.levels)){
continue;}
for(var j=0;j<this.allMessages.length;j++){
var content=this.allMessages[j].content;
var level=this.allMessages[j].level;
if(message.content==content&&message.level==level){
this.allMessages.splice(j,1);
j--;}}
this.allMessages=[{level:message.level,content:message.content,id:message.id}].concat(this.allMessages);}
this.allMessages.splice(this.maxQueueSize,this.allMessages.length-this.maxQueueSize);
this.displayedMessages=this.allMessages.slice(0,this.selectedDisplaySize);
if(!Splunk.util.objectSimilarity(previousMessages,this.displayedMessages)){
this.list.html(this.getHTMLTransform());
$(document).trigger("messageUnshift",this.container);}
return $("li",this.list).length;}});;}catch(e){var err="The module 'Splunk.Module.Message' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.Message",err);});}try{i18n_register({"catalog":{},"plural":function(n){return n==1?0:1;}});Splunk.Module.Paginator=$.klass(Splunk.Module.DispatchingModule,{
EVENTS_ENTITY_NAME:"events",
RESULTS_ENTITY_NAME:"results",
SETTINGS_MAP_ENTITY_NAME:"settings",
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.logger=Splunk.Logger.getLogger("paginator.js");
this.mergeLoadParamsIntoContext("results",["count","maxPages"]);
this.entityName=this._params['entityName'];
this.length=0;
this.offset=0;
this.resultsContainer=$(".ResultsContainer",this.container);
if($("script",this.container).length)
this.template=doT.template($("script",this.container)[0].innerHTML);
this.bindUIEvents();},
validateHierarchy:function($super){
var context=this.getContext();
if(!context.has("results.upstreamPaginator")){
return $super();}},
onBeforeJobDispatched:function(search){
if(this.entityName==this.EVENTS_ENTITY_NAME){
search.setMinimumStatusBuckets(1);}},
bindUIEvents:function(){
this.container.bind("click",this.onUIEvent.bind(this));},
getEntityCount:function(){
var count;
var context=this.getContext();
var search=context.get("search");
switch(this.entityName){
case this.EVENTS_ENTITY_NAME:
count=search.getEventAvailableCount();
break;
case this.RESULTS_ENTITY_NAME:
count=search.job.getResultCount();
break;
case this.SETTINGS_MAP_ENTITY_NAME:
count=this.length;
break;
default:
this.logger.error("Invalid module entityName value of",this.entityName);
count=0;
break;}
return count;},
getModifiedContext:function(){
var context=this.getContext();
context.set("results.offset",this.offset);
if(this.entityName==this.SETTINGS_MAP_ENTITY_NAME){
context.set("results.totalCountCallback",function(length){
this.length=(length!=null)?length:this.length;
this.getResults();}.bind(this));}
context.set("results.upstreamPaginator",this);
return context;},
getResults:function(){
var context=this.getContext();
var options={
max_items_page:context.get('results.count'),
max_pages:context.get('results.maxPages'),
item_offset:this.offset};
var paginator=new Splunk.paginator.Google(this.getEntityCount(),options);
var render=this.template({p:paginator});
this.resultsContainer.html(render);},
hasCapacity:function(){
var context=this.getContext();
return($("li.page",this.container).length<context.get("results.maxPages"));},
onJobDone:function(event){
if(this.getEntityCount()==0){
this.resultsContainer.html("");}},
onJobProgress:function(event){
if(this.hasCapacity()&&this.getEntityCount()>0){
this.getResults();}},
onOffsetChange:function(element){
element=$(element);
var resource=element.attr("href");
var query=resource.split("#")[1];
try{
this.offset=parseInt(Splunk.util.queryStringToProp(query).offset,10);}catch(err){
this.logger.error("Could not parse offset from uri.",err);
return false;}
this.pushContextToChildren();
this.getResults();
return false;},
onContextChange:function(){
this.offset=0;
var context=this.getContext();
var search=context.get("search");
if(search.isJobDispatched()){
if(this.getEntityCount()==0){
this.resultsContainer.html('');}}
var hasUpstreamPaginator=context.has("results.upstreamPaginator");
if(hasUpstreamPaginator&&context.has("results.offset")){
this.offset=context.get("results.offset");}
if(this.offset!=0&&context.has("results.offset")&&parseInt(context.get("results.offset"),10)>this.offset){
this.offset=0;}
this.getResults();},
onUIEvent:function(event){
var eventType=event.type;
var eventTarget=event.target;
if((eventType==="click")&&$(eventTarget).is("a")){
if($(eventTarget).hasClass('disabled'))return false;
var context=this.getContext();
var upstreamPaginatorReference=context.get("results.upstreamPaginator");
if(upstreamPaginatorReference){
upstreamPaginatorReference.onOffsetChange(eventTarget);
$(window).scrollTop(Math.min($(window).scrollTop(),upstreamPaginatorReference.container.offset().top));}
return this.onOffsetChange(eventTarget);}},
renderResults:function($super,htmlFragment){
if(!htmlFragment){
this.resultsContainer.html("");}else{
$super(htmlFragment);}},
resetUI:function(){
this.offset=0;
this.length=0;
this.resultsContainer.html("");},
requiresDispatch:function($super,search){
var entityName=this.getParam('entityName');
if(entityName==this.SETTINGS_MAP_ENTITY_NAME)return false;
return $super(search);}});;}catch(e){var err="The module 'Splunk.Module.Paginator' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.Paginator",err);});}try{i18n_register({"catalog":{"+-Link List cannot find the list object \"%(listObject)s\" for the list class \"%(listClass)s\".":"Link List cannot find the list object \"%(listObject)s\" for the list class \"%(listClass)s\".","+-Link List cannot find the search.":"Link List cannot find the search."},"plural":function(n){return n==1?0:1;}});Splunk.Module.LinkList=$.klass(Splunk.Module.DispatchingModule,{
SORT_BY:'labelField',
SORT_DIR:'asc',
initialize:function($super,container){
this.logger=Splunk.Logger.getLogger("link_list.js");
$super(container);
this._params['outputMode']=this._params['outputMode']||'li';
this.sortBy=this._params['initialSort']||this._params[this.SORT_BY];
this.sortDir=this._params['initialSortDir']||this.SORT_DIR;
this.initSortControls();},
onBeforeJobDispatched:function(search){
search.setMinimumStatusBuckets(1);},
getResultURL:function(params){
var context=this.getContext();
var search=context.get("search");
uri=Splunk.util.make_url('lists/jobs',search.job.getSearchId(),'results');
if(params)uri+='?'+jQuery.param(params);
return uri;},
getResultParams:function(){
var context=this.getContext();
var params={
output_mode:this._params['outputMode'],
fields:[],
sort_key:this.sortBy,
sort_dir:this.sortDir,
count:context.get('results.count'),
offset:context.get('results.offset')};
if(this._params['labelField'])params['fields'].push({'label':this._params['labelField']});
if(this._params['valueField'])params['fields'].push({'label':this._params['valueField']});
for(var i=0,j=params['fields'].length;i<j;i++){
params['fields'][i]=JSON.stringify(params['fields'][i]);}
return params;},
getResultsErrorHandler:function(xhr,msg,e){
if(xhr.status==404){
var message='';
if(this.baseContext){
message=sprintf(_('Link List cannot find the search.'));}else{
message=sprintf(_('Link List cannot find the list object "%(listObject)s" for the list class "%(listClass)s".'),this._params);}
this.resultsContainer.html(message);}},
onJobDone:function(){
this.getResults();},
onContextChange:function(){
if(!this.isPageLoadComplete()||this.haveResultParamsChanged()){
this.getResults();}},
renderResults:function(results){
$('div.LinkList.list',this.container).html(results);
this.toggleSortBy();
this.applyLinks();},
applyLinks:function(){
var selector='.LinkList.list li';
if(this._params['labelFieldSearch']&&this._params['labelFieldTarget']){
var evens=selector+' span:even';
$(evens,this.container).wrapInner('<a href="#"></a>');
$(evens,this.container).click(function(event){
this.sendSearchToView(event,'label');}.bind(this));}
if(this._params['valueFieldSearch']&&this._params['valueFieldTarget']){
var odds=selector+' span:odd';
$(odds,this.container).wrapInner('<a href="#"></a>');
$(odds,this.container).click(function(event){
this.sendSearchToView(event,'value');}.bind(this));}},
sendSearchToView:function(event,field){
var target=event.target;
if(target.tagName.toUpperCase()=='A'){
var context=this.getContext();
var search=context.get("search");
search.abandonJob();
search.setBaseSearch(this._params[field+'FieldSearch']);
var intention={"name":"addterm","arg":{}};
intention['arg'][this._params[field+'Field']]=$(target).text().replace(/(\r\n|\n|\r)/gm,"");
search.addIntention(intention);
search.sendToView(this._params[field+'FieldTarget']);
event.preventDefault();}
return false;},
toggleSortBy:function(){
if($('div.LinkList li',this.container).length>0){
$('div.LinkList.sortControls',this.container).show();}else{
$('div.LinkList.sortControls',this.container).hide();}},
initSortControls:function(){
var module=this;
function sortBy(dir,field){
module.sortDir=dir;
module.sortBy=module._params[field];
module.getResults();}
var labelFieldSort=$('span.labelFieldSortDir',this.container);
var valueFieldSort=$('span.valueFieldSortDir',this.container);
if(this._params['labelField']==this.sortBy){
labelFieldSort.html(' ('+this.sortDir+')');}else if(this._params['valueField']==this.sortBy){
valueFieldSort.html(' ('+this.sortDir+')');}
var sortLabelAsc=function(){
sortBy('asc','labelField');
valueFieldSort.html('');
labelFieldSort.html(' (asc)');};
var sortLabelDesc=function(){
sortBy('desc','labelField');
valueFieldSort.html('');
labelFieldSort.html(' (desc)');}
var sortValueAsc=function(){
sortBy('asc','valueField');
labelFieldSort.html('');
valueFieldSort.html(' (asc)');}
var sortValueDesc=function(){
sortBy('desc','valueField');
labelFieldSort.html('');
valueFieldSort.html(' (desc)');}
if(this.sortBy==this._params['labelField']&&this.sortDir=='asc'){
$('div.LinkList.sortControls a.labelFieldSort',this.container).toggle(sortLabelDesc,sortLabelAsc);}else{
$('div.LinkList.sortControls a.labelFieldSort',this.container).toggle(sortLabelAsc,sortLabelDesc);}
if(this.sortBy==this._params['valueField']&&this.sortDir=='asc'){
$('div.LinkList.sortControls a.valueFieldSort',this.container).toggle(sortValueDesc,sortValueAsc);}else{
$('div.LinkList.sortControls a.valueFieldSort',this.container).toggle(sortValueAsc,sortValueDesc);}}});;}catch(e){var err="The module 'Splunk.Module.LinkList' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.LinkList",err);});}try{i18n_register({"catalog":{"+-turn off auto-open":"turn off auto-open","+-turn on auto-open":"turn on auto-open"},"plural":function(n){return n==1?0:1;}});
Splunk.Module.SearchBar=$.klass(Splunk.Module.FieldSearch,{
TYPEAHEAD_PARAM_KEY:'useTypeahead',
ASSISTANT_PARAM_KEY:'useAssistant',
AUTO_FOCUS_KEY:'useAutoFocus',
AUTO_ASSIST_PARAM_KEY:'autoOpenAssistant',
SHOW_COMMAND_HELP_PARAM_KEY:'showCommandHelp',
SHOW_COMMAND_HISTORY_PARAM_KEY:'showCommandHistory',
SHOW_FIELD_INFO_PARAM_KEY:'showFieldInfo',
SUBMIT_BUTTON_PARAM_KEY:'useOwnSubmitButton',
MAX_SEARCH_BAR_HEIGHT_MULTIPLE:80,
MIN_WIDTH_FOR_TWO_COLUMNS:560,
initialize:function($super,container){
$super(container);
this.childEnforcement=Splunk.Module.ALWAYS_REQUIRE;
this.logger=Splunk.Logger.getLogger("SearchBar.js");
this.fieldName=false;
this.timer=false;
this.label=$('label',this.container);
this.searchFieldWrapperInner=$('.searchFieldWrapperInner',this.container);
this.initAssistant();
this.realBindEventListeners();
this.resize=new Splunk.TextareaResize(this.input,{max_lines:this.MAX_SEARCH_BAR_HEIGHT_MULTIPLE});
if(Splunk.util.normalizeBoolean(this._params[this.SUBMIT_BUTTON_PARAM_KEY])){
this.container.addClass(this.SUBMIT_BUTTON_PARAM_KEY);}
if(Splunk.util.normalizeBoolean(this._params[this.AUTO_FOCUS_KEY])){
$('textarea',this.container).focus();
this.activateSearchBar();}else{
this.deactivateSearchBar(true);}
this.onInputChange();},
initAssistant:function(){
this.assistantWrapper=$('.assistantWrapper',this.container);
this.assistantContainer=$('.assistantContainer',this.assistantWrapper);
this.assistantAutoOpener=$('.assistantAutoOpener',this.container);
this.assistantEnabled=false;
this.assistantRolloverEnabled=true;
this.assistantFillPending=false;
this.assistantNeedsUpdate=false;
this.assistantCursor=0;
this.assistantTimer=0;
this.assistantRolloverTimer=0;
if(this.getParam(this.AUTO_ASSIST_PARAM_KEY)==null){
this.setParam(this.AUTO_ASSIST_PARAM_KEY,true);}
if(this.getParam(this.SHOW_COMMAND_HELP_PARAM_KEY)==null){
this.setParam(this.SHOW_COMMAND_HELP_PARAM_KEY,true);}
if(this.getParam(this.SHOW_COMMAND_HISTORY_PARAM_KEY)==null){
this.setParam(this.SHOW_COMMAND_HISTORY_PARAM_KEY,true);}
if(this.getParam(this.SHOW_FIELD_INFO_PARAM_KEY)==null){
this.setParam(this.SHOW_FIELD_INFO_PARAM_KEY,true);}
this.assistantAutoOpener.bind('click',
function(evt){
this.setAssistantAutoOpen(!Splunk.util.normalizeBoolean(this.getParam(this.AUTO_ASSIST_PARAM_KEY)));
return false;}.bind(this));
this.setAssistantAutoOpen();},
resetUI:function(){
this.setInputField("");},
setInputField:function($super,str){
$super(str);
this.onInputChange();
this.resize._resizeSearchBar();
this.deactivateSearchBar(true);},
setAssistantHeight:function(newHeight){
this.assistantContainer.height(newHeight)
$('.saHelpWrapper',this.assistantContainer).css('min-height',newHeight);},
setAssistantWidth:function(){
assistantInner=$('.assistantInner',this.assistantContainer);
if(assistantInner.length&&(this.input.width()<this.MIN_WIDTH_FOR_TWO_COLUMNS)){
assistantInner.addClass('assistantInnerNarrow');}else{
assistantInner.removeClass('assistantInnerNarrow');}
return true;},
setAssistantAutoOpen:function(isEnabled){
if(typeof(isEnabled)=='undefined'){
isEnabled=Splunk.util.normalizeBoolean(this.getParam(this.AUTO_ASSIST_PARAM_KEY));}else{
this.setParam(this.AUTO_ASSIST_PARAM_KEY,isEnabled);}
this.updateAssistantAutoOpen();},
updateAssistantAutoOpen:function(){
var controlText=Splunk.util.normalizeBoolean(this.getParam(this.AUTO_ASSIST_PARAM_KEY))?_('turn off auto-open'):_('turn on auto-open');
this.assistantAutoOpener.text(controlText);},
openAssistant:function(){
if(!Splunk.util.normalizeBoolean(this.getParam(this.ASSISTANT_PARAM_KEY))){
return false;}
if(this.assistantFillPending)return false;
this.assistantEnabled=true;
$('.assTab',this.container).addClass('assistantEnabled');
this.assistantWrapper.addClass('assistantWrapperEnabled');
this.fillAssistant();
return true;},
closeAssistant:function(){
this.assistantContainer.hide();
this.assistantEnabled=false;
this.assistantFillPending=false;
$('.assTab',this.container).removeClass('assistantEnabled');
this.assistantWrapper.removeClass('assistantWrapperEnabled');
return true;},
toggleAssistant:function(){
this.input.focus();
if(this.assistantEnabled){
this.closeAssistant();}else{
this.openAssistant();}
return false;},
fillAssistant:function(){
if(!this.assistantEnabled)return false;
if(this.assistantFillPending){
this.assistantNeedsUpdate=true;
return false;}
var searchString=this._getUserEnteredSearch();
var namespace=Splunk.util.getCurrentApp();
this.assistantContainer.load(
Splunk.util.make_url('/api/shelper'),{'snippet':'true','namespace':namespace,'search':searchString,'useTypeahead':this.getParam(this.TYPEAHEAD_PARAM_KEY),'useAssistant':this.getParam(this.ASSISTANT_PARAM_KEY),'showCommandHelp':this.getParam(this.SHOW_COMMAND_HELP_PARAM_KEY),'showCommandHistory':this.getParam(this.SHOW_COMMAND_HISTORY_PARAM_KEY),'showFieldInfo':this.getParam(this.SHOW_FIELD_INFO_PARAM_KEY)},
this.fillAssistantCompleteCallback.bind(this));
this.assistantFillPending=true;
return true;},
fillAssistantCompleteCallback:function(){
this.assistantFillPending=false;
if(!this.assistantEnabled){
this.assistantNeedsUpdate=false;
return false;}
if(this.assistantNeedsUpdate){
this.assistantNeedsUpdate=false;
this.fillAssistant();}
this.setAssistantWidth();
this.assistantContainer.show().bgiframe().scrollTop(0);
this.setAssistantHeight(this.assistantContainer.height());
this.assistantKeywordCount=$('.sakeyword',this.assistantContainer).length;
this.assistantCursor=-1;
this.input.focus();
return true;},
selectNextKeyword:function(){
if(this.assistantCursor>=(this.assistantKeywordCount-1)){
this.assistantCursor=this.assistantKeywordCount-1;}else{
this.assistantCursor+=1;
this._highlightKeyword(this.assistantCursor);}
return true;},
selectPreviousKeyword:function(){
if(this.assistantCursor<=0){
this.assistantCursor=-1;
this.input.focus();}else{
this.assistantCursor-=1;}
this._highlightKeyword(this.assistantCursor);
return true;},
useSelectedKeyword:function(updateContents){
if(this.assistantCursor<0)return false;
var value=$('a.sakeyword',this.assistantContainer).slice(this.assistantCursor,this.assistantCursor+1).attr('replacement');
var newval=$.trim(value);
if(newval.substr(-1)!='=')newval+=' ';
this.setSearchTerm(newval);
if(updateContents)
this.fillAssistant();
return true;},
_highlightKeyword:function(keywordPosition){
var el=$('.sakeyword',this.assistantContainer).removeClass('saKeywordSelected').slice(keywordPosition,keywordPosition+1).addClass('saKeywordSelected');
if(el.length){
var win=this.assistantContainer;
var visibleWindowTop=win.scrollTop();
var visibleWindowBottom=win.scrollTop()+win.height();
var elementTop=el.position().top+visibleWindowTop;
var elementHeight=el.outerHeight();
if(elementTop<visibleWindowTop){
win.scrollTop(elementTop);}else if(elementTop+elementHeight>visibleWindowBottom){
win.scrollTop(elementTop+elementHeight-win.height());}
el.focus();}
return true;},
applyContext:function($super,context){
var search=context.get("search");
var stopPropagation=false;
if(this.isPageLoadComplete()){
if((search._intentions.length==1)&&(search._intentions[0]["name"]=="addterm")){
search._intentions[0]["name"]="toggleterm";}
var thisSearchStr=Splunk.util.trim(this._getUserEnteredSearch())||"*";
search.setBaseSearch(thisSearchStr);
context.set("search",search);
stopPropagation=true;}
var searchWasResurrected=!this.isPageLoadComplete();
search.clone().absorbIntentions(function(newQ){
this.setInputField(Splunk.util.stripLeadingSearchCommand(newQ));
if(searchWasResurrected){
this.setChildContextFreshness(false);}else{
this.pushContextToChildren();}}.bind(this));
search.clearIntentions();
context.set("search",search);
this.onInputChange();
return stopPropagation;},
isEmpty:function(){
return($.trim(this.input.attr('value')).length==0);},
_getUserEnteredSearch:function(){
var q=this.input.attr('value')||'*';
q=Splunk.util.addLeadingSearchCommand(q,true);
return q;},
setSearchTerm:function(terms){
this.input.attr('value',terms);
this.onInputChange();
this.input.focus();},
onContextChange:function(){
var context=this.getContext();
var search=context.get("search");
search.absorbIntentions(function(newQ){
this.setInputField(Splunk.util.stripLeadingSearchCommand(newQ));}.bind(this));},
getModifiedContext:function(){
var context=this.getContext();
if(!this.isEmpty()){
var search=context.get("search");
var searchTermStr=this._getUserEnteredSearch();
this.logger.info('getModifiedContext - got search=',searchTermStr);
if(this.baseContext)this.logger.warn(this.moduleType,"WARNING: clobbering base search.");
search.abandonJob();
search.setBaseSearch(searchTermStr);
context.set("search",search);}
return context;},
activateSearchBar:function(){
this.searchFieldWrapperInner.addClass('searchFieldActive');
this.assistantWrapper.show();
this.input.css('margin-top',0);
return true;},
deactivateSearchBar:function(blur){
this.searchFieldWrapperInner.removeClass('searchFieldActive');
this.assistantWrapper.hide();
if(this.resize.isMultiline())this.input.css('margin-top',-3);
if(blur)this.input.blur();
return false;},
bindEventListeners:function(){
this.searchForm.submit(this._onFormSubmit.bind(this));},
realBindEventListeners:function(){
this.input=$('textarea',this.container);
if(this.input.length==0){
this.input=$('<textarea>').appendTo(this.container);}
this.input.bind("focus",this.onInputFocus.bind(this));
this.input.bind("keyup",this.onInputCanonicalKeyUp.bind(this));
$('a.sakeyword',this.container).live("keyup",this.onKeywordCanonicalKeyUp.bind(this));
if($.browser.msie){
this.input.bind("keydown",this.onInputCanonicalKeyPress.bind(this));
this.input.bind("keypress",this.onInputErrantIEKeyPress.bind(this));
$('a.sakeyword',this.container).live("keydown",this.onKeywordCanonicalKeyPress.bind(this));}else if($.browser.safari){
this.input.bind("keydown",this.onInputCanonicalKeyPress.bind(this));
this.input.bind("keypress",this.onInputCanonicalKeyPress.bind(this));
$('a.sakeyword',this.container).live("keydown",this.onKeywordCanonicalKeyPress.bind(this));
$('a.sakeyword',this.container).live("keypress",this.onKeywordCanonicalKeyPress.bind(this));}else{
this.input.bind("keypress",this.onInputCanonicalKeyPress.bind(this));
$('a.sakeyword',this.container).live("keypress",this.onKeywordCanonicalKeyPress.bind(this));}
if(Splunk.util.normalizeBoolean(this.getParam(this.ASSISTANT_PARAM_KEY))){
$('div.assistantWrapper',this.container).show();
$('a.assistantActivator',this.container).css('display','block');
$('div.searchFieldWrapper',this.container).addClass('hasAssistant');
$('.assistantActivator',this.container).bind('click',this.toggleAssistant.bind(this));
this.assistantContainer.bind('click',
function(evt){
var target=evt.target;
if($(target).hasClass('assistantAutoOpener')){
this.setAssistantAutoOpen(!Splunk.util.normalizeBoolean(this.getParam(this.AUTO_ASSIST_PARAM_KEY)));}
if($(target).hasClass('salink')){
return true;}
for(var i=0;i<4;i++){
if(target.tagName!='A'){
target=target.parentNode;}else{
break;}}
if(target.tagName!='A'){
evt.stopImmediatePropagation();
return false;}
var searchString=$(target).attr('replacement');
if(searchString){
this.setSearchTerm(searchString);
this.fillAssistant();}
pos=this.input.attr('value').length;
if(this.input.get(0).setSelectionRange){
this.input.get(0).setSelectionRange(pos,pos);}else if(this.input.get(0).createTextRange){
var range=this.input.get(0).createTextRange();
range.collapse(true);
range.moveEnd('character',pos);
range.moveStart('character',pos);
range.select();}
return false;}.bind(this));
$(document).bind('keyup',
function(evt){
if(evt.keyCode==this.keys['ESCAPE'])this.closeAssistant();}.bind(this));
var searchBar=this;
$(document).bind('click',function(evt){
var target=$(evt.target);
if(target.attr('name')!='q'){
searchBar.closeAssistant();
searchBar.deactivateSearchBar(false);}}.bind(this));
$(".saHandle",this.container).mousedown(
function(evt){
var startY=evt.pageY;
var startHeight=searchBar.assistantContainer.height();
evt.preventDefault();
evt.stopPropagation();
$(this).bind("click.saActiveResize",
function(evt){
evt.preventDefault();
evt.stopPropagation();
return false;});
$(document).bind("mousemove.saActiveResize",
function(evt){
newHeight=startHeight-(startY-evt.pageY);
newHeight=newHeight<75?0:newHeight;
newHeight=Math.min(newHeight,500);
searchBar.setAssistantHeight(newHeight);
evt.preventDefault();
evt.stopPropagation();
return false;});
$(document).bind("mouseup.saActiveResize",
function(evt){
newHeight=startHeight-(startY-evt.pageY);
if(newHeight<75){
searchBar.closeAssistant();
searchBar.setAssistantHeight(startHeight);}
$(document).unbind(".saActiveResize");});
return false;});
$(window).bind("resize",this.setAssistantWidth.bind(this));}},
_onFormSubmit:function($super,event){
if(this.isEmpty()){
return false;}
this.baseContext=null;
return $super(event);},
onInputFocus:function(evt){
this.assistantCursor=-1;
this._highlightKeyword(this.assistantCursor);
this.activateSearchBar();
return true;},
onInputChange:function(){
if(this.isEmpty()){
this.label.show();
return true;}else{
this.label.hide();
return false;}},
onInputErrantIEKeyPress:function(evt){
if(evt.keyCode==this.keys['ENTER']){
if(evt.ctrlKey||evt.shiftKey){
return true;}
return false;}},
onInputCanonicalKeyPress:function(evt){
switch(evt.keyCode){
case this.keys['ESCAPE']:
return this.onEscape(evt);
case this.keys['TAB']:
this.closeAssistant();
this.deactivateSearchBar(false);
case this.keys['DOWN_ARROW']:
if(!evt.shiftKey)return this.onInputDownArrow(evt);
break;
case this.keys['ENTER']:
return this.onInputEnter(evt);
default:
break;}
this.setChildContextFreshness(false);
return true;},
onInputCanonicalKeyUp:function(evt){
switch(evt.keyCode){
case this.keys['ESCAPE']:
return this.onEscape(evt);
case this.keys['ENTER']:
return false;
default:
break;}
if(!this.assistantEnabled){
if(Splunk.util.normalizeBoolean(this.getParam(this.AUTO_ASSIST_PARAM_KEY))){
this.openAssistant();}}else{
clearTimeout(this.assistantTimer);
this.assistantTimer=setTimeout(this.fillAssistant.bind(this),parseInt(this.getParam('assistantDelay',200),10));}
this.onInputChange()
return true;},
onInputEnter:function(evt){
if(evt.ctrlKey||evt.shiftKey){
return true;}
if(this.assistantEnabled){
this.closeAssistant();}
this._onFormSubmit();
return false;},
onInputDownArrow:function(evt){
if(this.assistantEnabled&&this.assistantKeywordCount>0&&(!this.resize.isMultiline()||this.resize.caretIsLast())){
this.selectNextKeyword();
return false;}},
onKeywordCanonicalKeyPress:function(evt){
switch(evt.keyCode){
case this.keys['DOWN_ARROW']:
if(!evt.shiftKey)return this.onInputDownArrow(evt);
break;
case this.keys['UP_ARROW']:
return this.onKeywordUpArrow(evt);
case this.keys['TAB']:
case this.keys['ENTER']:
case this.keys['RIGHT_ARROW']:
case this.keys['SPACE_BAR']:
return this.onKeywordSelect(evt);
case this.keys['ESCAPE']:
return this.onEscape(evt);
default:
break;}
return true;},
onKeywordCanonicalKeyUp:function(evt){
switch(evt.keyCode){
case this.keys['ESCAPE']:
return this.onEscape(evt);
case this.keys['DOWN_ARROW']:
if(!evt.shiftKey)return false;
case this.keys['UP_ARROW']:
case this.keys['TAB']:
case this.keys['ENTER']:
case this.keys['LEFT_ARROW']:
case this.keys['RIGHT_ARROW']:
case this.keys['SPACE_BAR']:
return false;
default:
break;}
if(!this.assistantEnabled){
if(Splunk.util.normalizeBoolean(this.getParam(this.AUTO_ASSIST_PARAM_KEY))){
this.openAssistant();}}else{
clearTimeout(this.assistantTimer);
this.assistantTimer=setTimeout(this.fillAssistant.bind(this),parseInt(this.getParam('assistantDelay',200),10));}
return true;},
onKeywordDownArrow:function(evt){
if(this.assistantEnabled&&this.assistantKeywordCount>0){
this.selectNextKeyword();
return false;}},
onKeywordUpArrow:function(evt){
if(this.assistantEnabled&&(this.assistantKeywordCount>0)){
this.selectPreviousKeyword();
return false;}},
onKeywordSelect:function(evt){
if(this.assistantEnabled){
this.useSelectedKeyword(true);
var searchString=$(evt.target).attr('replacement');
if(searchString){
this.setSearchTerm(searchString);
this.fillAssistant();}
return false;}},
onEscape:function(evt){
this.closeAssistant();
return false;}});;}catch(e){var err="The module 'Splunk.Module.SearchBar' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.SearchBar",err);});}try{i18n_register({"catalog":{"+-Schedule for PDF delivery...":"Schedule for PDF delivery...","+-<p>Your user account does not have permission to schedule search jobs. Contact your Splunk administrator or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> for assistance.</p>":"<p>Your user account does not have permission to schedule search jobs. Contact your Splunk administrator or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> for assistance.</p>","+-Save Search":"Save Search","+-Create alert...":"Create alert...","+-Please run a search first.":"Please run a search first.","+-Failed to save search results.  The search job may have expired.":"Failed to save search results.  The search job may have expired.","+-OK":"OK","+-Get link to results...":"Get link to results...","+-Save results":"Save results","+-Save as event type...":"Save as event type...","+-<p>The PDF Report Server app is not currently installed and enabled on this server.</p><p>See <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation if you wish to use a remote PDF server, or install the PDF Report Server app on this machine by browsing for it from the Launcher.</p>":"<p>The PDF Report Server app is not currently installed and enabled on this server.</p><p>See <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation if you wish to use a remote PDF server, or install the PDF Report Server app on this machine by browsing for it from the Launcher.</p>","+-Edit dashboard...":"Edit dashboard...","+-Add to dashboard...":"Add to dashboard...","+-Save search...":"Save search...","+-Schedule for PDF Delivery":"Schedule for PDF Delivery","+-Get Link to Results":"Get Link to Results","+-Server Configuration":"Server Configuration","+-Save As Event Type":"Save As Event Type","+-Export results...":"Export results...","+-Print...":"Print...","+-Received an unexpected response '%s' while fetching the status of the PDF report server":"Received an unexpected response '%s' while fetching the status of the PDF report server","+-Build report...":"Build report...","+-<p>The PDF Report Server is installed on this server, but not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation for further details.</p>":"<p>The PDF Report Server is installed on this server, but not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation for further details.</p>","+-<p>The PDF Report Server is not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation for further details.</p>":"<p>The PDF Report Server is not currently configured for use.</p><p>Visit <b>System Settings</b>-&gt;<b>Email alert settings</b> in the manager to configure it now, or see <a href=\"%(url)s\" target=\"_blank\">Configuring the PDF Report Server</a> documentation for further details.</p>","+-Permission Denied":"Permission Denied","+-Inspect search job...":"Inspect search job...","+-These search results have been saved. You can retrieve them later via the jobs manager.":"These search results have been saved. You can retrieve them later via the jobs manager."},"plural":function(n){return n==1?0:1;}});
Splunk.namespace("Module");
Splunk.Module.TitleBar=$.klass(Splunk.Module.DispatchingModule,{
SAVED_SEARCH_FORM_CONTAINER_CLASS:'.savedSearchForm',
SAVED_SEARCH_FORM_TITLE:_('Save Search'),
SHARE_LINK_FORM_CONTAINER_CLASS:'.shareLinkForm',
SHARE_LINK_FORM_TITLE:_('Get Link to Results'),
EVENTTYPE_FORM_CONTAINER_CLASS:'.eventtypeForm',
EVENTTYPE_FORM_TITLE:_('Save As Event Type'),
REPORTBUILDER_LINK_CLASS:"resultsLink",
DISABLED_CLASS:"disabled",
PDF_STATUS_ENDPOINT:"report/is_enabled",
requiresDispatch:function(search){return false},
initialize:function($super,container){
$super(container);
this.logger=Splunk.Logger.getLogger("Splunk.Module.TitleBar");
this.messenger=Splunk.Messenger.System.getInstance();
this.canScheduleSearch=Splunk.ViewConfig.app.can_alert;
this.lastEnabled=null;
$('.editPanel button.move',this.container).bind('click',function(){
Splunk.Globals.Viewmaster.openPanelFormHelper(Splunk.util.getCurrentView(),'move');});
$('.editPanel button.add',this.container).bind('click',function(){
Splunk.Globals.Viewmaster.openPanelFormHelper(Splunk.util.getCurrentView(),'add');});
this.actionsMenuItemsDict=[];
this.actionsMenuItemsDict.push({"label":_("Save search..."),
callback:function(){
var search=this.getContext().get("search");
Splunk.Popup.SaveSearchWizard(search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
if(Splunk.util.getCurrentView()!="charting"){
this.actionsMenuItemsDict.push({"label":_("Build report..."),"enabledWhen":"progress",
callback:function(event){
this.buildReportLink();}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});}
this.actionsMenuItemsDict.push({"label":_("Add to dashboard..."),
callback:function(){
var search=this.getContext().get("search");
Splunk.Popup.DashboardWizard(search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
if(this.canScheduleSearch){
this.actionsMenuItemsDict.push({"label":_("Create alert..."),
callback:function(){
var search=this.getContext().get("search");
Splunk.Popup.AlertWizard(search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});}
if(this.canScheduleSearch){
this.actionsMenuItemsDict.push({"label":_("Schedule search..."),
callback:function(){
var search=this.getContext().get("search");
Splunk.Popup.ScheduleDigestWizard(search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
this.actionsMenuItemsDict.push({"label":_("Schedule for PDF delivery..."),"callback":this.schedulePDF.bind(this),"showInFilter":['search','dashboard','dashboard-SimpleDashboard'],"enabled":(Splunk.util.getCurrentViewConfig()['view']['hasAutoRun'])?"*":[]});}
this.actionsMenuItemsDict.push({"divider":"actionsMenuDivider","showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"label":_("Save as event type..."),"alwaysEnabled":true,
callback:this.onEventtypeForm.bind(this),"showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"divider":"actionsMenuDivider","showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"label":_("Inspect search job..."),"alwaysEnabled":true,
callback:function(event){
var context=this.getContext();
var search=context.get("search");
Splunk.window.openJobInspector(search.job.getSearchId());
return false;}.bind(this),"showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"divider":"actionsMenuDivider","showInFilter":['search'],"enabled":"*"});
this.actionsMenuItemsDict.push({"label":_("Save results"),
callback:function(event){
if(this.baseContext){
var search=this.getContext().get("search");
var self=this;
search.job.save(
function(){
self.messenger.send("info","splunk.search",_("These search results have been saved. You can retrieve them later via the jobs manager."))},
function(){
self.messenger.send("error","splunk.search",_("Failed to save search results.  The search job may have expired."));});}}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
this.actionsMenuItemsDict.push({"label":_("Get link to results..."),
callback:function(event){
var formContainer=$(this.SHARE_LINK_FORM_CONTAINER_CLASS,this.container)[0]
var title=this.SHARE_LINK_FORM_TITLE;
var search=this.getContext().get("search");
Splunk.Popup.createShareLinkForm(formContainer,title,search);}.bind(this),"showInFilter":['search'],"enabled":["progress","done"]});
this.actionsMenuItemsDict.push({"label":_("Export results..."),
callback:function(event){
var formContainer=$('.exportPopupContainer',this.container)[0];
var context=this.getContext();
var search=context.get("search");
Splunk.Popup.createExportResultsForm(formContainer,search.job);}.bind(this),"showInFilter":['search'],"enabled":["done"]});
this.actionsMenuItemsDict.push({"label":_("Print..."),
callback:function(event){
$(document).trigger("PrintPage");
return false;}.bind(this),"showInFilter":['search','dashboard','dashboard-SimpleDashboard'],"enabled":"*"});
this.messenger=Splunk.Messenger.System.getInstance();
this._showActionsMenu=Splunk.util.normalizeBoolean(this._params["showActionsMenu"]);
this._filter=Splunk.util.normalizeBoolean(this.getParam("actionsMenuFilter"))||'search';
if(this._filter=='dashboard'){
var viewObjectMode=Splunk.util.getCurrentViewConfig()['view']['objectMode'];
if(viewObjectMode=='SimpleDashboard'){
this._filter='dashboard-SimpleDashboard';}}
if(this._showActionsMenu){
this.PERMALINK_SEARCH_CLASS="permalinkSearch";
this.PERMALINK_SID_CLASS="permalinkSID";
this.REPORTBUILDER_CLASS="reportBuilderLink";
this.actionsMenu=new Splunk.MenuBuilder({
containerDiv:this.container,
menuDict:this.getEnabledActionsMenuData(this.actionsMenuItemsDict,"*"),
activator:$('.actionsMenu',this.container),
menuClasses:'splMenu-primary',
filter:this._filter});
this._initEventListeners();}},
_initEventListeners:function(){
$(document).bind('jobDispatched',this.updatePermalinks.bind(this));},
applyContext:function($super,context){
var retVal=$super(context);
if(!this.isPageLoadComplete()){
this.updatePermalinks();}
return retVal;},
schedulePDF:function(){
if(Splunk.util.getCurrentViewConfig()['view']['hasAutoRun']){
return Splunk.Popup.SchedulePDF($('.pdfPopup'),function(error){
this.messenger.send('error',this.moduleType,error);}.bind(this));}else{
return function(){};}},
renderPDF:function(){
if(window.location.href.indexOf('output=pdf')>-1){
window.location.reload();}else{
if(window.location.href.indexOf('?')>-1){
window.location.href=window.location.href+'&output=pdf';}else{
window.location.href=window.location.href+'?output=pdf';}}},
updateActionsMenu:function(enabled){
if(this.lastEnabled&&this.lastEnabled==enabled||!this._showActionsMenu){
return;}
this.lastEnabled=enabled;
var menuData=this.getEnabledActionsMenuData(this.actionsMenuItemsDict,enabled);
this.actionsMenu.updateMenu(menuData);},
getEnabledActionsMenuData:function(menuData,enabled){
var wildCard="*";
var validEnabledValues=["progress","done",wildCard];
if($.inArray(enabled,validEnabledValues)==-1){
this.logger.warn("Invalid menu enabled value of",enabled,", setting default to wildCard");
enabled=wildCard;}
var newMenu=[];
for(var i=0;i<menuData.length;i++){
var oldMenuEntry=menuData[i];
if(!oldMenuEntry.hasOwnProperty("enabled")||wildCard==oldMenuEntry.enabled||$.inArray(enabled,oldMenuEntry.enabled)!=-1){
newMenu.push(oldMenuEntry);}else{
var newMenuEntry={"label":oldMenuEntry.label,"style":this.DISABLED_CLASS,"showInFilter":oldMenuEntry.showInFilter}
newMenu.push(newMenuEntry);}}
return newMenu;},
buildReportLink:function(){
var context=this.getContext();
var search=context.get("search");
var builderLink=$(".JobStatus a."+this.REPORTBUILDER_LINK_CLASS);
if(builderLink.length<1){
this.logger.error(this.moduleType," user clicked 'build report', but we could not find the 'Build report' link in this view.");
return false;}
if(search.isJobDispatched()){
builderLink.click();
return false;}else{
alert(_("Please run a search first."));}},
updatePermalinks:function(event){
var context=this.getContext();
var search=context.get("search");
var args={};
args["q"]=Splunk.util.addLeadingSearchCommand(search.toString());
var range=search.getTimeRange();
if(range){
if(range.getEarliestTimeTerms()){
args["earliest"]=range.getEarliestTimeTerms();}
if(range.getLatestTimeTerms()){
args["latest"]=range.getLatestTimeTerms();}}
$("li."+this.PERMALINK_SEARCH_CLASS+" a",this.container).attr("href","?"+Splunk.util.propToQueryString(args));
$("li."+this.PERMALINK_SID_CLASS+" a",this.container).attr("href","?sid="+encodeURIComponent(search.job.getSearchId()));},
exportPopupAccept:function(){
this.exportForm=$(this.exportPopupHandle).find(".exForm");
return this.exportForm.submit();},
exportPopupCancel:function(){
return true;},
onJobStatusChange:function(event,status){
switch(status){
case'cancel':
this.updateActionsMenu("*");
break;
default:
break;}},
resetUI:function(){
this.updateActionsMenu("*");},
onJobDone:function(){
this.updateActionsMenu("done");},
onJobProgress:function(){
this.updateActionsMenu("progress");},
onContextChange:function(){
var context=this.getContext();
var search=context.get("search");
var savedSearchName="";
if(search.getSavedSearchName()){
savedSearchName=": "+search.getSavedSearchName();}
$("em",this.container).text(savedSearchName);},
onSavedSearchForm:function(event){
var context=this.getContext();
var search=context.get("search");
var formContainer=$(this.SAVED_SEARCH_FORM_CONTAINER_CLASS,this.container)[0]
var title=this.SAVED_SEARCH_FORM_TITLE;
Splunk.Popup.createSavedSearchForm(formContainer,title,search);},
onEventtypeForm:function(event){
var context=this.getContext();
var search=context.get("search");
var formContainer=$(this.EVENTTYPE_FORM_CONTAINER_CLASS,this.container)[0];
Splunk.Popup.createEventtypeForm(formContainer,this.EVENTTYPE_FORM_TITLE,search);}});;}catch(e){var err="The module 'Splunk.Module.TitleBar' in the 'search' app has thrown an unexpected error and may not function properly. Contact the app author or disable the app to remove this message. ";if(window.console){window.console.log(err);}$(function(){Splunk.Messenger.System.getInstance().send("error","Splunk.Module.TitleBar",err);});}