# Copyright (C) 2005-2011 Splunk Inc. All Rights Reserved.  Version 4.3.1
# DO NOT EDIT THIS FILE!
# Please make all changes to files in $SPLUNK_HOME/etc/system/local.
# To make changes, copy the section/stanza you want to change from $SPLUNK_HOME/etc/system/default
# into ../local and edit there.
#
# This file contains possible attribute and value pairs for creating
# new rest endpoints.
#

# /////////////////////////////////////////////////////////////////////////////
#  global settings
# /////////////////////////////////////////////////////////////////////////////

[global]

# indicates if auths are allowed via GET params
allowGetAuth=false

#The default handler (assuming that we have PYTHONPATH set)
pythonHandlerPath=$SPLUNK_HOME/bin/rest_handler.py



# /////////////////////////////////////////////////////////////////////////////
#  internal C++ handlers
# /////////////////////////////////////////////////////////////////////////////



[masterlm:masterlm]
match=/masterlm
requireAuthentication = false

# certificates
[admin:certificates]
match=/admin/certificates

# login
[admin:auth]
match=/auth
members = login,trustedlogin

# no auth.
[admin:auth-tokens]
match=/(authentication|admin)/auth-tokens
requireAuthentication = false

# no auth.
[admin:noauth_server-info]
match=/(server/|admin/server-)info
requireAuthentication = false

# be sure the exclude the no-auth guys here.  bit clunky.  :/
[admin:admin]
match=/admin(?!/(auth-tokens|server-info|certificates)).*

[admin:streams_group]
match = /streams
members = rtsearch,search,deployment

[streams:rtsearch]
match=/streams/rtsearch
capability=rtsearch

[streams:search]
match=/streams/search
capability=search

# deployment server related handlers.
# this handler is for downloading service classes using the streaming method.
[streams:deployment]
match=/streams/deployment
requireAuthentication=false

# this handler is for getting to the deployment server rest endpoint.
[DS:deploymentServer]
match=/deployment
requireAuthentication=false

[SBA:sba]
match=/properties($|/)
capability.get=rest_properties_get
capability.post=rest_properties_set
capability.put=rest_properties_set
capability.delete=rest_properties_set

[admin:search_group]
match = /search
members = jobs,parser,timeparser,commands,fields,tags,typeahead
# Don't need to manually register 'distributed' because it is an EAI endpoint.
# Automagic EAI sub-endpoint handling is done for us.

[admin:dist-handlers]
match=/search/distributed
members=distsearch-setup:config,distsearch-peer:peers

[asyncsearch:asyncsearch]
match=/search(?!/distributed).+
capability=search

[typeahead:typeahead]
match=/search/typeahead
capability=get_typeahead

[indexing-preview:indexing-preview]
match = /indexing/preview
capability = edit_monitor

[savedsearch:savedsearch]
match=/saved/searches

[scheduledviews:scheduledviews]
match=/scheduled/views


[input:simple]
match=/receivers/simple

[input:stream]
match=/receivers/stream
dynamic=true

[peerupload:bundle]
match=/receivers/bundle
path=$SPLUNK_HOME/var/run/searchpeers
untar=true

[broker:broker]
match=/broker
requireAuthentication=false

[clustering:clustering]
match=/clustering
requireAuthentication=false

# /////////////////////////////////////////////////////////////////////////////
#  admin section groupings
# /////////////////////////////////////////////////////////////////////////////

[admin:deployment]
match=/deployment
members = deploymentserver:server,deploymentclient:client,deploymenttenants:tenants,deploymentserverclass:serverclass,deploymentserverclass:serverclass_status

[admin:authentication_group]
match=/authentication
members = auth-tokens,users,httpauth-tokens,users:changepassword,current-context

[admin:authorization_group]
match=/authorization
members = capabilities,roles

[admin:directory]
match = /directory

[admin:providers_group]
match=/authentication/providers
members=LDAP-auth:LDAP,Scripted-auth:Scripted,Splunk-auth:Splunk,auth-services:services

[admin:licenser_group]
match=/licenser
members=licenses,pools,stacks,groups,slaves,localslave,licensermessages:messages

[admin:messages]
match=/messages

[admin:generators]
match=/generators/guid
members=random-guid:random
requireAuthentication=false

[admin:data_group]
match=/data
members = commandsconf:commands,indexes,user-prefs,lookup-table-files

[admin:tcp_forwarders_group]
match = /data/outputs/tcp
members = tcpout-default:default,tcpout-group:group,tcpout-server:server,syslog

[admin:inputs_group]
match = /data/inputs
members = monitor,script,oneshotinput:oneshot,udp

[admin:tcp_inputs_group]
match = /data/inputs/tcp
members = raw,cooked,ssl

[admin:ui_data_group]
match = /data/ui
members = views,nav,manager,quickstart,viewstates,workflow-actions,conf-times:times

[admin:props_group]
match = /data/props
members = props-extract:extractions,props-lookup:lookups,fieldaliases,sourcetype-rename

[admin:transforms_group]
match = /data/transforms
members = transforms-extract:extractions,transforms-lookup:lookups

[admin:saved_group]
match=/saved
members = savedsearch:searches,eventtypes,sourcetypes,ntags,fvtags

[admin:scheduled_group]
match=/scheduled
members = scheduledviews:views

[admin:alerts]
match=/alerts
members = alerts:fired_alerts

[admin:server_group]
match = /server
members = server-settings:settings,server-control:control,server-info:info,logger:logger

[admin:storage_group]
match = /storage
members = passwords

[admin_external:localapps-python]
handlertype=python
handlerfile=localapps.py
handleractions=create, edit

[admin_external:apptemplates]
handlertype=python
handlerfile=apptemplates.py
handleractions=list

[admin_external:appinstall]
handlertype=python
handlerfile=appinstall.py
handleractions=create

[admin:apps_group]
match=/apps
members=localapps:local,remote,apptemplates,appinstall

[admin:raw_config_group]
match=/configs
members=conf-inputs:inputs,conf-wmi:wmi,conf-deploymentclient:deploymentclient

[admin_external:file-explorer]
handlertype=python
handlerfile=filebrowser.py
handleractions=list



# /////////////////////////////////////////////////////////////////////////////
#  eai specific handler settings
# /////////////////////////////////////////////////////////////////////////////

#
# The UI for the directory service requires that an entity have manager XML
# that defines how that entity is listed and edited.
#
# As a result, entity types that completely lack manager XML are omitted from
# the directory service. Ditto for entities that cannot be edited.
#

[eai:eventtypes]
showInDirSvc = true

[eai:savedsearch]
showInDirSvc = true

[eai:conf-times]
showInDirSvc = true

[eai:views]
showInDirSvc = true

[eai:nav]
showInDirSvc = true

# No manager XML exists for manager XML itself.
[eai:manager]
showInDirSvc = false

# No manager XML exists for quickstart XML.
[eai:quickstart]
showInDirSvc = false

# Because of the possible performance impact of large numbers of viewstates, do
# not include viewstates in the directory service by default.
[eai:viewstates]
showInDirSvc = false

[eai:commandsconf]
showInDirSvc = true
desc = commands

[eai:macros]
showInDirSvc = true

# Unique tag-field-value tuples are not editable.
[eai:tags]
showInDirSvc = false

# Tags by tag name do not support ACL read or write. The UI looks bad when some
# entities support sharing and permissions while others do not.
[eai:ntags]
showInDirSvc = false

[eai:fvtags]
showInDirSvc = true

[eai:transforms-extract]
showInDirSvc = true

[eai:transforms-lookup]
showInDirSvc = true

[eai:workflow-actions]
showInDirSvc = true

# The manager XML for lookup table files does not define an edit screen.
[eai:lookup-table-files]
showInDirSvc = false

[eai:props-extract]
showInDirSvc = true

[eai:props-lookup]
showInDirSvc = true

[eai:fieldaliases]
showInDirSvc = true

[eai:sourcetype-rename]
showInDirSvc = true



# /////////////////////////////////////////////////////////////////////////////
#  script-based handlers
# /////////////////////////////////////////////////////////////////////////////

[script:RemoteAppsHandlerList]
match=/apps/remote/?$
scripttype=python
handler=appsmanager.RemoteAppsHandlerList
capability.get=rest_apps_view

[script:RemoteAppsLogin]
match=/apps/remote/login/?
scripttype=python
handler=appsmanager.RemoteAppsLogin
capability.post=rest_apps_view

[script:RemoteAppsManagerEntries]
match=/apps/remote/entries(byid)?/?
scripttype=python
handler=appsmanager.RemoteAppsManager
capability.get=rest_apps_view
capability.post=rest_apps_management
capability.delete=rest_apps_management

[script:RemoteAppsManagerCategories]
match=/apps/remote/categories/?
scripttype=python
handler=appsmanager.RemoteAppsManager
capability.get=rest_apps_view
capability.post=rest_apps_management
capability.delete=rest_apps_management

[script:XmlProperties]
match = /xmlproperties/\w+
handler = xmlproperties.List
requireAuthentication = true


# Used for test suite.  
# TODO: May need to remove before shipping
[test:test]
match=/test

# /////////////////////////////////////////////////////////////////////////////
# EAI validation rules
# /////////////////////////////////////////////////////////////////////////////

[validation:savedsearch]
action.email.sendresults = validate( is_bool('action.email.sendresults'), "Value of argument 'action.email.sendresults' must be a boolean")
action.email.sendpdf     = validate( is_bool('action.email.sendpdf'),     "Value of argument 'action.email.sendpdf' must be a boolean")
action.email.inline      = validate( is_bool('action.email.inline'),      "Value of argument 'action.email.inline' must be a boolean")
action.email.to          = validate( match('action.email.to',  "(?i)^(?:[^@\s]+@(?:[^@\s.]+\.)+[a-z]{2,})(?:\s*[,;]\s*(?:[^@\s]+@(?:[^@\s]+\.)+[a-z]{2,}))*$"), "One of the email addresses in 'action.email.to' is invalid")
alert.digest_mode        = validate( is_bool('alert.digest_mode'),       "Value of argument 'alert.digest_mode' must be a boolean")
alert.severity           = 'alert.severity'>0 AND 'alert.severity'<7
alert.suppress           = validate( is_bool('alert.suppress'),          "Value of argument 'alert.suppress' must be a boolean")
alert.suppress.period    = validate ( match('alert.suppress.period', "(?i)^(ack)|(\d+[hmsd]?)$"), "Value of argument alert.suppress.period must be of the format <integer>[smhd]? or ack")
alert.expires            = validate ( match('alert.expires',         "^\d+[hmsd]?$"), "Value of argument alert.expires must be of the format <integer>[smhd]?")


[validation:scheduledviews]
action.email.to          = validate( match('action.email.to',  "(?i)^(?:[^@\s]+@(?:[^@\s.]+\.)+[a-z]{2,})(?:\s*[,;]\s*(?:[^@\s]+@(?:[^@\s]+\.)+[a-z]{2,}))*$"), "One of the email addresses in 'action.email.to' is invalid")

[validation:conf-alert_actions]
reportServerURL         = validate( match('reportServerURL' , "(?i)(^\\s*$)|(^https?://.*/services/pdfserver/renderpdf\s*$)|(https?://[^/]+/?\s*$)"), "Invalid Remote PDF Report Server URL")
reportPaperSize         = match('reportPaperSize', "(?i)letter|legal|ledger|a2|a3|a4|a5")
reportPaperOrientation  = match('reportPaperOrientation', "(?i)portrait|landscape")
reportServerEnabled     = validate( is_bool('reportServerEnabled'), "Value of argument 'reportServerEnabled' must be a boolean")
mailserver              = validate( match('mailserver', "^([a-zA-Z]|[a-zA-Z0-9][a-zA-Z0-9_\\-.]*[a-zA-Z0-9]|[0-9a-fA-F:]*:[0-9a-fA-F:]*:[0-9a-fA-F:]*|\\[[0-9a-fA-F:]*:[0-9a-fA-F:]*:[0-9a-fA-F:]*\\])(:[1-9][0-9]*)?$"), "Invalid Mail host")
hostname                = validate( match('hostname', "^([a-zA-Z]|[a-zA-Z0-9][a-zA-Z0-9_\\-.]*[a-zA-Z0-9]|[0-9a-fA-F:]*:[0-9a-fA-F:]*:[0-9a-fA-F:]*|\\[[0-9a-fA-F:]*:[0-9a-fA-F:]*:[0-9a-fA-F:]*\\])$"), "Invalid Link hostname")


[validation:distsearch-setup]
shareBundles       = is_bool('shareBundles')
autoAddServers     = is_bool('autoAddServers')
skipOurselves      = is_bool('skipOurselves')
heartbeatPort      = is_port('heartbeatPort')
heartbeatFrequency = isint('heartbeatFrequency') AND 'heartbeatFrequency'>=0
serverTimeout      = isint('serverTimeout')      AND 'serverTimeout'>=0
statusTimeout      = isint('statusTimeout')      AND 'statusTimeout'>=0 
connectionTimeout  = isint('connectionTimeout')  AND 'connectionTimeout'>=0 
sendTimeout        = isint('sendTimeout')        AND 'sendTimeout'>=0 
receiveTimeout     = isint('receiveTimeout')     AND 'receiveTimeout'>=0
ttl                = isint('ttl')                AND 'ttl'>=0
checkTimedOutServersFrequency = isint('checkTimedOutServersFrequency') AND 'checkTimedOutServersFrequency'>=0

