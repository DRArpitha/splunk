[extractors]
conf = lib.i18n.extract_conf
flat = lib.i18n.extract_flat
xml = lib.i18n.extract_xml
views = lib.i18n.extract_view
nav = lib.i18n.extract_nav

[python: **.py]

[javascript: **.js]

[xml: **/manager/*.xml]
# sources syntax:
# <t|a>:<tagname>[:attribute_name[=attribute_value]]
# Ex1: t:key:name=helpText   - extract values of tag 'key' that has attribute 'name' set to 'helpText'
# Ex2: t:header              - extract values of tag 'header' that doesn't have any attributes
# Ex3: a:*:label             - extract values of attribute 'label' from all tags that have it
#
# Adhoc translation: 
# <sometag title="Foobar" render="True" i18nattr="title, render" /> would cause "Foobar" and "True" to be extracted.
# <sometag i18ntag="">Blablabla</sometag> would cause "Blablabla" to be extracted.
sources = t:key:name=title, t:key:name=body, t:key:name=helpText, t:key:name=exampleText, t:key:name=legend, t:key:name=label, t:key:name=labelList, t:key:name=buttonLabel, t:name, t:description, t:label, t:header, t:introText, a:*:label, t:param:name=label

[xml: **/quickstart/*.xml]
sources = t:title, t:header, t:label, t:summary

[mako: **.html]
input_encoding = utf-8

[conf: **.conf]
extract_keys = label,header_label,shortdesc,description
extract_prefix_keys = comment,commentcheat

[conf: **.conf.in]
extract_keys = label,header_label,shortdesc,description
extract_prefix_keys = comment,commentcheat

[flat: **/locale/strings.txt]

[nav: **/nav/*.xml]

[views: **/views/*.xml]
